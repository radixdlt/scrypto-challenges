import { UInt256 } from '@radixdlt/uint256';
export declare type AmountT = UInt256;
export declare enum Network {
    MAINNET = "mainnet",
    STOKENET = "stokenet",
    LOCALNET = "localnet",
    MILESTONENET = "milestonenet",
    RELEASENET = "releasenet",
    RCNET = "rcnet",
    TESTNET6 = "testnet6",
    SANDPITNET = "sandpitnet"
}
export declare const NetworkId: {
    1: Network;
    2: Network;
    3: Network;
    4: Network;
    5: Network;
    6: Network;
    7: Network;
    99: Network;
};
export declare const hrpFullSuffixLength = 3;
export declare const HRP: {
    mainnet: {
        account: string;
        validator: string;
        RRI_suffix: string;
    };
    stokenet: {
        account: string;
        validator: string;
        RRI_suffix: string;
    };
    localnet: {
        account: string;
        validator: string;
        RRI_suffix: string;
    };
    releasenet: {
        account: string;
        validator: string;
        RRI_suffix: string;
    };
    rcnet: {
        account: string;
        validator: string;
        RRI_suffix: string;
    };
    milestonenet: {
        account: string;
        validator: string;
        RRI_suffix: string;
    };
    testnet6: {
        account: string;
        validator: string;
        RRI_suffix: string;
    };
    sandpitnet: {
        account: string;
        validator: string;
        RRI_suffix: string;
    };
};
export declare type BuiltTransactionReadyToSign = Readonly<{
    blob: string;
    hashOfBlobToSign: string;
}>;
//# sourceMappingURL=_types.d.ts.map