/// <reference types="node" />
import { ResultAsync, Result } from 'neverthrow';
import { KeystoreT } from './_types';
import { SecureRandom } from '@radixdlt/util';
import { ScryptParamsT } from '../key-derivation-functions';
export declare const Keystore: {
    fromBuffer: (keystoreBuffer: Buffer) => Result<KeystoreT, Error>;
    decrypt: (input: Readonly<{
        keystore: KeystoreT;
        password: string;
    }>) => ResultAsync<Buffer, Error>;
    validatePassword: (password: string) => Result<string, Error>;
    encryptSecret: (input: Readonly<{
        secret: Buffer;
        password: string;
        memo?: string;
        kdf?: string;
        kdfParams?: ScryptParamsT;
        secureRandom?: SecureRandom;
    }>) => ResultAsync<KeystoreT, Error>;
};
//# sourceMappingURL=keystore.d.ts.map