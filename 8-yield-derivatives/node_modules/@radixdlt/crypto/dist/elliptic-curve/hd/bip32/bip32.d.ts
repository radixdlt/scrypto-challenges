import { Result } from 'neverthrow';
import { BIP32T, BIP32PathComponentT, Int32 } from './_types';
export declare const unsafeCreate: (pathComponents: BIP32PathComponentT[]) => BIP32T;
export declare const BIP32: {
    create: (pathComponents: BIP32PathComponentT[]) => Result<BIP32T, Error>;
    unsafeCreate: (pathComponents: BIP32PathComponentT[]) => BIP32T;
    fromString: (path: string) => Result<BIP32T, Error>;
    unsafeFromSimpleComponents: (pathComponents: Readonly<{
        index: Int32;
        isHardened: boolean;
    }>[]) => Result<BIP32T, Error>;
    hardener: string;
    pathSeparator: string;
};
//# sourceMappingURL=bip32.d.ts.map