export declare const sdkError: (error: unknown) => SdkError;
export declare const errorType: {
    readonly rejectedByUser: "rejectedByUser";
    readonly missingExtension: "missingExtension";
    readonly canceledByUser: "canceledByUser";
    readonly walletRequestValidation: "walletRequestValidation";
    readonly walletResponseValidation: "walletResponseValidation";
    readonly wrongNetwork: "wrongNetwork";
    readonly failedToPrepareTransaction: "failedToPrepareTransaction";
    readonly failedToCompileTransaction: "failedToCompileTransaction";
    readonly failedToSignTransaction: "failedToSignTransaction";
    readonly failedToSubmitTransaction: "failedToSubmitTransaction";
    readonly failedToPollSubmittedTransaction: "failedToPollSubmittedTransaction";
    readonly submittedTransactionWasDuplicate: "submittedTransactionWasDuplicate";
    readonly submittedTransactionHasFailedTransactionStatus: "submittedTransactionHasFailedTransactionStatus";
    readonly submittedTransactionHasRejectedTransactionStatus: "submittedTransactionHasRejectedTransactionStatus";
    readonly failedToFindAccountWithEnoughFundsToLockFee: "failedToFindAccountWithEnoughFundsToLockFee";
    readonly wrongAccountType: "wrongAccountType";
    readonly unknownWebsite: "unknownWebsite";
    readonly radixJsonNotFound: "radixJsonNotFound";
    readonly unknownDappDefinitionAddress: "unknownDappDefinitionAddress";
    readonly invalidPersona: "invalidPersona";
};
type ErrorType = keyof typeof errorType;
type GenericError<T extends ErrorType> = {
    interactionId: string;
    error: T;
    message?: string;
};
export type SdkError = GenericError<keyof typeof errorType>;
export declare const createSdkError: (error: ErrorType, interactionId: string, message?: string) => SdkError;
export {};
