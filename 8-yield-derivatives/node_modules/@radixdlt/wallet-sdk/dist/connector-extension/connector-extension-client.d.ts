import { Subjects } from './subjects';
import { AppLogger } from '../helpers/logger';
import { CallbackFns, WalletInteraction } from '../IO/schemas';
import { ResultAsync } from 'neverthrow';
import { SdkError } from '../wallet-sdk';
export type ConnectorExtensionClient = ReturnType<typeof ConnectorExtensionClient>;
export declare const ConnectorExtensionClient: (input?: Partial<{
    subjects: Subjects;
    logger: AppLogger;
}>) => {
    send: (walletInteraction: WalletInteraction, callbackFns: Partial<CallbackFns>) => ResultAsync<unknown, SdkError>;
    destroy: () => void;
    openPopup: () => void;
    extensionStatus$: import("rxjs").Observable<{
        interactionId: string;
        eventType: "extensionStatus";
        isWalletLinked: boolean;
        isExtensionAvailable: boolean;
    }>;
};
