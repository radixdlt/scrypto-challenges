import { DataRequestBuilderItem, DataRequestState } from './builders';
export type DataRequestStateClient = ReturnType<typeof DataRequestStateClient>;
export declare const DataRequestStateClient: (initialState: DataRequestState) => {
    reset: () => void;
    setState: (...items: DataRequestBuilderItem[]) => void;
    getState: () => Partial<{
        accounts: {
            numberOfAccounts: {
                quantifier: "exactly" | "atLeast";
                quantity: number;
            };
            withProof?: boolean | undefined;
            reset?: boolean | undefined;
        };
    } & {
        personaData: {
            fullName?: boolean | undefined;
            emailAddresses?: {
                quantifier: "exactly" | "atLeast";
                quantity: number;
            } | undefined;
            phoneNumbers?: {
                quantifier: "exactly" | "atLeast";
                quantity: number;
            } | undefined;
            reset?: boolean | undefined;
        };
    } & {
        persona: {
            withProof?: boolean | undefined;
        };
    }>;
    patchState: (...items: DataRequestBuilderItem[]) => void;
    removeState: (...keys: (keyof DataRequestState)[]) => void;
    toDataRequestState: (...items: unknown[]) => DataRequestState;
    state$: import("rxjs").Observable<Partial<{
        accounts: {
            numberOfAccounts: {
                quantifier: "exactly" | "atLeast";
                quantity: number;
            };
            withProof?: boolean | undefined;
            reset?: boolean | undefined;
        };
    } & {
        personaData: {
            fullName?: boolean | undefined;
            emailAddresses?: {
                quantifier: "exactly" | "atLeast";
                quantity: number;
            } | undefined;
            phoneNumbers?: {
                quantifier: "exactly" | "atLeast";
                quantity: number;
            } | undefined;
            reset?: boolean | undefined;
        };
    } & {
        persona: {
            withProof?: boolean | undefined;
        };
    }>>;
};
