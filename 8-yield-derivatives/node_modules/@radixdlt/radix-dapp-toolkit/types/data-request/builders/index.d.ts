import { AccountsDataRequest, AccountsRequestBuilder, OneTimeAccountsRequestBuilder } from './accounts';
import { PersonaRequest, PersonaRequestBuilder } from './persona';
import { OneTimePersonaDataRequestBuilder, PersonaDataRequest, PersonaDataRequestBuilder } from './persona-data';
export type DataRequestBuilderItem = AccountsRequestBuilder | PersonaDataRequestBuilder | PersonaRequestBuilder | ConfigRequestBuilder;
export type OneTimeDataRequestBuilderItem = OneTimeAccountsRequestBuilder | OneTimePersonaDataRequestBuilder;
export type DataRequestState = Partial<{
    accounts: AccountsDataRequest;
} & {
    personaData: PersonaDataRequest;
} & {
    persona: PersonaRequest;
}>;
export type ConfigRequestBuilder = {};
export declare const config: (data: DataRequestState) => {
    _toObject: () => {
        accounts?: {
            numberOfAccounts: {
                quantifier: "exactly" | "atLeast";
                quantity: number;
            };
            withProof?: boolean | undefined;
            reset?: boolean | undefined;
        } | undefined;
        personaData?: {
            fullName?: boolean | undefined;
            emailAddresses?: {
                quantifier: "exactly" | "atLeast";
                quantity: number;
            } | undefined;
            phoneNumbers?: {
                quantifier: "exactly" | "atLeast";
                quantity: number;
            } | undefined;
            reset?: boolean | undefined;
        } | undefined;
        persona?: {
            withProof?: boolean | undefined;
        } | undefined;
    };
};
export type DataRequestBuilder = {
    accounts: () => AccountsRequestBuilder;
    personaData: (input?: PersonaDataRequest) => PersonaDataRequestBuilder;
    persona: (input?: PersonaRequest) => PersonaRequestBuilder;
    config: (input: DataRequestState) => ConfigRequestBuilder;
};
export declare const DataRequestBuilder: DataRequestBuilder;
export type OneTimeDataRequestBuilder = {
    accounts: () => OneTimeAccountsRequestBuilder;
    personaData: (input?: PersonaDataRequest) => OneTimePersonaDataRequestBuilder;
};
export declare const OneTimeDataRequestBuilder: OneTimeDataRequestBuilder;
