import { ResultAsync } from 'neverthrow';
export type GatewayApiClient = ReturnType<typeof GatewayApiClient>;
export declare const GatewayApiClient: ({ basePath, dAppDefinitionAddress, applicationName, applicationVersion, }: {
    basePath: string;
    dAppDefinitionAddress?: string | undefined;
    applicationVersion?: string | undefined;
    applicationName?: string | undefined;
}) => {
    getTransactionStatus: (transactionIntentHash: string) => ResultAsync<import("@radixdlt/babylon-gateway-api-sdk").TransactionStatusResponse, Error>;
    getTransactionDetails: (transactionIntentHash: string) => ResultAsync<import("@radixdlt/babylon-gateway-api-sdk").TransactionCommittedDetailsResponse, Error>;
    getEntityDetails: (address: string) => ResultAsync<import("@radixdlt/babylon-gateway-api-sdk").StateEntityDetailsVaultResponseItem, Error>;
    getEntitiesDetails: (addresses: string[]) => ResultAsync<import("@radixdlt/babylon-gateway-api-sdk").StateEntityDetailsVaultResponseItem[], Error>;
    getEntityNonFungibleIds: ({ accountAddress, nftAddress, vaultAddress, }: {
        accountAddress: string;
        nftAddress: string;
        vaultAddress: string;
    }) => ResultAsync<import("@radixdlt/babylon-gateway-api-sdk").StateEntityNonFungibleIdsPageResponse, Error>;
    getNetworkConfiguration: () => ResultAsync<import("@radixdlt/babylon-gateway-api-sdk").NetworkConfigurationResponse, Error>;
    transactionApi: import("@radixdlt/babylon-gateway-api-sdk").Transaction;
    stateApi: import("@radixdlt/babylon-gateway-api-sdk").State;
    statusApi: import("@radixdlt/babylon-gateway-api-sdk").Status;
};
