import { type DeepMockProxy } from 'jest-mock-extended';
import { StateClient } from '../state/state';
import { ConnectButtonClient } from '../connect-button/connect-button-client';
import { WalletClient } from '../wallet/wallet-client';
import { GatewayClient } from '../gateway/gateway';
import { WalletSdk } from '@radixdlt/wallet-sdk';
import { GatewayApiClient } from '../gateway/gateway-api';
import { RequestItemClient } from '../request-items/request-item-client';
import { StorageProvider } from '../_types';
import { ConnectButtonSubjects } from '../connect-button/subjects';
import { StateSubjects } from '../state/subjects';
import { RequestItemSubjects } from '../request-items/subjects';
export type Context = {
    stateClient: StateClient;
    connectButton: ConnectButtonClient;
    walletClient: WalletClient;
    gatewayClient: GatewayClient;
    gatewayApiClient: GatewayApiClient;
    walletSdk: WalletSdk;
    requestItemClient: RequestItemClient;
    storageClient: StorageProvider;
};
export type MockContext = {
    requestItemSubjects: RequestItemSubjects;
    connectButtonSubjects: ConnectButtonSubjects;
    stateSubjects: StateSubjects;
    stateClient: StateClient;
    walletClient: WalletClient;
    requestItemClient: RequestItemClient;
    storageClient: StorageProvider;
    gatewayClient: GatewayClient;
    gatewayApiClient: DeepMockProxy<GatewayApiClient>;
    walletSdk: DeepMockProxy<WalletSdk>;
    connectButton: DeepMockProxy<ConnectButtonClient>;
};
export declare const createMockContext: () => MockContext;
