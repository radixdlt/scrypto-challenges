import { RequestItem, RequestStatusTypes } from '@radixdlt/connect-button';
import { Logger } from 'tslog';
import { RequestItemSubjects } from './subjects';
import { StorageProvider } from '../_types';
export type RequestItemClient = ReturnType<typeof RequestItemClient>;
export declare const RequestItemClient: (storageKey: string, storageClient: StorageProvider, input: {
    subjects?: RequestItemSubjects;
    logger?: Logger<unknown>;
}) => {
    add: (type: RequestItem['type']) => RequestItem;
    remove: (id: string) => void;
    cancel: (id: string) => void;
    updateStatus: ({ id, status, error, transactionIntentHash, }: {
        id: string;
        status: RequestStatusTypes;
        error?: string | undefined;
        transactionIntentHash?: string | undefined;
    }) => void;
    patch: (id: string, partialValue: Partial<RequestItem>) => void;
    reset: () => void;
    destroy: () => void;
    items$: import("rxjs").BehaviorSubject<RequestItem[]>;
    change$: import("rxjs").Observable<import("./subjects").RequestItemChange>;
};
