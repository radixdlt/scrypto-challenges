import { AmountOrUnsafeInput, Network } from '@radixdlt/primitives';
import { AccountAddressT, ResourceIdentifierT } from '@radixdlt/account';
import { Observable } from 'rxjs';
import { SimpleExecutedTransaction, SimpleTokenBalance, SimpleTokenBalances, StakePositions, Token, TransactionHistory, TransactionHistoryRequestInput, TransactionIdentifierT, UnstakePositions } from './dto';
export declare const xrd: Token;
export declare const fooToken: Token;
export declare const barToken: Token;
export declare const goldToken: Token;
export declare const radixWrappedBitcoinToken: Token;
export declare const radixWrappedEtherToken: Token;
export declare const __fallBackAlexToken: Token;
export declare const balanceOfFor: (input: Readonly<{
    token: Token;
    amount: AmountOrUnsafeInput;
}>) => SimpleTokenBalance;
export declare const balancesFor: (address: AccountAddressT, amount: number) => SimpleTokenBalances;
export declare const tokenByRRIMap: Map<ResourceIdentifierT, Token>;
export declare const castOfCharacters: AccountAddressT[];
export declare const alice: AccountAddressT;
export declare const bob: AccountAddressT;
export declare const carol: AccountAddressT;
export declare const dan: AccountAddressT;
export declare const erin: AccountAddressT;
export declare const deterministicRandomBalancesForAddress: (address: AccountAddressT) => SimpleTokenBalances;
export declare const deterministicRandomUnstakesForAddress: (address: AccountAddressT) => UnstakePositions;
export declare const deterministicRandomStakesForAddress: (address: AccountAddressT) => StakePositions;
export declare const deterministicRandomTxHistoryWithInput: (input: TransactionHistoryRequestInput) => TransactionHistory;
export declare const deterministicRandomBalances: (address: AccountAddressT) => Observable<SimpleTokenBalances>;
export declare const deterministicRandomTXHistory: (input: TransactionHistoryRequestInput) => Observable<TransactionHistory>;
export declare const deterministicRandomLookupTX: (txID: TransactionIdentifierT) => Observable<SimpleExecutedTransaction>;
export declare const deterministicRandomUnstakesForAddr: (address: AccountAddressT) => Observable<UnstakePositions>;
export declare const deterministicRandomStakesForAddr: (address: AccountAddressT) => Observable<StakePositions>;
export declare const makeThrowingRadixCoreAPI: (nodeUrl?: string | undefined) => any;
export declare const mockRadixCoreAPI: (input?: Readonly<{
    nodeUrl?: string | undefined;
    network?: Network | undefined;
}> | undefined) => any;
export declare const mockedAPI: Observable<any>;
//# sourceMappingURL=mockRadix.d.ts.map