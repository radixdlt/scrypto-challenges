import { LitElement } from 'lit';
import './popover/popover';
import './button/button';
import './card/card';
import './link/link';
import './pages/not-connected';
import './pages/sharing';
import './pages/requests';
import { Account, PersonaData, RadixButtonStatus, RadixButtonTheme, RequestItem } from '../_types';
export declare class ConnectButton extends LitElement {
    theme: RadixButtonTheme;
    dAppName: string;
    personaLabel: string;
    connected: boolean;
    status: RadixButtonStatus;
    loggedInTimestamp: string;
    showPopoverMenu: boolean;
    requestItems: RequestItem[];
    accounts: Account[];
    personaData: PersonaData[];
    isMobile: boolean;
    isWalletLinked: boolean;
    isExtensionAvailable: boolean;
    fullWidth: boolean;
    activeTab: 'sharing' | 'requests';
    mode: 'light' | 'dark';
    avatarUrl: string;
    compact: boolean;
    get hasSharedData(): boolean;
    windowClickEventHandler: (event: MouseEvent) => void;
    constructor();
    connectedCallback(): void;
    disconnectedCallback(): void;
    private togglePopoverMenu;
    private closePopover;
    private connectButtonTemplate;
    private connectTemplate;
    private renderSharingTemplate;
    private renderRequestItemsTemplate;
    private popoverTemplate;
    render(): import("lit").TemplateResult<1>;
    static styles: import("lit").CSSResult;
}
declare global {
    interface HTMLElementTagNameMap {
        'radix-connect-button': ConnectButton;
    }
}
