import { ResultAsync } from 'neverthrow';
import { OpenApiClientCall } from './open-api-client';
import { OpenRPCClientCall } from './open-rpc-client';
declare type TransportType = 'json-rpc' | 'open-api';
export declare type Call<Methods, Params, Return> = <Methods, Params, Return>(method: Methods, param: Params, headers?: Record<string, string>) => ResultAsync<Return, Error>;
export declare type Transport<T extends TransportType> = {
    type: T;
    call: T extends 'open-api' ? OpenApiClientCall : OpenRPCClientCall;
};
export declare type Client<T extends TransportType> = (url: URL) => Transport<T>;
export {};
//# sourceMappingURL=_types.d.ts.map