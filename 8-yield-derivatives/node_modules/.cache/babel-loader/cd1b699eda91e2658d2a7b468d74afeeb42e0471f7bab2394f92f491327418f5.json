{"ast":null,"code":"/** PURE_IMPORTS_START _isArray PURE_IMPORTS_END */\nimport { isArray } from './isArray';\nexport function isNumeric(val) {\n  return !isArray(val) && val - parseFloat(val) + 1 >= 0;\n}","map":{"version":3,"names":["isArray","isNumeric","val","parseFloat"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/radixdlt/node_modules/rxjs/src/internal/util/isNumeric.ts"],"sourcesContent":["import { isArray } from './isArray';\n\nexport function isNumeric(val: any): val is number | string {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n"],"mappings":"AAAA;AAEA,SAAMA,OAAU,mBAAkB;OAKhC,SAAQC,SAAYA,CAAAC,GAAK;EAC1B,QAAAF,OAAA,CAAAE,GAAA,KAAAA,GAAA,GAAAC,UAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}