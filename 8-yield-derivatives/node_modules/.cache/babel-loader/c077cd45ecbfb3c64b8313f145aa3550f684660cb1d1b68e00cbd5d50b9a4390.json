{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function scheduleArray(input, scheduler) {\n  return new Observable(function (subscriber) {\n    var sub = new Subscription();\n    var i = 0;\n    sub.add(scheduler.schedule(function () {\n      if (i === input.length) {\n        subscriber.complete();\n        return;\n      }\n      subscriber.next(input[i++]);\n      if (!subscriber.closed) {\n        sub.add(this.schedule());\n      }\n    }));\n    return sub;\n  });\n}","map":{"version":3,"names":["Observable","Subscription","scheduleArray","input","scheduler","subscriber","sub","i","add","schedule","length","complete","next","closed"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/radixdlt/node_modules/rxjs/src/internal/scheduled/scheduleArray.ts"],"sourcesContent":["import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let i = 0;\n    sub.add(scheduler.schedule(function () {\n      if (i === input.length) {\n        subscriber.complete();\n        return;\n      }\n      subscriber.next(input[i++]);\n      if (!subscriber.closed) {\n        sub.add(this.schedule());\n      }\n    }));\n    return sub;\n  });\n}\n"],"mappings":"AAAA;AAEA,SAASA,UAAA,QAAc,eAAM;AAE7B,SAAMC,YAAU,QAAa,iBAAiD;OAC5E,SAAWC,aAAcA,CAAAC,KAAA,EAAAC,SAAU;SACjC,IAASJ,UAAO,WAAcK,UAAC;IAC/B,IAAIC,GAAC,GAAK,IAAAL,YAAA;IACV,IAAIM,CAAA,GAAI;QACNC,GAAA,CAAIJ,SAAM,CAAAK,QAAY,aAAE;UACtBF,CAAA,KAAAJ,KAAW,CAAAO,MAAA,EAAQ;QACnBL,UAAO,CAAAM,QAAA;QACR;MACD;MACAN,UAAK,CAAAO,IAAU,CAACT,KAAA,CAAMI,CAAA,EAAE;UACtB,CAAAF,UAAQ,CAAIQ,MAAC;QACdP,GAAA,CAAAE,GAAA,MAAAC,QAAA;MACC;IACJ;IACC,OAAAH,GAAA;EACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}