{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar _1 = require(\".\");\nvar RadixUtil_1 = require(\"../common/RadixUtil\");\nvar RadixSerializableObject = /** @class */function () {\n  function RadixSerializableObject() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    this.version = 100;\n    // Empty constructor\n  }\n  RadixSerializableObject.fromJSON = function (json) {\n    // So that we can have constructors for the different classes\n    var obj = Object.create(this.prototype);\n    if (json) {\n      for (var key in json) {\n        if (key === 'constructor' || key === 'serializationProperties') {\n          continue;\n        }\n        obj[key] = json[key];\n      }\n    }\n    return obj;\n  };\n  Object.defineProperty(RadixSerializableObject.prototype, \"serializer\", {\n    get: function () {\n      return this.constructor.SERIALIZER;\n    },\n    set: function (_) {\n      // Do nothing\n    },\n    enumerable: true,\n    configurable: true\n  });\n  RadixSerializableObject.prototype.toJSON = function () {\n    var e_1, _a;\n    var constructor = this.constructor;\n    var output = {\n      serializer: constructor.SERIALIZER\n    };\n    var serializationProps = Reflect.getMetadata(_1.JSON_PROPERTIES_KEY, this);\n    try {\n      for (var serializationProps_1 = tslib_1.__values(serializationProps), serializationProps_1_1 = serializationProps_1.next(); !serializationProps_1_1.done; serializationProps_1_1 = serializationProps_1.next()) {\n        var key = serializationProps_1_1.value;\n        var serialized = _1.RadixSerializer.toJSON(this[key]);\n        if (!RadixUtil_1.isEmpty(serialized)) {\n          output[key] = serialized;\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (serializationProps_1_1 && !serializationProps_1_1.done && (_a = serializationProps_1.return)) _a.call(serializationProps_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    return output;\n  };\n  RadixSerializableObject.prototype.toDSON = function () {\n    return _1.RadixSerializer.toDSON(this);\n  };\n  RadixSerializableObject.prototype.encodeCBOR = function (encoder) {\n    var e_2, _a;\n    // Streaming encoding for maps\n    var serializationProps = Reflect.getMetadata(_1.DSON_PROPERTIES_KEY, this);\n    if (!encoder.push(Buffer.from([191]))) {\n      return false;\n    }\n    try {\n      for (var serializationProps_2 = tslib_1.__values(serializationProps), serializationProps_2_1 = serializationProps_2.next(); !serializationProps_2_1.done; serializationProps_2_1 = serializationProps_2.next()) {\n        var prop = serializationProps_2_1.value;\n        if (RadixUtil_1.isEmpty(this[prop])) {\n          continue;\n        }\n        if (!encoder.pushAny(prop)) {\n          return false;\n        }\n        if (!encoder.pushAny(this[prop])) {\n          return false;\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (serializationProps_2_1 && !serializationProps_2_1.done && (_a = serializationProps_2.return)) _a.call(serializationProps_2);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n    if (!encoder.push(Buffer.from([0xFF]))) {\n      return false;\n    }\n    return true;\n  };\n  RadixSerializableObject.prototype.getHash = function () {\n    return RadixUtil_1.radixHash(this.toDSON());\n  };\n  RadixSerializableObject.prototype.getSize = function () {\n    return this.toDSON().length;\n  };\n  RadixSerializableObject.SERIALIZER = '';\n  tslib_1.__decorate([_1.includeJSON, _1.includeDSON, tslib_1.__metadata(\"design:type\", Object)], RadixSerializableObject.prototype, \"version\", void 0);\n  tslib_1.__decorate([_1.includeDSON, tslib_1.__metadata(\"design:type\", Object), tslib_1.__metadata(\"design:paramtypes\", [Object])], RadixSerializableObject.prototype, \"serializer\", null);\n  return RadixSerializableObject;\n}();\nexports.RadixSerializableObject = RadixSerializableObject;","map":{"version":3,"names":["_1","require","RadixUtil_1","RadixSerializableObject","args","_i","arguments","length","version","fromJSON","json","obj","Object","create","prototype","key","defineProperty","get","constructor","SERIALIZER","set","_","toJSON","output","serializer","serializationProps","Reflect","getMetadata","JSON_PROPERTIES_KEY","serializationProps_1","tslib_1","__values","serializationProps_1_1","next","done","value","serialized","RadixSerializer","isEmpty","toDSON","encodeCBOR","encoder","DSON_PROPERTIES_KEY","push","Buffer","from","serializationProps_2","serializationProps_2_1","prop","pushAny","getHash","radixHash","getSize","__decorate","includeJSON","includeDSON","exports"],"sources":["../../../../src/modules/atommodel/RadixSerializableObject.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}