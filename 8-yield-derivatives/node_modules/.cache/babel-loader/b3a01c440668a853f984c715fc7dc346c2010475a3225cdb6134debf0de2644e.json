{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar buffer_reader_1 = tslib_1.__importDefault(require(\"buffer-reader\"));\nvar elliptic_1 = tslib_1.__importDefault(require(\"elliptic\"));\nvar crypto_1 = tslib_1.__importDefault(require(\"crypto\"));\nvar ec = new elliptic_1.default.ec('secp256k1');\nvar RadixECIES = /** @class */function () {\n  function RadixECIES() {}\n  RadixECIES.decrypt = function (privKey, encrypted) {\n    var reader = new buffer_reader_1.default(encrypted);\n    var iv = reader.nextBuffer(16);\n    var ephemPubKeyEncoded = reader.nextBuffer(reader.nextUInt8());\n    var ciphertext = reader.nextBuffer(reader.nextUInt32BE());\n    var MAC = reader.nextBuffer(32);\n    var ephemPubKey = ec.keyFromPublic(ephemPubKeyEncoded).getPublic();\n    var px = ec.keyFromPrivate(privKey).derive(ephemPubKey);\n    // Double hash to prevent length extension attacks\n    var hash = crypto_1.default.createHash('sha512').update(crypto_1.default.createHash('sha512').update(px.toArrayLike(Buffer)).digest()).digest();\n    var encryptionKey = hash.slice(0, 32);\n    var MACKey = hash.slice(32);\n    var computedMAC = this.calculateMAC(MACKey, iv, ephemPubKeyEncoded, ciphertext);\n    // Verify MAC\n    if (!computedMAC.equals(MAC)) {\n      throw new Error('MAC mismatch');\n    }\n    var plaintext = this.AES256CbcDecrypt(iv, encryptionKey, ciphertext);\n    return plaintext;\n  };\n  RadixECIES.encrypt = function (pubKeyTo, plaintext) {\n    var ephemPrivKey = ec.keyFromPrivate(crypto_1.default.randomBytes(32));\n    var ephemPubKey = ephemPrivKey.getPublic();\n    var ephemPubKeyEncoded = Buffer.from(ephemPubKey.encode('array', true));\n    // Every EC public key begins with the 0x04 prefix before giving the location of the two point on the curve\n    // const px = ephemPrivKey.derive(ec.keyFromPublic(Buffer.concat([Buffer.from([0x04]), pubKeyTo])).getPublic())\n    var px = ephemPrivKey.derive(ec.keyFromPublic(pubKeyTo).getPublic());\n    // Double hash to preven lenght extension attacks\n    var hash = crypto_1.default.createHash('sha512').update(crypto_1.default.createHash('sha512').update(px.toArrayLike(Buffer)).digest()).digest();\n    var iv = crypto_1.default.randomBytes(16);\n    var encryptionKey = hash.slice(0, 32);\n    var MACKey = hash.slice(32);\n    var ciphertext = this.AES256CbcEncrypt(iv, encryptionKey, plaintext);\n    var MAC = this.calculateMAC(MACKey, iv, ephemPubKeyEncoded, ciphertext);\n    var offset = 0;\n    var serializedCiphertext = Buffer.alloc(iv.length + 1 + ephemPubKeyEncoded.length + 4 + ciphertext.length + MAC.length);\n    // IV\n    iv.copy(serializedCiphertext, 0);\n    offset += iv.length;\n    // Ephemeral key\n    serializedCiphertext.writeUInt8(ephemPubKeyEncoded.length, offset);\n    offset++;\n    ephemPubKeyEncoded.copy(serializedCiphertext, offset);\n    offset += ephemPubKeyEncoded.length;\n    // Ciphertext\n    serializedCiphertext.writeUInt32BE(ciphertext.length, offset);\n    offset += 4;\n    ciphertext.copy(serializedCiphertext, offset);\n    offset += ciphertext.length;\n    // MAC\n    MAC.copy(serializedCiphertext, offset);\n    return serializedCiphertext;\n  };\n  RadixECIES.calculateMAC = function (MACKey, iv, ephemPubKeyEncoded, ciphertext) {\n    var dataToMAC = Buffer.concat([iv, ephemPubKeyEncoded, ciphertext]);\n    return crypto_1.default.createHmac('sha256', MACKey).update(dataToMAC).digest();\n  };\n  RadixECIES.encryptForMultiple = function (recipientsPublicKeys, plaintext) {\n    var _this = this;\n    // Generate key pair        \n    var ephemeral = ec.genKeyPair();\n    var ephemeralPriv = Buffer.from(ephemeral.getPrivate('hex'), 'hex');\n    // Encrypt protectors\n    var protectors = recipientsPublicKeys.map(function (recipient) {\n      return _this.encrypt(recipient, ephemeralPriv);\n    });\n    // Encrypt message\n    var ciphertext = RadixECIES.encrypt(Buffer.from(ephemeral.getPublic(true, 'array')), plaintext);\n    return {\n      protectors: protectors,\n      ciphertext: ciphertext\n    };\n  };\n  RadixECIES.decryptWithProtectors = function (privKey, protectors, ciphertext) {\n    var e_1, _a;\n    try {\n      for (var protectors_1 = tslib_1.__values(protectors), protectors_1_1 = protectors_1.next(); !protectors_1_1.done; protectors_1_1 = protectors_1.next()) {\n        var protector = protectors_1_1.value;\n        try {\n          var ephemPrivKey = this.decrypt(privKey, protector);\n          try {\n            return this.decrypt(ephemPrivKey, ciphertext);\n          } catch (error) {\n            throw new Error('Decrypted a protector, but unable to decrypt ciphertext with acquired private key');\n          }\n        } catch (error) {\n          // Do nothing, another protector might work\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (protectors_1_1 && !protectors_1_1.done && (_a = protectors_1.return)) _a.call(protectors_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    throw new Error('Unable to decrypt any protectors');\n  };\n  /**\n   * AES-256 CBC encrypt\n   * @param {Buffer} iv\n   * @param {Buffer} key\n   * @param {Buffer} plaintext\n   * @returns {Buffer} ciphertext\n   */\n  RadixECIES.AES256CbcEncrypt = function (iv, key, plaintext) {\n    var cipher = crypto_1.default.createCipheriv('aes-256-cbc', key, iv);\n    var firstChunk = cipher.update(plaintext);\n    var secondChunk = cipher.final();\n    return Buffer.concat([firstChunk, secondChunk]);\n  };\n  /**\n   * AES-256 CBC decrypt\n   * @param {Buffer} iv\n   * @param {Buffer} key\n   * @param {Buffer} ciphertext\n   * @returns {Buffer} plaintext\n   */\n  RadixECIES.AES256CbcDecrypt = function (iv, key, ciphertext) {\n    var cipher = crypto_1.default.createDecipheriv('aes-256-cbc', key, iv);\n    var firstChunk = cipher.update(ciphertext);\n    var secondChunk = cipher.final();\n    return Buffer.concat([firstChunk, secondChunk]);\n  };\n  return RadixECIES;\n}();\nexports.default = RadixECIES;","map":{"version":3,"names":["buffer_reader_1","tslib_1","__importDefault","require","elliptic_1","crypto_1","ec","default","RadixECIES","decrypt","privKey","encrypted","reader","iv","nextBuffer","ephemPubKeyEncoded","nextUInt8","ciphertext","nextUInt32BE","MAC","ephemPubKey","keyFromPublic","getPublic","px","keyFromPrivate","derive","hash","createHash","update","toArrayLike","Buffer","digest","encryptionKey","slice","MACKey","computedMAC","calculateMAC","equals","Error","plaintext","AES256CbcDecrypt","encrypt","pubKeyTo","ephemPrivKey","randomBytes","from","encode","AES256CbcEncrypt","offset","serializedCiphertext","alloc","length","copy","writeUInt8","writeUInt32BE","dataToMAC","concat","createHmac","encryptForMultiple","recipientsPublicKeys","_this","ephemeral","genKeyPair","ephemeralPriv","getPrivate","protectors","map","recipient","decryptWithProtectors","protectors_1","__values","protectors_1_1","next","done","protector","value","error","key","cipher","createCipheriv","firstChunk","secondChunk","final","createDecipheriv"],"sources":["../../../../src/modules/crypto/RadixECIES.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}