{"ast":null,"code":"import { AbstractChatCompletionRunner } from \"./AbstractChatCompletionRunner.mjs\";\nimport { isAssistantMessage } from \"./chatCompletionUtils.mjs\";\nexport class ChatCompletionRunner extends AbstractChatCompletionRunner {\n  /** @deprecated - please use `runTools` instead. */\n  static runFunctions(completions, params, options) {\n    const runner = new ChatCompletionRunner();\n    const opts = {\n      ...options,\n      headers: {\n        ...options?.headers,\n        'X-Stainless-Helper-Method': 'runFunctions'\n      }\n    };\n    runner._run(() => runner._runFunctions(completions, params, opts));\n    return runner;\n  }\n  static runTools(completions, params, options) {\n    const runner = new ChatCompletionRunner();\n    const opts = {\n      ...options,\n      headers: {\n        ...options?.headers,\n        'X-Stainless-Helper-Method': 'runTools'\n      }\n    };\n    runner._run(() => runner._runTools(completions, params, opts));\n    return runner;\n  }\n  _addMessage(message) {\n    super._addMessage(message);\n    if (isAssistantMessage(message) && message.content) {\n      this._emit('content', message.content);\n    }\n  }\n}","map":{"version":3,"names":["AbstractChatCompletionRunner","isAssistantMessage","ChatCompletionRunner","runFunctions","completions","params","options","runner","opts","headers","_run","_runFunctions","runTools","_runTools","_addMessage","message","content","_emit"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/openai/src/lib/ChatCompletionRunner.ts"],"sourcesContent":["import {\n  type Completions,\n  type ChatCompletionMessageParam,\n  type ChatCompletionCreateParamsNonStreaming,\n} from \"../resources/chat/completions\";\nimport { type RunnableFunctions, type BaseFunctionsArgs, RunnableTools } from './RunnableFunction';\nimport {\n  AbstractChatCompletionRunner,\n  AbstractChatCompletionRunnerEvents,\n  RunnerOptions,\n} from './AbstractChatCompletionRunner';\nimport { isAssistantMessage } from './chatCompletionUtils';\n\nexport interface ChatCompletionRunnerEvents extends AbstractChatCompletionRunnerEvents {\n  content: (content: string) => void;\n}\n\nexport type ChatCompletionFunctionRunnerParams<FunctionsArgs extends BaseFunctionsArgs> = Omit<\n  ChatCompletionCreateParamsNonStreaming,\n  'functions'\n> & {\n  functions: RunnableFunctions<FunctionsArgs>;\n};\n\nexport type ChatCompletionToolRunnerParams<FunctionsArgs extends BaseFunctionsArgs> = Omit<\n  ChatCompletionCreateParamsNonStreaming,\n  'tools'\n> & {\n  tools: RunnableTools<FunctionsArgs>;\n};\n\nexport class ChatCompletionRunner extends AbstractChatCompletionRunner<ChatCompletionRunnerEvents> {\n  /** @deprecated - please use `runTools` instead. */\n  static runFunctions(\n    completions: Completions,\n    params: ChatCompletionFunctionRunnerParams<any[]>,\n    options?: RunnerOptions,\n  ): ChatCompletionRunner {\n    const runner = new ChatCompletionRunner();\n    const opts = {\n      ...options,\n      headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runFunctions' },\n    };\n    runner._run(() => runner._runFunctions(completions, params, opts));\n    return runner;\n  }\n\n  static runTools(\n    completions: Completions,\n    params: ChatCompletionToolRunnerParams<any[]>,\n    options?: RunnerOptions,\n  ): ChatCompletionRunner {\n    const runner = new ChatCompletionRunner();\n    const opts = {\n      ...options,\n      headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n    };\n    runner._run(() => runner._runTools(completions, params, opts));\n    return runner;\n  }\n\n  override _addMessage(message: ChatCompletionMessageParam) {\n    super._addMessage(message);\n    if (isAssistantMessage(message) && message.content) {\n      this._emit('content', message.content as string);\n    }\n  }\n}\n"],"mappings":"SAOEA,4BAA4B,QAG7B;SACQC,kBAAkB,QAAE;AAoB7B,OAAM,MAAOC,oBAAqB,SAAQF,4BAAwD;EAChG;EACA,OAAOG,YAAYA,CACjBC,WAAwB,EACxBC,MAAiD,EACjDC,OAAuB;IAEvB,MAAMC,MAAM,GAAG,IAAIL,oBAAoB,EAAE;IACzC,MAAMM,IAAI,GAAG;MACX,GAAGF,OAAO;MACVG,OAAO,EAAE;QAAE,GAAGH,OAAO,EAAEG,OAAO;QAAE,2BAA2B,EAAE;MAAc;KAC5E;IACDF,MAAM,CAACG,IAAI,CAAC,MAAMH,MAAM,CAACI,aAAa,CAACP,WAAW,EAAEC,MAAM,EAAEG,IAAI,CAAC,CAAC;IAClE,OAAOD,MAAM;EACf;EAEA,OAAOK,QAAQA,CACbR,WAAwB,EACxBC,MAA6C,EAC7CC,OAAuB;IAEvB,MAAMC,MAAM,GAAG,IAAIL,oBAAoB,EAAE;IACzC,MAAMM,IAAI,GAAG;MACX,GAAGF,OAAO;MACVG,OAAO,EAAE;QAAE,GAAGH,OAAO,EAAEG,OAAO;QAAE,2BAA2B,EAAE;MAAU;KACxE;IACDF,MAAM,CAACG,IAAI,CAAC,MAAMH,MAAM,CAACM,SAAS,CAACT,WAAW,EAAEC,MAAM,EAAEG,IAAI,CAAC,CAAC;IAC9D,OAAOD,MAAM;EACf;EAESO,WAAWA,CAACC,OAAmC;IACtD,KAAK,CAACD,WAAW,CAACC,OAAO,CAAC;IAC1B,IAAId,kBAAkB,CAACc,OAAO,CAAC,IAAIA,OAAO,CAACC,OAAO,EAAE;MAClD,IAAI,CAACC,KAAK,CAAC,SAAS,EAAEF,OAAO,CAACC,OAAiB,CAAC;;EAEpD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}