{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ActionType = void 0;\nvar ActionType;\n(function (ActionType) {\n  ActionType[\"TOKEN_TRANSFER\"] = \"TokenTransfer\";\n  ActionType[\"STAKE_TOKENS\"] = \"StakeTokens\";\n  ActionType[\"UNSTAKE_TOKENS\"] = \"UnstakeTokens\";\n  ActionType[\"MINT_TOKENS\"] = \"MintTokens\";\n  ActionType[\"BURN_TOKENS\"] = \"BurnTokens\";\n  ActionType[\"CREATE_TOKEN_DEFINITION\"] = \"CreateTokenDefinition\";\n  ActionType[\"OTHER\"] = \"Other\";\n})(ActionType = exports.ActionType || (exports.ActionType = {}));","map":{"version":3,"names":["ActionType","exports"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/@radixdlt/application/src/actions/_types.ts"],"sourcesContent":["import {\n\tAddressOrUnsafeInput,\n\tValidatorAddressOrUnsafeInput,\n\tResourceIdentifierOrUnsafeInput,\n\tResourceIdentifierT,\n} from '@radixdlt/account'\nimport { AmountOrUnsafeInput, AmountT } from '@radixdlt/primitives'\n\nexport enum ActionType {\n\tTOKEN_TRANSFER = 'TokenTransfer',\n\tSTAKE_TOKENS = 'StakeTokens',\n\tUNSTAKE_TOKENS = 'UnstakeTokens',\n\tMINT_TOKENS = 'MintTokens',\n\tBURN_TOKENS = 'BurnTokens',\n\tCREATE_TOKEN_DEFINITION = 'CreateTokenDefinition',\n\tOTHER = 'Other',\n}\n\nexport type Action<T extends ActionType = ActionType.OTHER> = Readonly<{\n\ttype: T\n}>\n\n// ##################################\n// ####                         #####\n// ####     INPUTTED ACTIONS    #####\n// ####                         #####\n// ##################################\n\nexport type TransferTokensInput = Readonly<{\n\tto_account: AddressOrUnsafeInput\n\tamount: AmountOrUnsafeInput\n\ttokenIdentifier: ResourceIdentifierOrUnsafeInput\n}>\n\n// Same input for stake/unstake for now\nexport type StakeTokensInput = Readonly<{\n\tto_validator: ValidatorAddressOrUnsafeInput\n\tamount: AmountOrUnsafeInput\n\ttokenIdentifier: ResourceIdentifierOrUnsafeInput\n}>\n\nexport type UnstakeTokensInput = Readonly<{\n\tfrom_validator: ValidatorAddressOrUnsafeInput\n\tamount?: AmountOrUnsafeInput\n\tunstake_percentage?: AmountOrUnsafeInput\n\ttokenIdentifier: ResourceIdentifierOrUnsafeInput\n}>\n\nexport type ActionInput =\n\t| TransferTokensInput\n\t| StakeTokensInput\n\t| UnstakeTokensInput\n\n// ##################################\n// ####                         #####\n// ####     INTENDED ACTIONS    #####\n// ####                         #####\n// ##################################\nexport type TransferTokensProps = Readonly<{\n\tto_account: string\n\tfrom_account: string\n\tamount: AmountT\n\trri: ResourceIdentifierT\n}>\n\nexport type TransferTokensAction = TransferTokensProps &\n\tAction<ActionType.TOKEN_TRANSFER>\n\nexport type StakeTokensProps = Readonly<{\n\tfrom_account: string\n\tto_validator: string\n\tamount: AmountT\n\trri: ResourceIdentifierT\n}>\n\nexport type UnstakeTokensProps = Readonly<{\n\tto_account: string\n\tfrom_validator: string\n\tamount: AmountT\n\tunstake_percentage: AmountT\n\trri: ResourceIdentifierT\n}>\n\nexport type MintTokensProps = Readonly<{\n\tto_account: string\n\tamount: AmountT\n\trri: ResourceIdentifierT\n}>\n\nexport type BurnTokensProps = Readonly<{\n\tfrom_account: string\n\tamount: AmountT\n\trri: ResourceIdentifierT\n}>\n\nexport type CreateTokenDefinitionProps = Readonly<{\n\tname: string\n\tdescription: string\n\ticon_url: string\n\turl: string\n\tsymbol: string\n\tis_supply_mutable: boolean\n\tgranularity: string\n\towner?: string\n\tto_account?: string\n\tamount: AmountT\n\trri: ResourceIdentifierT\n}>\n\nexport type StakeTokensAction = StakeTokensProps &\n\tAction<ActionType.STAKE_TOKENS>\nexport type UnstakeTokensAction = UnstakeTokensProps &\n\tAction<ActionType.UNSTAKE_TOKENS>\nexport type MintTokensAction = MintTokensProps & Action<ActionType.MINT_TOKENS>\nexport type BurnTokensAction = BurnTokensProps & Action<ActionType.BURN_TOKENS>\nexport type CreateTokenDefinitionAction = CreateTokenDefinitionProps &\n\tAction<ActionType.CREATE_TOKEN_DEFINITION>\n// An intended action specified by the user. Not yet accepted by\n// Radix Core API.\nexport type IntendedActionBase<T extends ActionType> = Action<T>\n\nexport type IntendedTransferTokensAction = IntendedActionBase<ActionType.TOKEN_TRANSFER> &\n\tTransferTokensAction\n\nexport type IntendedStakeTokensAction = IntendedActionBase<ActionType.STAKE_TOKENS> &\n\tStakeTokensProps\n\nexport type IntendedUnstakeTokensAction = IntendedActionBase<ActionType.UNSTAKE_TOKENS> &\n\tUnstakeTokensProps\n\nexport type IntendedAction =\n\t| IntendedTransferTokensAction\n\t| IntendedStakeTokensAction\n\t| IntendedUnstakeTokensAction\n\n// ##################################\n// ####                         #####\n// ####     EXECUTED ACTIONS    #####\n// ####                         #####\n// ##################################\n\n// An executed action stored in the Radix Ledger, part\n// of transaction history. Marker type.\nexport type ExecutedActionBase<T extends ActionType> = Action<T>\n\nexport type ExecutedTransferTokensAction = ExecutedActionBase<ActionType.TOKEN_TRANSFER> &\n\tTransferTokensAction\n\nexport type ExecutedStakeTokensAction = ExecutedActionBase<ActionType.STAKE_TOKENS> &\n\tStakeTokensAction\n\nexport type ExecutedUnstakeTokensAction = ExecutedActionBase<ActionType.UNSTAKE_TOKENS> &\n\tUnstakeTokensAction\n\nexport type ExecutedMintTokensAction = ExecutedActionBase<ActionType.MINT_TOKENS> &\n\tMintTokensAction\n\nexport type ExecutedBurnTokensAction = ExecutedActionBase<ActionType.BURN_TOKENS> &\n\tBurnTokensAction\n\nexport type ExecutedCreateTokenDefinitionAction = ExecutedActionBase<ActionType.CREATE_TOKEN_DEFINITION> &\n\tCreateTokenDefinitionAction\n\n// OTHER (Only \"Executed\")\nexport type ExecutedOtherAction = ExecutedActionBase<ActionType.OTHER>\n\nexport type ExecutedAction =\n\t| ExecutedTransferTokensAction\n\t| ExecutedStakeTokensAction\n\t| ExecutedUnstakeTokensAction\n\t| ExecutedMintTokensAction\n\t| ExecutedBurnTokensAction\n\t| ExecutedCreateTokenDefinitionAction\n\t| ExecutedOtherAction\n"],"mappings":";;;;;;AAQA,IAAYA,UAQX;AARD,WAAYA,UAAU;EACrBA,UAAA,oCAAgC;EAChCA,UAAA,gCAA4B;EAC5BA,UAAA,oCAAgC;EAChCA,UAAA,8BAA0B;EAC1BA,UAAA,8BAA0B;EAC1BA,UAAA,qDAAiD;EACjDA,UAAA,mBAAe;AAChB,CAAC,EARWA,UAAU,GAAVC,OAAA,CAAAD,UAAU,KAAVC,OAAA,CAAAD,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}