{"ast":null,"code":"/**\n * Javascript implementation of ASN.1 validators for PKCS#7 v1.5.\n *\n * @author Dave Longley\n * @author Stefan Siegl\n *\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * The ASN.1 representation of PKCS#7 is as follows\n * (see RFC #2315 for details, http://www.ietf.org/rfc/rfc2315.txt):\n *\n * A PKCS#7 message consists of a ContentInfo on root level, which may\n * contain any number of further ContentInfo nested into it.\n *\n * ContentInfo ::= SEQUENCE {\n *   contentType                ContentType,\n *   content               [0]  EXPLICIT ANY DEFINED BY contentType OPTIONAL\n * }\n *\n * ContentType ::= OBJECT IDENTIFIER\n *\n * EnvelopedData ::= SEQUENCE {\n *   version                    Version,\n *   recipientInfos             RecipientInfos,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * EncryptedData ::= SEQUENCE {\n *   version                    Version,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * id-signedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n *   us(840) rsadsi(113549) pkcs(1) pkcs7(7) 2 }\n *\n * SignedData ::= SEQUENCE {\n *   version           INTEGER,\n *   digestAlgorithms  DigestAlgorithmIdentifiers,\n *   contentInfo       ContentInfo,\n *   certificates      [0] IMPLICIT Certificates OPTIONAL,\n *   crls              [1] IMPLICIT CertificateRevocationLists OPTIONAL,\n *   signerInfos       SignerInfos\n * }\n *\n * SignerInfos ::= SET OF SignerInfo\n *\n * SignerInfo ::= SEQUENCE {\n *   version                    Version,\n *   issuerAndSerialNumber      IssuerAndSerialNumber,\n *   digestAlgorithm            DigestAlgorithmIdentifier,\n *   authenticatedAttributes    [0] IMPLICIT Attributes OPTIONAL,\n *   digestEncryptionAlgorithm  DigestEncryptionAlgorithmIdentifier,\n *   encryptedDigest            EncryptedDigest,\n *   unauthenticatedAttributes  [1] IMPLICIT Attributes OPTIONAL\n * }\n *\n * EncryptedDigest ::= OCTET STRING\n *\n * Attributes ::= SET OF Attribute\n *\n * Attribute ::= SEQUENCE {\n *   attrType    OBJECT IDENTIFIER,\n *   attrValues  SET OF AttributeValue\n * }\n *\n * AttributeValue ::= ANY\n *\n * Version ::= INTEGER\n *\n * RecipientInfos ::= SET OF RecipientInfo\n *\n * EncryptedContentInfo ::= SEQUENCE {\n *   contentType                 ContentType,\n *   contentEncryptionAlgorithm  ContentEncryptionAlgorithmIdentifier,\n *   encryptedContent       [0]  IMPLICIT EncryptedContent OPTIONAL\n * }\n *\n * ContentEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of AES and DES3, there is only one,\n * the IV.\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *    algorithm OBJECT IDENTIFIER,\n *    parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * EncryptedContent ::= OCTET STRING\n *\n * RecipientInfo ::= SEQUENCE {\n *   version                     Version,\n *   issuerAndSerialNumber       IssuerAndSerialNumber,\n *   keyEncryptionAlgorithm      KeyEncryptionAlgorithmIdentifier,\n *   encryptedKey                EncryptedKey\n * }\n *\n * IssuerAndSerialNumber ::= SEQUENCE {\n *   issuer                      Name,\n *   serialNumber                CertificateSerialNumber\n * }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * KeyEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * EncryptedKey ::= OCTET STRING\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./util');\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7v = module.exports = forge.pkcs7asn1 = forge.pkcs7asn1 || {};\nforge.pkcs7 = forge.pkcs7 || {};\nforge.pkcs7.asn1 = p7v;\nvar contentInfoValidator = {\n  name: 'ContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'ContentInfo.ContentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'ContentInfo.content',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    captureAsn1: 'content'\n  }]\n};\np7v.contentInfoValidator = contentInfoValidator;\nvar encryptedContentInfoValidator = {\n  name: 'EncryptedContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedContentInfo.contentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'EncryptedContentInfo.contentEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      captureAsn1: 'encParameter'\n    }]\n  }, {\n    name: 'EncryptedContentInfo.encryptedContent',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    /* The PKCS#7 structure output by OpenSSL somewhat differs from what\n     * other implementations do generate.\n     *\n     * OpenSSL generates a structure like this:\n     * SEQUENCE {\n     *    ...\n     *    [0]\n     *       26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *       C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *       ...\n     * }\n     *\n     * Whereas other implementations (and this PKCS#7 module) generate:\n     * SEQUENCE {\n     *    ...\n     *    [0] {\n     *       OCTET STRING\n     *          26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *          C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *          ...\n     *    }\n     * }\n     *\n     * In order to support both, we just capture the context specific\n     * field here.  The OCTET STRING bit is removed below.\n     */\n    capture: 'encryptedContent',\n    captureAsn1: 'encryptedContentAsn1'\n  }]\n};\np7v.envelopedDataValidator = {\n  name: 'EnvelopedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EnvelopedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'EnvelopedData.RecipientInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'recipientInfos'\n  }].concat(encryptedContentInfoValidator)\n};\np7v.encryptedDataValidator = {\n  name: 'EncryptedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }].concat(encryptedContentInfoValidator)\n};\nvar signerValidator = {\n  name: 'SignerInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignerInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false\n  }, {\n    name: 'SignerInfo.issuerAndSerialNumber',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.issuerAndSerialNumber.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'SignerInfo.issuerAndSerialNumber.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'SignerInfo.digestAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.digestAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'digestAlgorithm'\n    }, {\n      name: 'SignerInfo.digestAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'digestParameter',\n      optional: true\n    }]\n  }, {\n    name: 'SignerInfo.authenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'authenticatedAttributes'\n  }, {\n    name: 'SignerInfo.digestEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    capture: 'signatureAlgorithm'\n  }, {\n    name: 'SignerInfo.encryptedDigest',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'signature'\n  }, {\n    name: 'SignerInfo.unauthenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    optional: true,\n    capture: 'unauthenticatedAttributes'\n  }]\n};\np7v.signedDataValidator = {\n  name: 'SignedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'SignedData.DigestAlgorithms',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'digestAlgorithms'\n  }, contentInfoValidator, {\n    name: 'SignedData.Certificates',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    optional: true,\n    captureAsn1: 'certificates'\n  }, {\n    name: 'SignedData.CertificateRevocationLists',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    optional: true,\n    captureAsn1: 'crls'\n  }, {\n    name: 'SignedData.SignerInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    capture: 'signerInfos',\n    optional: true,\n    value: [signerValidator]\n  }]\n};\np7v.recipientInfoValidator = {\n  name: 'RecipientInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'RecipientInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'RecipientInfo.issuerAndSerial',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.issuerAndSerial.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'RecipientInfo.issuerAndSerial.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'RecipientInfo.keyEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.keyEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'RecipientInfo.keyEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'encParameter'\n    }]\n  }, {\n    name: 'RecipientInfo.encryptedKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'encKey'\n  }]\n};","map":{"version":3,"names":["forge","require","asn1","p7v","module","exports","pkcs7asn1","pkcs7","contentInfoValidator","name","tagClass","Class","UNIVERSAL","type","Type","SEQUENCE","constructed","value","OID","capture","CONTEXT_SPECIFIC","optional","captureAsn1","encryptedContentInfoValidator","envelopedDataValidator","INTEGER","SET","concat","encryptedDataValidator","signerValidator","OCTETSTRING","signedDataValidator","recipientInfoValidator"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/node-forge/lib/pkcs7asn1.js"],"sourcesContent":["/**\n * Javascript implementation of ASN.1 validators for PKCS#7 v1.5.\n *\n * @author Dave Longley\n * @author Stefan Siegl\n *\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * The ASN.1 representation of PKCS#7 is as follows\n * (see RFC #2315 for details, http://www.ietf.org/rfc/rfc2315.txt):\n *\n * A PKCS#7 message consists of a ContentInfo on root level, which may\n * contain any number of further ContentInfo nested into it.\n *\n * ContentInfo ::= SEQUENCE {\n *   contentType                ContentType,\n *   content               [0]  EXPLICIT ANY DEFINED BY contentType OPTIONAL\n * }\n *\n * ContentType ::= OBJECT IDENTIFIER\n *\n * EnvelopedData ::= SEQUENCE {\n *   version                    Version,\n *   recipientInfos             RecipientInfos,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * EncryptedData ::= SEQUENCE {\n *   version                    Version,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * id-signedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n *   us(840) rsadsi(113549) pkcs(1) pkcs7(7) 2 }\n *\n * SignedData ::= SEQUENCE {\n *   version           INTEGER,\n *   digestAlgorithms  DigestAlgorithmIdentifiers,\n *   contentInfo       ContentInfo,\n *   certificates      [0] IMPLICIT Certificates OPTIONAL,\n *   crls              [1] IMPLICIT CertificateRevocationLists OPTIONAL,\n *   signerInfos       SignerInfos\n * }\n *\n * SignerInfos ::= SET OF SignerInfo\n *\n * SignerInfo ::= SEQUENCE {\n *   version                    Version,\n *   issuerAndSerialNumber      IssuerAndSerialNumber,\n *   digestAlgorithm            DigestAlgorithmIdentifier,\n *   authenticatedAttributes    [0] IMPLICIT Attributes OPTIONAL,\n *   digestEncryptionAlgorithm  DigestEncryptionAlgorithmIdentifier,\n *   encryptedDigest            EncryptedDigest,\n *   unauthenticatedAttributes  [1] IMPLICIT Attributes OPTIONAL\n * }\n *\n * EncryptedDigest ::= OCTET STRING\n *\n * Attributes ::= SET OF Attribute\n *\n * Attribute ::= SEQUENCE {\n *   attrType    OBJECT IDENTIFIER,\n *   attrValues  SET OF AttributeValue\n * }\n *\n * AttributeValue ::= ANY\n *\n * Version ::= INTEGER\n *\n * RecipientInfos ::= SET OF RecipientInfo\n *\n * EncryptedContentInfo ::= SEQUENCE {\n *   contentType                 ContentType,\n *   contentEncryptionAlgorithm  ContentEncryptionAlgorithmIdentifier,\n *   encryptedContent       [0]  IMPLICIT EncryptedContent OPTIONAL\n * }\n *\n * ContentEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of AES and DES3, there is only one,\n * the IV.\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *    algorithm OBJECT IDENTIFIER,\n *    parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * EncryptedContent ::= OCTET STRING\n *\n * RecipientInfo ::= SEQUENCE {\n *   version                     Version,\n *   issuerAndSerialNumber       IssuerAndSerialNumber,\n *   keyEncryptionAlgorithm      KeyEncryptionAlgorithmIdentifier,\n *   encryptedKey                EncryptedKey\n * }\n *\n * IssuerAndSerialNumber ::= SEQUENCE {\n *   issuer                      Name,\n *   serialNumber                CertificateSerialNumber\n * }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * KeyEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * EncryptedKey ::= OCTET STRING\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./util');\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7v = module.exports = forge.pkcs7asn1 = forge.pkcs7asn1 || {};\nforge.pkcs7 = forge.pkcs7 || {};\nforge.pkcs7.asn1 = p7v;\n\nvar contentInfoValidator = {\n  name: 'ContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'ContentInfo.ContentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'ContentInfo.content',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    captureAsn1: 'content'\n  }]\n};\np7v.contentInfoValidator = contentInfoValidator;\n\nvar encryptedContentInfoValidator = {\n  name: 'EncryptedContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedContentInfo.contentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'EncryptedContentInfo.contentEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      captureAsn1: 'encParameter'\n    }]\n  }, {\n    name: 'EncryptedContentInfo.encryptedContent',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    /* The PKCS#7 structure output by OpenSSL somewhat differs from what\n     * other implementations do generate.\n     *\n     * OpenSSL generates a structure like this:\n     * SEQUENCE {\n     *    ...\n     *    [0]\n     *       26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *       C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *       ...\n     * }\n     *\n     * Whereas other implementations (and this PKCS#7 module) generate:\n     * SEQUENCE {\n     *    ...\n     *    [0] {\n     *       OCTET STRING\n     *          26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *          C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *          ...\n     *    }\n     * }\n     *\n     * In order to support both, we just capture the context specific\n     * field here.  The OCTET STRING bit is removed below.\n     */\n    capture: 'encryptedContent',\n    captureAsn1: 'encryptedContentAsn1'\n  }]\n};\n\np7v.envelopedDataValidator = {\n  name: 'EnvelopedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EnvelopedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'EnvelopedData.RecipientInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'recipientInfos'\n  }].concat(encryptedContentInfoValidator)\n};\n\np7v.encryptedDataValidator = {\n  name: 'EncryptedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }].concat(encryptedContentInfoValidator)\n};\n\nvar signerValidator = {\n  name: 'SignerInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignerInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false\n  }, {\n    name: 'SignerInfo.issuerAndSerialNumber',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.issuerAndSerialNumber.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'SignerInfo.issuerAndSerialNumber.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'SignerInfo.digestAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.digestAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'digestAlgorithm'\n    }, {\n      name: 'SignerInfo.digestAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'digestParameter',\n      optional: true\n    }]\n  }, {\n    name: 'SignerInfo.authenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'authenticatedAttributes'\n  }, {\n    name: 'SignerInfo.digestEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    capture: 'signatureAlgorithm'\n  }, {\n    name: 'SignerInfo.encryptedDigest',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'signature'\n  }, {\n    name: 'SignerInfo.unauthenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    optional: true,\n    capture: 'unauthenticatedAttributes'\n  }]\n};\n\np7v.signedDataValidator = {\n  name: 'SignedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'SignedData.DigestAlgorithms',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'digestAlgorithms'\n  },\n  contentInfoValidator,\n  {\n    name: 'SignedData.Certificates',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    optional: true,\n    captureAsn1: 'certificates'\n  }, {\n    name: 'SignedData.CertificateRevocationLists',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    optional: true,\n    captureAsn1: 'crls'\n  }, {\n    name: 'SignedData.SignerInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    capture: 'signerInfos',\n    optional: true,\n    value: [signerValidator]\n  }]\n};\n\np7v.recipientInfoValidator = {\n  name: 'RecipientInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'RecipientInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'RecipientInfo.issuerAndSerial',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.issuerAndSerial.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'RecipientInfo.issuerAndSerial.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'RecipientInfo.keyEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.keyEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'RecipientInfo.keyEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'encParameter'\n    }]\n  }, {\n    name: 'RecipientInfo.encryptedKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'encKey'\n  }]\n};\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}