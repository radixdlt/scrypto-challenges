{"ast":null,"code":"'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG)) return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000; // 2^48\n};\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac().update(this.V).update([0x00]);\n  if (seed) kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed) return;\n  this.K = this._hmac().update(this.V).update([0x01]).update(seed).digest();\n  this.V = this._hmac().update(this.V).digest();\n};\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n  assert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval) throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};","map":{"version":3,"names":["hash","require","utils","assert","HmacDRBG","options","predResist","outLen","outSize","minEntropy","hmacStrength","_reseed","reseedInterval","K","V","entropy","toArray","entropyEnc","nonce","nonceEnc","pers","persEnc","length","_init","module","exports","prototype","init","seed","concat","Array","i","_update","_hmac","hmac","update","kmac","digest","reseed","add","addEnc","generate","len","enc","Error","temp","res","slice","encode"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/hmac-drbg/lib/hmac-drbg.js"],"sourcesContent":["'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}