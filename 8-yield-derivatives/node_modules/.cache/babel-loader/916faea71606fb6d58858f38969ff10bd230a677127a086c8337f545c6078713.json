{"ast":null,"code":"var _jsxFileName = \"/Users/mdabdurrazzak/RadInsu/src/ins.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { RadixDappToolkit, RadixNetwork } from \"@radixdlt/radix-dapp-toolkit\";\nimport './TradingBotComponent.css'; // Import CSS for styling\nimport logo from './logo.png'; // Import your logo image\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TradingBotComponent = () => {\n  _s();\n  const [response, setResponse] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [rdt, setRdt] = useState(null);\n  const [contractDetails, setContractDetails] = useState(null);\n  const [claimingInsurance, setClaimingInsurance] = useState(false);\n  const [signingContract, setSigningContract] = useState(false);\n  useEffect(() => {\n    const initializeRadixDappToolkit = async () => {\n      try {\n        const rdtInstance = RadixDappToolkit({\n          dAppDefinitionAddress: \"account_tdx_2_12xxk4dqhg9dz53p745qhpr5tr2k2al4mpx3296tr8k78kna6rkcgsz\",\n          networkId: RadixNetwork.Stokenet,\n          applicationName: \"parametric_insurance\",\n          applicationVersion: \"1.0.0\"\n        });\n        setRdt(rdtInstance);\n      } catch (error) {\n        console.error('Error initializing RadixDappToolkit:', error);\n      }\n    };\n    initializeRadixDappToolkit();\n  }, []);\n  const handleRunBot = async () => {\n    if (!rdt) return;\n    setLoading(true);\n    try {\n      // Simulate bot response (replace with actual bot interaction)\n      setTimeout(() => {\n        setResponse('Bot: Buy signal detected for BTC/USD');\n        setLoading(false);\n      }, 2000);\n    } catch (error) {\n      console.error('Error running bot:', error);\n      setLoading(false);\n    }\n  };\n  const handleCreateContract = async () => {\n    setSigningContract(true);\n    // Implement logic to create a new contract\n    // Once the contract is created, setSigningContract(false);\n  };\n  const handleViewDetails = async () => {\n    // Implement logic to fetch and display contract details\n    // Set contractDetails with the fetched details\n  };\n  const handleClaimInsurance = async () => {\n    setClaimingInsurance(true);\n    // Implement logic to claim insurance for a contract\n    // Once the insurance is claimed, setClaimingInsurance(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trading-bot-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trading-bot-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"InfiniX Logo\",\n        className: \"logo\",\n        style: {\n          width: '150px',\n          height: '150px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome to InfiniX\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '20px'\n        },\n        children: \"Instant Insurance, Infinite Possibilities!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bot-response\",\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Insurance Platform\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateContract,\n        disabled: signingContract,\n        children: signingContract ? 'Signing Up Contract...' : 'Sign Up Contract'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleViewDetails,\n        children: \"View Contract Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClaimInsurance,\n        disabled: claimingInsurance,\n        children: claimingInsurance ? 'Claiming Insurance...' : 'Claim Insurance'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), contractDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contract-details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(TradingBotComponent, \"D/KkkBRS6pt2e9i+aI1CFup4rOs=\");\n_c = TradingBotComponent;\nexport default TradingBotComponent;\nvar _c;\n$RefreshReg$(_c, \"TradingBotComponent\");","map":{"version":3,"names":["React","useState","useEffect","RadixDappToolkit","RadixNetwork","logo","jsxDEV","_jsxDEV","TradingBotComponent","_s","response","setResponse","loading","setLoading","rdt","setRdt","contractDetails","setContractDetails","claimingInsurance","setClaimingInsurance","signingContract","setSigningContract","initializeRadixDappToolkit","rdtInstance","dAppDefinitionAddress","networkId","Stokenet","applicationName","applicationVersion","error","console","handleRunBot","setTimeout","handleCreateContract","handleViewDetails","handleClaimInsurance","className","children","src","alt","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/mdabdurrazzak/RadInsu/src/ins.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { RadixDappToolkit, RadixNetwork } from \"@radixdlt/radix-dapp-toolkit\";\nimport './TradingBotComponent.css'; // Import CSS for styling\nimport logo from './logo.png'; // Import your logo image\n\nconst TradingBotComponent = () => {\n  const [response, setResponse] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [rdt, setRdt] = useState(null);\n\n  const [contractDetails, setContractDetails] = useState(null);\n  const [claimingInsurance, setClaimingInsurance] = useState(false);\n  const [signingContract, setSigningContract] = useState(false);\n\n  useEffect(() => {\n    const initializeRadixDappToolkit = async () => {\n      try {\n        const rdtInstance = RadixDappToolkit({\n          dAppDefinitionAddress: \"account_tdx_2_12xxk4dqhg9dz53p745qhpr5tr2k2al4mpx3296tr8k78kna6rkcgsz\",\n          networkId: RadixNetwork.Stokenet,\n          applicationName: \"parametric_insurance\",\n          applicationVersion: \"1.0.0\",\n        });\n        setRdt(rdtInstance);\n      } catch (error) {\n        console.error('Error initializing RadixDappToolkit:', error);\n      }\n    };\n\n    initializeRadixDappToolkit();\n  }, []);\n\n  const handleRunBot = async () => {\n    if (!rdt) return;\n\n    setLoading(true);\n    try {\n      // Simulate bot response (replace with actual bot interaction)\n      setTimeout(() => {\n        setResponse('Bot: Buy signal detected for BTC/USD');\n        setLoading(false);\n      }, 2000);\n    } catch (error) {\n      console.error('Error running bot:', error);\n      setLoading(false);\n    }\n  };\n\n  const handleCreateContract = async () => {\n    setSigningContract(true);\n    // Implement logic to create a new contract\n    // Once the contract is created, setSigningContract(false);\n  };\n\n  const handleViewDetails = async () => {\n    // Implement logic to fetch and display contract details\n    // Set contractDetails with the fetched details\n  };\n\n  const handleClaimInsurance = async () => {\n    setClaimingInsurance(true);\n    // Implement logic to claim insurance for a contract\n    // Once the insurance is claimed, setClaimingInsurance(false);\n  };\n\n  return (\n    <div className=\"trading-bot-container\">\n      <div className=\"trading-bot-form\">\n      <img src={logo} alt=\"InfiniX Logo\" className=\"logo\" style={{ width: '150px', height: '150px' }} />\n\n        <h2>Welcome to InfiniX</h2>\n        <p style={{ fontSize: '20px' }}>Instant Insurance, Infinite Possibilities!</p>\n\n       \n        {response && <div className=\"bot-response\">{response}</div>}\n        <h2>Your Insurance Platform</h2>\n        <button onClick={handleCreateContract} disabled={signingContract}>\n          {signingContract ? 'Signing Up Contract...' : 'Sign Up Contract'}\n        </button>\n        <button onClick={handleViewDetails}>View Contract Details</button>\n        <button onClick={handleClaimInsurance} disabled={claimingInsurance}>\n          {claimingInsurance ? 'Claiming Insurance...' : 'Claim Insurance'}\n        </button>\n        {contractDetails && (\n          <div className=\"contract-details\">\n            {/* Display contract details here */}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TradingBotComponent;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}