{"ast":null,"code":"import _objectAssign from \"./_objectAssign.js\";\nimport _identity from \"./_identity.js\";\nimport _isArrayLike from \"./_isArrayLike.js\";\nimport _isTransformer from \"./_isTransformer.js\";\nimport objOf from \"../objOf.js\";\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _objectAssign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n  throw new Error('Cannot create transformer for ' + obj);\n}","map":{"version":3,"names":["_objectAssign","_identity","_isArrayLike","_isTransformer","objOf","_stepCatArray","Array","@@transducer/step","xs","x","push","_stepCatString","String","a","b","_stepCatObject","Object","result","input","_stepCat","obj","Error"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/ramda/es/internal/_stepCat.js"],"sourcesContent":["import _objectAssign from \"./_objectAssign.js\";\nimport _identity from \"./_identity.js\";\nimport _isArrayLike from \"./_isArrayLike.js\";\nimport _isTransformer from \"./_isTransformer.js\";\nimport objOf from \"../objOf.js\";\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _objectAssign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n\n  throw new Error('Cannot create transformer for ' + obj);\n}"],"mappings":"AAAA,OAAOA,aAAa,MAAM,oBAAoB;AAC9C,OAAOC,SAAS,MAAM,gBAAgB;AACtC,OAAOC,YAAY,MAAM,mBAAmB;AAC5C,OAAOC,cAAc,MAAM,qBAAqB;AAChD,OAAOC,KAAK,MAAM,aAAa;AAC/B,IAAIC,aAAa,GAAG;EAClB,mBAAmB,EAAEC,KAAK;EAC1B,mBAAmB,EAAE,SAAAC,CAAUC,EAAE,EAAEC,CAAC,EAAE;IACpCD,EAAE,CAACE,IAAI,CAACD,CAAC,CAAC;IACV,OAAOD,EAAE;EACX,CAAC;EACD,qBAAqB,EAAEP;AACzB,CAAC;AACD,IAAIU,cAAc,GAAG;EACnB,mBAAmB,EAAEC,MAAM;EAC3B,mBAAmB,EAAE,SAAAL,CAAUM,CAAC,EAAEC,CAAC,EAAE;IACnC,OAAOD,CAAC,GAAGC,CAAC;EACd,CAAC;EACD,qBAAqB,EAAEb;AACzB,CAAC;AACD,IAAIc,cAAc,GAAG;EACnB,mBAAmB,EAAEC,MAAM;EAC3B,mBAAmB,EAAE,SAAAT,CAAUU,MAAM,EAAEC,KAAK,EAAE;IAC5C,OAAOlB,aAAa,CAACiB,MAAM,EAAEf,YAAY,CAACgB,KAAK,CAAC,GAAGd,KAAK,CAACc,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC;EACvF,CAAC;EACD,qBAAqB,EAAEjB;AACzB,CAAC;AACD,eAAe,SAASkB,QAAQA,CAACC,GAAG,EAAE;EACpC,IAAIjB,cAAc,CAACiB,GAAG,CAAC,EAAE;IACvB,OAAOA,GAAG;EACZ;EAEA,IAAIlB,YAAY,CAACkB,GAAG,CAAC,EAAE;IACrB,OAAOf,aAAa;EACtB;EAEA,IAAI,OAAOe,GAAG,KAAK,QAAQ,EAAE;IAC3B,OAAOT,cAAc;EACvB;EAEA,IAAI,OAAOS,GAAG,KAAK,QAAQ,EAAE;IAC3B,OAAOL,cAAc;EACvB;EAEA,MAAM,IAAIM,KAAK,CAAC,gCAAgC,GAAGD,GAAG,CAAC;AACzD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}