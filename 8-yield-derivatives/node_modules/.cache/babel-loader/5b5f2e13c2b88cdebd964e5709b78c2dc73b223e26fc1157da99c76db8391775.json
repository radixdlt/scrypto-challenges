{"ast":null,"code":"import _isArray from \"./_isArray.js\";\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","map":{"version":3,"names":["_isArray","_checkForMethod","methodname","fn","length","arguments","obj","apply","Array","prototype","slice","call"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/ramda/es/internal/_checkForMethod.js"],"sourcesContent":["import _isArray from \"./_isArray.js\";\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n\n    if (length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,eAAeA,CAACC,UAAU,EAAEC,EAAE,EAAE;EACtD,OAAO,YAAY;IACjB,IAAIC,MAAM,GAAGC,SAAS,CAACD,MAAM;IAE7B,IAAIA,MAAM,KAAK,CAAC,EAAE;MAChB,OAAOD,EAAE,CAAC,CAAC;IACb;IAEA,IAAIG,GAAG,GAAGD,SAAS,CAACD,MAAM,GAAG,CAAC,CAAC;IAC/B,OAAOJ,QAAQ,CAACM,GAAG,CAAC,IAAI,OAAOA,GAAG,CAACJ,UAAU,CAAC,KAAK,UAAU,GAAGC,EAAE,CAACI,KAAK,CAAC,IAAI,EAAEF,SAAS,CAAC,GAAGC,GAAG,CAACJ,UAAU,CAAC,CAACK,KAAK,CAACD,GAAG,EAAEE,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACN,SAAS,EAAE,CAAC,EAAED,MAAM,GAAG,CAAC,CAAC,CAAC;EAC9K,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}