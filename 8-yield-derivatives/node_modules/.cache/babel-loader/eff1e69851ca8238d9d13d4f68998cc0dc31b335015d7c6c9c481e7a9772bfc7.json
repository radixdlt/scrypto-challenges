{"ast":null,"code":"/**\n * Copyright (c) 2019 Digital Bazaar, Inc.\n */\n\nvar forge = require('./forge');\nrequire('./asn1');\nvar asn1 = forge.asn1;\nexports.privateKeyValidator = {\n  // PrivateKeyInfo\n  name: 'PrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'PrivateKeyInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // privateKeyAlgorithm\n    name: 'PrivateKeyInfo.privateKeyAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'privateKeyOid'\n    }]\n  }, {\n    // PrivateKey\n    name: 'PrivateKeyInfo',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'privateKey'\n  }]\n};\nexports.publicKeyValidator = {\n  name: 'SubjectPublicKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'subjectPublicKeyInfo',\n  value: [{\n    name: 'SubjectPublicKeyInfo.AlgorithmIdentifier',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'publicKeyOid'\n    }]\n  },\n  // capture group for ed25519PublicKey\n  {\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    composed: true,\n    captureBitStringValue: 'ed25519PublicKey'\n  }\n  // FIXME: this is capture group for rsaPublicKey, use it in this API or\n  // discard?\n  /* {\n    // subjectPublicKey\n    name: 'SubjectPublicKeyInfo.subjectPublicKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    value: [{\n      // RSAPublicKey\n      name: 'SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      optional: true,\n      captureAsn1: 'rsaPublicKey'\n    }]\n  } */]\n};","map":{"version":3,"names":["forge","require","asn1","exports","privateKeyValidator","name","tagClass","Class","UNIVERSAL","type","Type","SEQUENCE","constructed","value","INTEGER","capture","OID","OCTETSTRING","publicKeyValidator","captureAsn1","BITSTRING","composed","captureBitStringValue"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/node-forge/lib/asn1-validator.js"],"sourcesContent":["/**\n * Copyright (c) 2019 Digital Bazaar, Inc.\n */\n\nvar forge = require('./forge');\nrequire('./asn1');\nvar asn1 = forge.asn1;\n\nexports.privateKeyValidator = {\n  // PrivateKeyInfo\n  name: 'PrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'PrivateKeyInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // privateKeyAlgorithm\n    name: 'PrivateKeyInfo.privateKeyAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'privateKeyOid'\n    }]\n  }, {\n    // PrivateKey\n    name: 'PrivateKeyInfo',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'privateKey'\n  }]\n};\n\nexports.publicKeyValidator = {\n  name: 'SubjectPublicKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'subjectPublicKeyInfo',\n  value: [{\n    name: 'SubjectPublicKeyInfo.AlgorithmIdentifier',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'publicKeyOid'\n    }]\n  },\n  // capture group for ed25519PublicKey\n  {\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    composed: true,\n    captureBitStringValue: 'ed25519PublicKey'\n  }\n  // FIXME: this is capture group for rsaPublicKey, use it in this API or\n  // discard?\n  /* {\n    // subjectPublicKey\n    name: 'SubjectPublicKeyInfo.subjectPublicKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    value: [{\n      // RSAPublicKey\n      name: 'SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      optional: true,\n      captureAsn1: 'rsaPublicKey'\n    }]\n  } */\n  ]\n};\n"],"mappings":"AAAA;AACA;AACA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAS,CAAC;AAC9BA,OAAO,CAAC,QAAQ,CAAC;AACjB,IAAIC,IAAI,GAAGF,KAAK,CAACE,IAAI;AAErBC,OAAO,CAACC,mBAAmB,GAAG;EAC5B;EACAC,IAAI,EAAE,gBAAgB;EACtBC,QAAQ,EAAEJ,IAAI,CAACK,KAAK,CAACC,SAAS;EAC9BC,IAAI,EAAEP,IAAI,CAACQ,IAAI,CAACC,QAAQ;EACxBC,WAAW,EAAE,IAAI;EACjBC,KAAK,EAAE,CAAC;IACN;IACAR,IAAI,EAAE,wBAAwB;IAC9BC,QAAQ,EAAEJ,IAAI,CAACK,KAAK,CAACC,SAAS;IAC9BC,IAAI,EAAEP,IAAI,CAACQ,IAAI,CAACI,OAAO;IACvBF,WAAW,EAAE,KAAK;IAClBG,OAAO,EAAE;EACX,CAAC,EAAE;IACD;IACAV,IAAI,EAAE,oCAAoC;IAC1CC,QAAQ,EAAEJ,IAAI,CAACK,KAAK,CAACC,SAAS;IAC9BC,IAAI,EAAEP,IAAI,CAACQ,IAAI,CAACC,QAAQ;IACxBC,WAAW,EAAE,IAAI;IACjBC,KAAK,EAAE,CAAC;MACNR,IAAI,EAAE,+BAA+B;MACrCC,QAAQ,EAAEJ,IAAI,CAACK,KAAK,CAACC,SAAS;MAC9BC,IAAI,EAAEP,IAAI,CAACQ,IAAI,CAACM,GAAG;MACnBJ,WAAW,EAAE,KAAK;MAClBG,OAAO,EAAE;IACX,CAAC;EACH,CAAC,EAAE;IACD;IACAV,IAAI,EAAE,gBAAgB;IACtBC,QAAQ,EAAEJ,IAAI,CAACK,KAAK,CAACC,SAAS;IAC9BC,IAAI,EAAEP,IAAI,CAACQ,IAAI,CAACO,WAAW;IAC3BL,WAAW,EAAE,KAAK;IAClBG,OAAO,EAAE;EACX,CAAC;AACH,CAAC;AAEDZ,OAAO,CAACe,kBAAkB,GAAG;EAC3Bb,IAAI,EAAE,sBAAsB;EAC5BC,QAAQ,EAAEJ,IAAI,CAACK,KAAK,CAACC,SAAS;EAC9BC,IAAI,EAAEP,IAAI,CAACQ,IAAI,CAACC,QAAQ;EACxBC,WAAW,EAAE,IAAI;EACjBO,WAAW,EAAE,sBAAsB;EACnCN,KAAK,EAAE,CAAC;IACNR,IAAI,EAAE,0CAA0C;IAChDC,QAAQ,EAAEJ,IAAI,CAACK,KAAK,CAACC,SAAS;IAC9BC,IAAI,EAAEP,IAAI,CAACQ,IAAI,CAACC,QAAQ;IACxBC,WAAW,EAAE,IAAI;IACjBC,KAAK,EAAE,CAAC;MACNR,IAAI,EAAE,+BAA+B;MACrCC,QAAQ,EAAEJ,IAAI,CAACK,KAAK,CAACC,SAAS;MAC9BC,IAAI,EAAEP,IAAI,CAACQ,IAAI,CAACM,GAAG;MACnBJ,WAAW,EAAE,KAAK;MAClBG,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACD;EACA;IACET,QAAQ,EAAEJ,IAAI,CAACK,KAAK,CAACC,SAAS;IAC9BC,IAAI,EAAEP,IAAI,CAACQ,IAAI,CAACU,SAAS;IACzBR,WAAW,EAAE,KAAK;IAClBS,QAAQ,EAAE,IAAI;IACdC,qBAAqB,EAAE;EACzB;EACA;EACA;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAfE;AAiBF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}