{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar nedb_1 = tslib_1.__importDefault(require(\"nedb\"));\nvar atommodel_1 = require(\"../atommodel\");\nvar RadixLogger_1 = require(\"../common/RadixLogger\");\nvar RadixNEDBAtomCache = /** @class */function () {\n  /**\n   * Creates an instance of radix nedbatom cache.\n   * @param filename File path on disk in Node, path in localStorage in the browser\n   */\n  function RadixNEDBAtomCache(filename) {\n    var _this = this;\n    this.storeAtom = function (atom) {\n      return _this.notExists({\n        _id: atom.getAidString()\n      }).then(function () {\n        // Serialize\n        var serializedAtom = atom.toJSON();\n        serializedAtom['_id'] = atom.getAidString();\n        // Store\n        return _this.insert(serializedAtom);\n      }).then(function (newDoc) {\n        return atom;\n      }).catch(function (error) {\n        RadixLogger_1.logger.trace('Atom already in DB');\n      });\n    };\n    this.getAtoms = function (queryAddress) {\n      // Find\n      var query = {};\n      // logger.info(query)\n      return _this.find(query).then(function (atoms) {\n        return tslib_1.__awaiter(_this, void 0, void 0, function () {\n          var deserialized, atoms_1, atoms_1_1, atom, deserializedAtom, atomAddresses, atomAddresses_1, atomAddresses_1_1, address, e_1_1;\n          var e_1, _a, e_2, _b;\n          return tslib_1.__generator(this, function (_c) {\n            switch (_c.label) {\n              case 0:\n                deserialized = [];\n                _c.label = 1;\n              case 1:\n                _c.trys.push([1, 6, 7, 8]);\n                atoms_1 = tslib_1.__values(atoms), atoms_1_1 = atoms_1.next();\n                _c.label = 2;\n              case 2:\n                if (!!atoms_1_1.done) return [3 /*break*/, 5];\n                atom = atoms_1_1.value;\n                return [4 /*yield*/, this.asyncDeserialize(atom)];\n              case 3:\n                deserializedAtom = _c.sent();\n                atomAddresses = deserializedAtom.getAddresses();\n                try {\n                  for (atomAddresses_1 = (e_2 = void 0, tslib_1.__values(atomAddresses)), atomAddresses_1_1 = atomAddresses_1.next(); !atomAddresses_1_1.done; atomAddresses_1_1 = atomAddresses_1.next()) {\n                    address = atomAddresses_1_1.value;\n                    if (address.equals(queryAddress)) {\n                      deserialized.push(deserializedAtom);\n                      break;\n                    }\n                  }\n                } catch (e_2_1) {\n                  e_2 = {\n                    error: e_2_1\n                  };\n                } finally {\n                  try {\n                    if (atomAddresses_1_1 && !atomAddresses_1_1.done && (_b = atomAddresses_1.return)) _b.call(atomAddresses_1);\n                  } finally {\n                    if (e_2) throw e_2.error;\n                  }\n                }\n                _c.label = 4;\n              case 4:\n                atoms_1_1 = atoms_1.next();\n                return [3 /*break*/, 2];\n              case 5:\n                return [3 /*break*/, 8];\n              case 6:\n                e_1_1 = _c.sent();\n                e_1 = {\n                  error: e_1_1\n                };\n                return [3 /*break*/, 8];\n              case 7:\n                try {\n                  if (atoms_1_1 && !atoms_1_1.done && (_a = atoms_1.return)) _a.call(atoms_1);\n                } finally {\n                  if (e_1) throw e_1.error;\n                }\n                return [7 /*endfinally*/];\n              case 8:\n                return [2 /*return*/, deserialized];\n            }\n          });\n        });\n      });\n    };\n    // Promise wrappers for nedb\n    this.findOne = function (opt) {\n      return new Promise(function (resolve, reject) {\n        _this.db.findOne(opt, function (error, doc) {\n          if (error) {\n            reject(error);\n          } else {\n            resolve(doc);\n          }\n        });\n      });\n    };\n    this.notExists = function (opt) {\n      return new Promise(function (resolve, reject) {\n        _this.db.findOne(opt, function (error, doc) {\n          if (error) {\n            reject(error);\n          } else if (!doc) {\n            resolve(true);\n          }\n          reject('Atom already in db');\n        });\n      });\n    };\n    this.find = function (opt) {\n      return new Promise(function (resolve, reject) {\n        _this.db.find(opt, function (error, doc) {\n          if (error) {\n            reject(error);\n          } else {\n            resolve(doc);\n          }\n        });\n      });\n    };\n    this.insert = function (opt) {\n      return new Promise(function (resolve, reject) {\n        _this.db.insert(opt, function (error, doc) {\n          if (error) {\n            reject(error);\n          } else {\n            resolve(doc);\n          }\n        });\n      });\n    };\n    this.remove = function (opt) {\n      return new Promise(function (resolve, reject) {\n        _this.db.remove(opt, function (error, doc) {\n          if (error) {\n            reject(error);\n          } else {\n            resolve(doc);\n          }\n        });\n      });\n    };\n    this.db = new nedb_1.default({\n      filename: filename,\n      autoload: true\n    });\n  }\n  /**\n   * Clears all atoms from the cache\n   */\n  RadixNEDBAtomCache.prototype.reset = function () {\n    this.db.remove({}, {\n      multi: true\n    }, function (error, numRemoved) {\n      // Do nothing\n    });\n  };\n  RadixNEDBAtomCache.prototype.asyncDeserialize = function (atom) {\n    return new Promise(function (resolve, reject) {\n      setTimeout(function () {\n        delete atom['_id'];\n        resolve(atommodel_1.RadixSerializer.fromJSON(atom));\n      }, 0);\n    });\n  };\n  RadixNEDBAtomCache.prototype.deleteAtom = function (atom) {\n    return this.remove({\n      _id: atom.getAidString()\n    });\n  };\n  return RadixNEDBAtomCache;\n}();\nexports.default = RadixNEDBAtomCache;","map":{"version":3,"names":["nedb_1","tslib_1","__importDefault","require","atommodel_1","RadixLogger_1","RadixNEDBAtomCache","filename","_this","storeAtom","atom","notExists","_id","getAidString","then","serializedAtom","toJSON","insert","newDoc","catch","error","logger","trace","getAtoms","queryAddress","query","find","atoms","__awaiter","deserialized","atoms_1","__values","atoms_1_1","next","value","asyncDeserialize","deserializedAtom","_c","sent","atomAddresses","getAddresses","atomAddresses_1","e_2","atomAddresses_1_1","done","address","equals","push","findOne","opt","Promise","resolve","reject","db","doc","remove","default","autoload","prototype","reset","multi","numRemoved","setTimeout","RadixSerializer","fromJSON","deleteAtom"],"sources":["../../../../src/modules/cache/RadixNEDBAtomCache.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}