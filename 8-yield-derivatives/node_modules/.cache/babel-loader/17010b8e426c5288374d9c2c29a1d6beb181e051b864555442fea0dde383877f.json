{"ast":null,"code":"/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar nextHandle = 1;\nvar RESOLVED = /*@__PURE__*/function () {\n  return /*@__PURE__*/Promise.resolve();\n}();\nvar activeHandles = {};\nfunction findAndClearHandle(handle) {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\nexport var Immediate = {\n  setImmediate: function (cb) {\n    var handle = nextHandle++;\n    activeHandles[handle] = true;\n    RESOLVED.then(function () {\n      return findAndClearHandle(handle) && cb();\n    });\n    return handle;\n  },\n  clearImmediate: function (handle) {\n    findAndClearHandle(handle);\n  }\n};\nexport var TestTools = {\n  pending: function () {\n    return Object.keys(activeHandles).length;\n  }\n};","map":{"version":3,"names":["nextHandle","RESOLVED","Promise","resolve","activeHandles","findAndClearHandle","handle","Immediate","setImmediate","cb","then","clearImmediate","TestTools","pending","Object","keys","length"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/radixdlt/node_modules/rxjs/src/internal/util/Immediate.ts"],"sourcesContent":["let nextHandle = 1;\nconst RESOLVED = (() => Promise.resolve())();\nconst activeHandles: { [key: number]: any } = {};\n\n/**\n * Finds the handle in the list of active handles, and removes it.\n * Returns `true` if found, `false` otherwise. Used both to clear\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\n */\nfunction findAndClearHandle(handle: number): boolean {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\n\n/**\n * Helper functions to schedule and unschedule microtasks.\n */\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    activeHandles[handle] = true;\n    RESOLVED.then(() => findAndClearHandle(handle) && cb());\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    findAndClearHandle(handle);\n  },\n};\n\n/**\n * Used for internal testing purposes only. Do not export from library.\n */\nexport const TestTools = {\n  pending() {\n    return Object.keys(activeHandles).length;\n  }\n};\n"],"mappings":"AAAA;AACA,IAAMA,UAAQ,GAAI;AAClB,IAAMC,QAAA,gBAA2C;EAAA,oBAAAC,OAAA,CAAAC,OAAA;AAAA;AAOjD,IAAAC,aAAS;SACHC,kBAAUA,CAAAC,MAAe;MAC3BA,MAAA,IAAOF,aAAc;IACrB,OAAOA,aAAK,CAAAE,MAAA;IACb;EACD;EACD;AAKD;OACE,IAAAC,SAAA;cACQ,EAAM,SAAAC,CAAGC,EAAA,EAAU;IACzB,IAAAH,MAAA,GAAaN,UAAQ,EAAG;IACxBI,aAAa,CAACE,MAAA,QAAM;IACpBL,QAAO,CAAAS,IAAM,CAAC;MAAA,OAAAL,kBAAA,CAAAC,MAAA,KAAAG,EAAA;IAAA;IACf,OAAAH,MAAA;EAED;gBACE,WAAAK,CAAmBL,MAAQ;IAC5BD,kBAAA,CAAAC,MAAA;EACD;AAKF;OACE,IAAOM,SAAA;SACL,WAAAC,CAAA,EAAc;IACf,OAAAC,MAAA,CAAAC,IAAA,CAAAX,aAAA,EAAAY,MAAA;EACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}