{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScryptParams = exports.Scrypt = void 0;\nconst scrypt_js_1 = require(\"scrypt-js\");\nconst neverthrow_1 = require(\"neverthrow\");\nconst util_1 = require(\"@radixdlt/util\");\nconst deriveKey = input => {\n  if (input.kdf !== 'scrypt') return (0, neverthrow_1.errAsync)(new Error('Wrong KDF, expected scrypt'));\n  const {\n    params,\n    password: key\n  } = input;\n  const {\n    lengthOfDerivedKey: dklen,\n    costParameterN: n,\n    blockSize: r,\n    parallelizationParameter: p\n  } = params;\n  const salt = Buffer.from(params.salt, 'hex');\n  return neverthrow_1.ResultAsync.fromPromise((0, scrypt_js_1.scrypt)(key, salt, n, r, p, dklen).then(uint8array => Buffer.from(uint8array)), e => {\n    const underlyingErrorMessage = (0, util_1.msgFromError)(e);\n    return new Error(`Failed to derive data using scrypt, underlying error: '${underlyingErrorMessage}'`);\n  });\n};\nexports.Scrypt = {\n  deriveKey\n};\nconst create = input => {\n  var _a, _b, _c;\n  const secureRandom = (_a = input.secureRandom) !== null && _a !== void 0 ? _a : util_1.secureRandomGenerator;\n  if (input.salt && input.salt.length !== 32) throw new Error('Incorrect implementatin expected 32 bytes salt');\n  const salt = (_c = (_b = input.salt) === null || _b === void 0 ? void 0 : _b.toString('hex')) !== null && _c !== void 0 ? _c : secureRandom.randomSecureBytes(32);\n  return {\n    costParameterN: 8192,\n    costParameterC: 262144,\n    blockSize: 8,\n    parallelizationParameter: 1,\n    lengthOfDerivedKey: 32,\n    salt: salt\n  };\n};\nexports.ScryptParams = {\n  create\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","ScryptParams","Scrypt","scrypt_js_1","require","neverthrow_1","util_1","deriveKey","input","kdf","errAsync","Error","params","password","key","lengthOfDerivedKey","dklen","costParameterN","n","blockSize","r","parallelizationParameter","p","salt","Buffer","from","ResultAsync","fromPromise","scrypt","then","uint8array","e","underlyingErrorMessage","msgFromError","create","_a","_b","_c","secureRandom","secureRandomGenerator","length","toString","randomSecureBytes","costParameterC"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/@radixdlt/crypto/dist/key-derivation-functions/scrypt.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ScryptParams = exports.Scrypt = void 0;\nconst scrypt_js_1 = require(\"scrypt-js\");\nconst neverthrow_1 = require(\"neverthrow\");\nconst util_1 = require(\"@radixdlt/util\");\nconst deriveKey = (input) => {\n    if (input.kdf !== 'scrypt')\n        return (0, neverthrow_1.errAsync)(new Error('Wrong KDF, expected scrypt'));\n    const { params, password: key } = input;\n    const { lengthOfDerivedKey: dklen, costParameterN: n, blockSize: r, parallelizationParameter: p, } = params;\n    const salt = Buffer.from(params.salt, 'hex');\n    return neverthrow_1.ResultAsync.fromPromise((0, scrypt_js_1.scrypt)(key, salt, n, r, p, dklen).then(uint8array => Buffer.from(uint8array)), (e) => {\n        const underlyingErrorMessage = (0, util_1.msgFromError)(e);\n        return new Error(`Failed to derive data using scrypt, underlying error: '${underlyingErrorMessage}'`);\n    });\n};\nexports.Scrypt = {\n    deriveKey,\n};\nconst create = (input) => {\n    var _a, _b, _c;\n    const secureRandom = (_a = input.secureRandom) !== null && _a !== void 0 ? _a : util_1.secureRandomGenerator;\n    if (input.salt && input.salt.length !== 32)\n        throw new Error('Incorrect implementatin expected 32 bytes salt');\n    const salt = (_c = (_b = input.salt) === null || _b === void 0 ? void 0 : _b.toString('hex')) !== null && _c !== void 0 ? _c : secureRandom.randomSecureBytes(32);\n    return {\n        costParameterN: 8192,\n        costParameterC: 262144,\n        blockSize: 8,\n        parallelizationParameter: 1,\n        lengthOfDerivedKey: 32,\n        salt: salt,\n    };\n};\nexports.ScryptParams = {\n    create,\n};\n//# sourceMappingURL=scrypt.js.map"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAGF,OAAO,CAACG,MAAM,GAAG,KAAK,CAAC;AAC9C,MAAMC,WAAW,GAAGC,OAAO,CAAC,WAAW,CAAC;AACxC,MAAMC,YAAY,GAAGD,OAAO,CAAC,YAAY,CAAC;AAC1C,MAAME,MAAM,GAAGF,OAAO,CAAC,gBAAgB,CAAC;AACxC,MAAMG,SAAS,GAAIC,KAAK,IAAK;EACzB,IAAIA,KAAK,CAACC,GAAG,KAAK,QAAQ,EACtB,OAAO,CAAC,CAAC,EAAEJ,YAAY,CAACK,QAAQ,EAAE,IAAIC,KAAK,CAAC,4BAA4B,CAAC,CAAC;EAC9E,MAAM;IAAEC,MAAM;IAAEC,QAAQ,EAAEC;EAAI,CAAC,GAAGN,KAAK;EACvC,MAAM;IAAEO,kBAAkB,EAAEC,KAAK;IAAEC,cAAc,EAAEC,CAAC;IAAEC,SAAS,EAAEC,CAAC;IAAEC,wBAAwB,EAAEC;EAAG,CAAC,GAAGV,MAAM;EAC3G,MAAMW,IAAI,GAAGC,MAAM,CAACC,IAAI,CAACb,MAAM,CAACW,IAAI,EAAE,KAAK,CAAC;EAC5C,OAAOlB,YAAY,CAACqB,WAAW,CAACC,WAAW,CAAC,CAAC,CAAC,EAAExB,WAAW,CAACyB,MAAM,EAAEd,GAAG,EAAES,IAAI,EAAEL,CAAC,EAAEE,CAAC,EAAEE,CAAC,EAAEN,KAAK,CAAC,CAACa,IAAI,CAACC,UAAU,IAAIN,MAAM,CAACC,IAAI,CAACK,UAAU,CAAC,CAAC,EAAGC,CAAC,IAAK;IAC/I,MAAMC,sBAAsB,GAAG,CAAC,CAAC,EAAE1B,MAAM,CAAC2B,YAAY,EAAEF,CAAC,CAAC;IAC1D,OAAO,IAAIpB,KAAK,CAAE,0DAAyDqB,sBAAuB,GAAE,CAAC;EACzG,CAAC,CAAC;AACN,CAAC;AACDjC,OAAO,CAACG,MAAM,GAAG;EACbK;AACJ,CAAC;AACD,MAAM2B,MAAM,GAAI1B,KAAK,IAAK;EACtB,IAAI2B,EAAE,EAAEC,EAAE,EAAEC,EAAE;EACd,MAAMC,YAAY,GAAG,CAACH,EAAE,GAAG3B,KAAK,CAAC8B,YAAY,MAAM,IAAI,IAAIH,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG7B,MAAM,CAACiC,qBAAqB;EAC5G,IAAI/B,KAAK,CAACe,IAAI,IAAIf,KAAK,CAACe,IAAI,CAACiB,MAAM,KAAK,EAAE,EACtC,MAAM,IAAI7B,KAAK,CAAC,gDAAgD,CAAC;EACrE,MAAMY,IAAI,GAAG,CAACc,EAAE,GAAG,CAACD,EAAE,GAAG5B,KAAK,CAACe,IAAI,MAAM,IAAI,IAAIa,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACK,QAAQ,CAAC,KAAK,CAAC,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGC,YAAY,CAACI,iBAAiB,CAAC,EAAE,CAAC;EACjK,OAAO;IACHzB,cAAc,EAAE,IAAI;IACpB0B,cAAc,EAAE,MAAM;IACtBxB,SAAS,EAAE,CAAC;IACZE,wBAAwB,EAAE,CAAC;IAC3BN,kBAAkB,EAAE,EAAE;IACtBQ,IAAI,EAAEA;EACV,CAAC;AACL,CAAC;AACDxB,OAAO,CAACE,YAAY,GAAG;EACnBiC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}