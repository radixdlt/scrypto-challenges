{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\nvar QueueAction = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(QueueAction, _super);\n  function QueueAction(scheduler, work) {\n    var _this = _super.call(this, scheduler, work) || this;\n    _this.scheduler = scheduler;\n    _this.work = work;\n    return _this;\n  }\n  QueueAction.prototype.schedule = function (state, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n    if (delay > 0) {\n      return _super.prototype.schedule.call(this, state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  };\n  QueueAction.prototype.execute = function (state, delay) {\n    return delay > 0 || this.closed ? _super.prototype.execute.call(this, state, delay) : this._execute(state, delay);\n  };\n  QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n    if (delay !== null && delay > 0 || delay === null && this.delay > 0) {\n      return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n    }\n    return scheduler.flush(this);\n  };\n  return QueueAction;\n}(AsyncAction);\nexport { QueueAction };","map":{"version":3,"names":["tslib_1","AsyncAction","QueueAction","_super","__extends","scheduler","work","_this","call","prototype","schedule","state","delay","flush","execute","closed","_execute","requestAsyncId","id"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/radixdlt/node_modules/rxjs/src/internal/scheduler/QueueAction.ts"],"sourcesContent":["import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n"],"mappings":";AAAA,OAAO,KAAEA,OAAA,MAAa,OAAM;AAU5B,SAAAC,WAAA;IAAoCC,WAAA,0BAAcC,MAAA;EAEhDH,OAAA,CAAAI,SAAA,CAAAF,WAAsB,EAAyBC,MAC0B;WADzED,WAEEA,CAAAG,SAAA,EAAAC,IAAM;IAFc,IAAAC,KAAA,GAAAJ,MAAA,CAAAK,IAAA,KAAyB,EAAAH,SAAA,EAAAC,IAAA;IACzBC,KAAA,CAAAF,SAAA,GAAmDA,SAAA;;IAExE,OAAAE,KAAA;EAEM;aAAoB,CAAAE,SAAA,CAAAC,QAAA,aAAiBC,KAAA,EAAAC,KAAA;IAC1C,IAAIA,KAAK,KAAI,KAAE;MACbA,KAAA,GAAO;;IAET,IAAIA,KAAC,GAAK,CAAG;MACT,OAAMT,MAAG,CAAKM,SAAC,CAAAC,QAAA,CAAAF,IAAA,OAAAG,KAAA,EAAAC,KAAA;IACnB;IACA,KAAAA,KAAO,GAAKA,KAAA;IACb,KAAAD,KAAA,GAAAA,KAAA;IAEM,KAAAN,SAAA,CAAAQ,KAAA,KAAO;IACZ,OAAO,IAAC;;aAEN,CAAIJ,SAAS,CAACK,OAAO,aAAQH,KAAA,EAAAC,KAAA;IAChC,OAAAA,KAAA,aAAAG,MAAA,GAESZ,MAAA,CAAAM,SAAA,CAAAK,OAAA,CAAAN,IAAc,KAAxB,EAAAG,KAAyB,EAAAC,KAAA,IAAqC,KAAAI,QAAA,CAAAL,KAAA,EAAAC,KAAA;;aAK1D,CAAAH,SAAO,CAAAQ,cAAM,aAAcZ,SAAC,EAAAa,EAAA,EAAAN,KAAW,EAAE;QAC1CA,KAAA;MAEDA,KAAO;IACR;IACH,IAAAA,KAAA,KAAC,QAAAA,KAAA,QAAAA,KAAA,kBAAAA,KAAA;MAjCmC,OAiCnCT,MAAA,CAAAM,SAAA,CAAAQ,cAAA,CAAAT,IAAA,OAAAH,SAAA,EAAAa,EAAA,EAAAN,KAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}