{"ast":null,"code":"'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\nvar utils = require('../utils');\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n  return y.redSqr().cmp(rhs) === 0;\n};\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1)) bits.push(t.andln(1));\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n  return this.x.fromRed();\n};","map":{"version":3,"names":["BN","require","inherits","Base","utils","MontCurve","conf","call","a","toRed","red","b","i4","redInvm","two","a24","redMul","redAdd","module","exports","prototype","validate","point","x","normalize","x2","redSqr","rhs","y","redSqrt","cmp","Point","curve","z","BasePoint","one","zero","decodePoint","bytes","enc","toArray","pointFromJSON","obj","fromJSON","precompute","_encode","getX","p","byteLength","inspect","isInfinity","fromRed","toString","cmpn","dbl","aa","redSub","bb","c","nx","nz","add","Error","diffAdd","diff","d","da","cb","redISub","mul","k","t","clone","bits","iushrn","push","andln","i","length","mulAdd","jumlAdd","eq","other"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/elliptic/lib/elliptic/curve/mont.js"],"sourcesContent":["'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}