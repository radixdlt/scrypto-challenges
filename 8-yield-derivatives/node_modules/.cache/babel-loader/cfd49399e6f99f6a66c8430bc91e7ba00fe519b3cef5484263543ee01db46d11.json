{"ast":null,"code":"var _jsxFileName = \"/Users/mdabdurrazzak/RadInsu/src/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { RadixDappToolkit, DataRequestBuilder, RadixNetwork } from '@radixdlt/radix-dapp-toolkit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [rdt, setRdt] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [accountAddress, setAccountAddress] = useState('');\n  const [componentAddress, setComponentAddress] = useState('');\n  const [adminBadge, setAdminBadge] = useState('');\n  const [ownerBadge, setOwnerBadge] = useState('');\n  const [gumResourceAddress, setGumResourceAddress] = useState('');\n  const [connected, setConnected] = useState(false);\n  const [walletAddress, setWalletAddress] = useState('');\n  const [smartContract, setSmartContract] = useState(null); // Add smartContract state\n\n  const connectWallet = async () => {\n    try {\n      const dAppId = 'account_tdx_2_12xxk4dqhg9dz53p745qhpr5tr2k2al4mpx3296tr8k78kna6rkcgsz';\n      const newRdt = RadixDappToolkit({\n        dAppDefinitionAddress: dAppId,\n        networkId: RadixNetwork.Stokenet,\n        applicationName: 'Infinx',\n        applicationVersion: '1.0.0'\n      });\n      setRdt(newRdt);\n      setLoading(false);\n      console.log('Connected to wallet successfully');\n      setConnected(true);\n      newRdt.walletApi.setRequestData(DataRequestBuilder.accounts().atLeast(1));\n      newRdt.walletApi.walletData$.subscribe(walletData => {\n        console.log(\"Subscription wallet data: \", walletData);\n        if (walletData && walletData.accounts && walletData.accounts.length > 0) {\n          setAccountAddress(walletData.accounts[0].address);\n          setWalletAddress(walletData.accounts[0].address); // Set the wallet address state\n        }\n      });\n\n      // Fetch smart contract\n      const contract = await newRdt.atomService.getAtomById('txid_tdx_2_1dn2sc050npjfmcazcuwc7rdxmwcv4t9c7jyeqy485hsfp7l5zggse5262t');\n      setSmartContract(contract);\n    } catch (error) {\n      console.error('Error connecting to Radix Wallet Connector:', error);\n    }\n  };\n  const instantiateComponent = async () => {\n    try {\n      // Your instantiation logic here\n    } catch (error) {\n      console.error('Error instantiating component:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!connected && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => connectWallet(),\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 22\n    }, this), connected && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"You are connected. Wallet Address: \", walletAddress]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: instantiateComponent,\n      children: \"Instantiate Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), accountAddress && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Account Address: \", accountAddress]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 26\n    }, this), accountAddress && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Component Address: \", componentAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Admin Badge: \", adminBadge]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Owner Badge: \", ownerBadge]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Gumball Resource Address: \", gumResourceAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), smartContract && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Smart Contract: \", JSON.stringify(smartContract)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"x52Wh2iMetuRHaIyNghfYNWmXS8=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","RadixDappToolkit","DataRequestBuilder","RadixNetwork","jsxDEV","_jsxDEV","Profile","_s","rdt","setRdt","loading","setLoading","accountAddress","setAccountAddress","componentAddress","setComponentAddress","adminBadge","setAdminBadge","ownerBadge","setOwnerBadge","gumResourceAddress","setGumResourceAddress","connected","setConnected","walletAddress","setWalletAddress","smartContract","setSmartContract","connectWallet","dAppId","newRdt","dAppDefinitionAddress","networkId","Stokenet","applicationName","applicationVersion","console","log","walletApi","setRequestData","accounts","atLeast","walletData$","subscribe","walletData","length","address","contract","atomService","getAtomById","error","instantiateComponent","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/mdabdurrazzak/RadInsu/src/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { RadixDappToolkit, DataRequestBuilder, RadixNetwork } from '@radixdlt/radix-dapp-toolkit';\n\nconst Profile = () => {\n  const [rdt, setRdt] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [accountAddress, setAccountAddress] = useState('');\n  const [componentAddress, setComponentAddress] = useState('');\n  const [adminBadge, setAdminBadge] = useState('');\n  const [ownerBadge, setOwnerBadge] = useState('');\n  const [gumResourceAddress, setGumResourceAddress] = useState('');\n  const [connected, setConnected] = useState(false);\n  const [walletAddress, setWalletAddress] = useState('');\n  const [smartContract, setSmartContract] = useState(null); // Add smartContract state\n\n  const connectWallet = async () => {\n    try {\n      const dAppId = 'account_tdx_2_12xxk4dqhg9dz53p745qhpr5tr2k2al4mpx3296tr8k78kna6rkcgsz';\n      const newRdt = RadixDappToolkit({\n        dAppDefinitionAddress: dAppId,\n        networkId: RadixNetwork.Stokenet,\n        applicationName: 'Infinx',\n        applicationVersion: '1.0.0',\n      });\n      setRdt(newRdt);\n      setLoading(false);\n      console.log('Connected to wallet successfully');\n      setConnected(true);\n\n      newRdt.walletApi.setRequestData(DataRequestBuilder.accounts().atLeast(1));\n      newRdt.walletApi.walletData$.subscribe((walletData) => {\n        console.log(\"Subscription wallet data: \", walletData);\n        if (walletData && walletData.accounts && walletData.accounts.length > 0) {\n          setAccountAddress(walletData.accounts[0].address);\n          setWalletAddress(walletData.accounts[0].address); // Set the wallet address state\n        }\n      });\n\n      // Fetch smart contract\n      const contract = await newRdt.atomService.getAtomById('txid_tdx_2_1dn2sc050npjfmcazcuwc7rdxmwcv4t9c7jyeqy485hsfp7l5zggse5262t');\n      setSmartContract(contract);\n    } catch (error) {\n      console.error('Error connecting to Radix Wallet Connector:', error);\n    }\n  };\n\n  const instantiateComponent = async () => {\n    try {\n      // Your instantiation logic here\n    } catch (error) {\n      console.error('Error instantiating component:', error);\n    }\n  };\n\n  return (\n    <div>\n      {!connected && <button onClick={() => connectWallet()}>Connect Wallet</button>}\n      {connected && <div>You are connected. Wallet Address: {walletAddress}</div>}\n\n      <button onClick={instantiateComponent}>Instantiate Component</button>\n  \n      {accountAddress && <div>Account Address: {accountAddress}</div>}\n      {accountAddress && (\n        <div>\n          <div>Component Address: {componentAddress}</div>\n          <div>Admin Badge: {adminBadge}</div>\n          <div>Owner Badge: {ownerBadge}</div>\n          <div>Gumball Resource Address: {gumResourceAddress}</div>\n        </div>\n      )}\n      {/* Display smart contract data */}\n      {smartContract && <div>Smart Contract: {JSON.stringify(smartContract)}</div>}\n    </div>\n  );\n};\n\nexport default Profile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}