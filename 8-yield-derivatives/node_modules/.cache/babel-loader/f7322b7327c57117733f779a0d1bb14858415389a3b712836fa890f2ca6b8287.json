{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar RadixPOWTask_1 = tslib_1.__importDefault(require(\"../pow/RadixPOWTask\"));\nvar RadixFeeProvider = /** @class */function () {\n  function RadixFeeProvider() {}\n  /**\n   * Compute a valid POW nonce for an atom\n   *\n   * @param  {number} universeMagicNumber A universe-specific number defined in the unvierse config\n   * @param  {RadixAtom} atom The atom without a pow fee\n   * @returns Promise\n   */\n  RadixFeeProvider.generatePOWFee = function (universeMagicNumber, atom) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var target, seed, powTask, pow;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            target = Buffer.from('0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF', 'hex');\n            seed = atom.getHash();\n            powTask = new RadixPOWTask_1.default(universeMagicNumber, seed, target);\n            return [4 /*yield*/, powTask.computePow()];\n          case 1:\n            pow = _a.sent();\n            return [2 /*return*/, pow];\n        }\n      });\n    });\n  };\n  return RadixFeeProvider;\n}();\nexports.default = RadixFeeProvider;","map":{"version":3,"names":["RadixPOWTask_1","tslib_1","__importDefault","require","RadixFeeProvider","generatePOWFee","universeMagicNumber","atom","target","Buffer","from","seed","getHash","powTask","default","computePow","pow","_a","sent"],"sources":["../../../../src/modules/fees/RadixFeeProvider.ts"],"sourcesContent":[null],"mappings":";;;;;;AAGA,IAAAA,cAAA,GAAAC,OAAA,CAAAC,eAAA,CAAAC,OAAA;AAKA,IAAAC,gBAAA;EAAA,SAAAA,iBAAA,GA2BA;EA1BI;;;;;;;EAQoBA,gBAAA,CAAAC,cAAc,GAAlC,UACIC,mBAA2B,EAC3BC,IAAe;;;;;;YAKTC,MAAM,GAAGC,MAAM,CAACC,IAAI,CAAC,kEAAkE,EAAE,KAAK,CAAC;YAG/FC,IAAI,GAAGJ,IAAI,CAACK,OAAO,EAAE;YAGrBC,OAAO,GAAG,IAAIb,cAAA,CAAAc,OAAY,CAACR,mBAAmB,EAAEK,IAAI,EAAEH,MAAM,CAAC;YACvD,qBAAMK,OAAO,CAACE,UAAU,EAAE;;YAAhCC,GAAG,GAAGC,EAAA,CAAAC,IAAA,EAA0B;YAEtC,sBAAOF,GAAG;;;;GACb;EACL,OAAAZ,gBAAC;AAAD,CAAC,CA3BD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}