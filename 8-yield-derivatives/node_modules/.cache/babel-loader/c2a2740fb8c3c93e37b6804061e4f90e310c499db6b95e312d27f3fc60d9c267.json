{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar axios_1 = tslib_1.__importDefault(require(\"axios\"));\nvar atommodel_1 = require(\"../atommodel\");\nvar __1 = require(\"../..\");\n/**\n * Radix node discovery from a fixed list\n */\nvar RadixNodeDiscoveryHardcoded = /** @class */function () {\n  /**\n   * Creates an instance of radix node discovery from seed.\n   * @param bootstrapNode Full address to the rpc endpoint of a Radix node in the universe\n   */\n  function RadixNodeDiscoveryHardcoded(bootstrapNodes) {\n    this.bootstrapNodes = bootstrapNodes;\n  }\n  RadixNodeDiscoveryHardcoded.prototype.loadNodes = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return tslib_1.__generator(this, function (_a) {\n        return [2 /*return*/, Promise.all(this.bootstrapNodes.map(function (address) {\n          return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var response, nodeInfo, node, error_1;\n            return tslib_1.__generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  _a.trys.push([0, 2,, 3]);\n                  return [4 /*yield*/, axios_1.default.get(\"http://\" + address + \"/api/system\")];\n                case 1:\n                  response = _a.sent();\n                  nodeInfo = atommodel_1.RadixSerializer.fromJSON(response.data);\n                  node = new __1.RadixNode(nodeInfo, \"ws://\" + address + \"/rpc\", \"http://\" + address + \"/rpc\");\n                  return [2 /*return*/, node];\n                case 2:\n                  error_1 = _a.sent();\n                  throw error_1;\n                case 3:\n                  return [2 /*return*/];\n              }\n            });\n          });\n        }))];\n      });\n    });\n  };\n  return RadixNodeDiscoveryHardcoded;\n}();\nexports.default = RadixNodeDiscoveryHardcoded;","map":{"version":3,"names":["axios_1","tslib_1","__importDefault","require","atommodel_1","__1","RadixNodeDiscoveryHardcoded","bootstrapNodes","prototype","loadNodes","Promise","all","map","address","__awaiter","_this","default","get","response","_a","sent","nodeInfo","RadixSerializer","fromJSON","data","node","RadixNode","error_1"],"sources":["../../../../src/modules/universe/RadixNodeDiscoveryHardcoded.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA,CAAAC,eAAA,CAAAC,OAAA;AAIA,IAAAC,WAAA,GAAAD,OAAA;AACA,IAAAE,GAAA,GAAAF,OAAA;AAEA;;;AAGA,IAAAG,2BAAA;EAEI;;;;EAIA,SAAAA,4BACaC,cAAwB;IAAxB,KAAAA,cAAc,GAAdA,cAAc;EACpB;EAEMD,2BAAA,CAAAE,SAAA,CAAAC,SAAS,GAAtB;;;;QACI,sBAAOC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,cAAc,CAACK,GAAG,CAAC,UAAOC,OAAO;UAAA,OAAAZ,OAAA,CAAAa,SAAA,CAAAC,KAAA;;;;;;kBAEhC,qBAAMf,OAAA,CAAAgB,OAAK,CAACC,GAAG,CAAC,YAAUJ,OAAO,gBAAa,CAAC;;kBAA1DK,QAAQ,GAAGC,EAAA,CAAAC,IAAA,EAA+C;kBAC1DC,QAAQ,GAAoBjB,WAAA,CAAAkB,eAAe,CAACC,QAAQ,CAACL,QAAQ,CAACM,IAAI,CAAC;kBACnEC,IAAI,GAAG,IAAIpB,GAAA,CAAAqB,SAAS,CAACL,QAAQ,EAAE,UAAQR,OAAO,SAAM,EAAE,YAAUA,OAAO,SAAM,CAAC;kBACpF,sBAAOY,IAAI;;;kBAEX,MAAME,OAAK;;;;;;SAElB,CAAC,CAAC;;;GACN;EACL,OAAArB,2BAAC;AAAD,CAAC,CAtBD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}