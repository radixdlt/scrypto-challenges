{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.flattenResultsObject = void 0;\nconst neverthrow_1 = require(\"neverthrow\");\nconst typeGuards_1 = require(\"./typeGuards\");\nconst unwrap = (maybeResult, errors) => {\n  if (typeGuards_1.isResult(maybeResult)) {\n    if (maybeResult.isOk()) {\n      const value = maybeResult.value;\n      if (typeGuards_1.isResult(value)) {\n        return unwrap(value, errors);\n      }\n      return value;\n    } else {\n      errors.push(maybeResult.error);\n      return maybeResult;\n    }\n  }\n  return maybeResult;\n};\nconst flattenResultsObject = json => {\n  const errors = [];\n  const flattened = json.map(value => {\n    if (!typeGuards_1.isObject(value)) return value;\n    for (const item in value) {\n      const objValue = value[item];\n      if (objValue && typeGuards_1.isResult(objValue)) {\n        const res = exports.flattenResultsObject(objValue);\n        value[item] = unwrap(res, errors);\n      }\n    }\n    return value;\n  }).mapErr(err => {\n    errors.push(err);\n    return errors.flat();\n  });\n  return errors.length > 0 ? neverthrow_1.err(errors.flat()) : flattened;\n};\nexports.flattenResultsObject = flattenResultsObject;","map":{"version":3,"names":["neverthrow_1","require","typeGuards_1","unwrap","maybeResult","errors","isResult","isOk","value","push","error","flattenResultsObject","json","flattened","map","isObject","item","objValue","res","exports","mapErr","err","flat","length"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/@radixdlt/util/src/resultHelpers.ts"],"sourcesContent":["import { err, Result } from 'neverthrow'\nimport { isObject, isResult } from './typeGuards'\n\nconst unwrap = (maybeResult: unknown, errors: (Error | Error[])[]): unknown => {\n\tif (isResult(maybeResult)) {\n\t\tif (maybeResult.isOk()) {\n\t\t\tconst value = maybeResult.value\n\t\t\tif (isResult(value)) {\n\t\t\t\treturn unwrap(value, errors)\n\t\t\t}\n\t\t\treturn value\n\t\t} else {\n\t\t\terrors.push(maybeResult.error)\n\t\t\treturn maybeResult\n\t\t}\n\t}\n\treturn maybeResult\n}\n\nexport const flattenResultsObject = (\n\tjson: Result<unknown, Error | Error[]>,\n): Result<unknown, Error[]> => {\n\tconst errors: (Error | Error[])[] = []\n\n\tconst flattened = json\n\t\t.map(value => {\n\t\t\tif (!isObject(value)) return value\n\t\t\tfor (const item in value) {\n\t\t\t\tconst objValue = value[item]\n\n\t\t\t\tif (objValue && isResult(objValue)) {\n\t\t\t\t\tconst res = flattenResultsObject(objValue)\n\t\t\t\t\tvalue[item] = unwrap(res, errors)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value\n\t\t})\n\t\t.mapErr(err => {\n\t\t\terrors.push(err)\n\t\t\treturn errors.flat()\n\t\t})\n\n\treturn errors.length > 0 ? err(errors.flat()) : flattened\n}\n"],"mappings":";;;;;;AAAA,MAAAA,YAAA,GAAAC,OAAA;AACA,MAAAC,YAAA,GAAAD,OAAA;AAEA,MAAME,MAAM,GAAGA,CAACC,WAAoB,EAAEC,MAA2B,KAAa;EAC7E,IAAIH,YAAA,CAAAI,QAAQ,CAACF,WAAW,CAAC,EAAE;IAC1B,IAAIA,WAAW,CAACG,IAAI,EAAE,EAAE;MACvB,MAAMC,KAAK,GAAGJ,WAAW,CAACI,KAAK;MAC/B,IAAIN,YAAA,CAAAI,QAAQ,CAACE,KAAK,CAAC,EAAE;QACpB,OAAOL,MAAM,CAACK,KAAK,EAAEH,MAAM,CAAC;;MAE7B,OAAOG,KAAK;KACZ,MAAM;MACNH,MAAM,CAACI,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MAC9B,OAAON,WAAW;;;EAGpB,OAAOA,WAAW;AACnB,CAAC;AAEM,MAAMO,oBAAoB,GAChCC,IAAsC,IACT;EAC7B,MAAMP,MAAM,GAAwB,EAAE;EAEtC,MAAMQ,SAAS,GAAGD,IAAI,CACpBE,GAAG,CAACN,KAAK,IAAG;IACZ,IAAI,CAACN,YAAA,CAAAa,QAAQ,CAACP,KAAK,CAAC,EAAE,OAAOA,KAAK;IAClC,KAAK,MAAMQ,IAAI,IAAIR,KAAK,EAAE;MACzB,MAAMS,QAAQ,GAAGT,KAAK,CAACQ,IAAI,CAAC;MAE5B,IAAIC,QAAQ,IAAIf,YAAA,CAAAI,QAAQ,CAACW,QAAQ,CAAC,EAAE;QACnC,MAAMC,GAAG,GAAGC,OAAA,CAAAR,oBAAoB,CAACM,QAAQ,CAAC;QAC1CT,KAAK,CAACQ,IAAI,CAAC,GAAGb,MAAM,CAACe,GAAG,EAAEb,MAAM,CAAC;;;IAGnC,OAAOG,KAAK;EACb,CAAC,CAAC,CACDY,MAAM,CAACC,GAAG,IAAG;IACbhB,MAAM,CAACI,IAAI,CAACY,GAAG,CAAC;IAChB,OAAOhB,MAAM,CAACiB,IAAI,EAAE;EACrB,CAAC,CAAC;EAEH,OAAOjB,MAAM,CAACkB,MAAM,GAAG,CAAC,GAAGvB,YAAA,CAAAqB,GAAG,CAAChB,MAAM,CAACiB,IAAI,EAAE,CAAC,GAAGT,SAAS;AAC1D,CAAC;AAxBYM,OAAA,CAAAR,oBAAoB,GAAAA,oBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}