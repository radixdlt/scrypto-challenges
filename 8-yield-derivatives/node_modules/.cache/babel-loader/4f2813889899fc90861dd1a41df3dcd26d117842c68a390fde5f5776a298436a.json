{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber,_Observable,_util_subscribeTo PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from './Subscriber';\nimport { Observable } from './Observable';\nimport { subscribeTo } from './util/subscribeTo';\nvar SimpleInnerSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SimpleInnerSubscriber, _super);\n  function SimpleInnerSubscriber(parent) {\n    var _this = _super.call(this) || this;\n    _this.parent = parent;\n    return _this;\n  }\n  SimpleInnerSubscriber.prototype._next = function (value) {\n    this.parent.notifyNext(value);\n  };\n  SimpleInnerSubscriber.prototype._error = function (error) {\n    this.parent.notifyError(error);\n    this.unsubscribe();\n  };\n  SimpleInnerSubscriber.prototype._complete = function () {\n    this.parent.notifyComplete();\n    this.unsubscribe();\n  };\n  return SimpleInnerSubscriber;\n}(Subscriber);\nexport { SimpleInnerSubscriber };\nvar ComplexInnerSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ComplexInnerSubscriber, _super);\n  function ComplexInnerSubscriber(parent, outerValue, outerIndex) {\n    var _this = _super.call(this) || this;\n    _this.parent = parent;\n    _this.outerValue = outerValue;\n    _this.outerIndex = outerIndex;\n    return _this;\n  }\n  ComplexInnerSubscriber.prototype._next = function (value) {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this);\n  };\n  ComplexInnerSubscriber.prototype._error = function (error) {\n    this.parent.notifyError(error);\n    this.unsubscribe();\n  };\n  ComplexInnerSubscriber.prototype._complete = function () {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  };\n  return ComplexInnerSubscriber;\n}(Subscriber);\nexport { ComplexInnerSubscriber };\nvar SimpleOuterSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SimpleOuterSubscriber, _super);\n  function SimpleOuterSubscriber() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  SimpleOuterSubscriber.prototype.notifyNext = function (innerValue) {\n    this.destination.next(innerValue);\n  };\n  SimpleOuterSubscriber.prototype.notifyError = function (err) {\n    this.destination.error(err);\n  };\n  SimpleOuterSubscriber.prototype.notifyComplete = function () {\n    this.destination.complete();\n  };\n  return SimpleOuterSubscriber;\n}(Subscriber);\nexport { SimpleOuterSubscriber };\nvar ComplexOuterSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ComplexOuterSubscriber, _super);\n  function ComplexOuterSubscriber() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ComplexOuterSubscriber.prototype.notifyNext = function (_outerValue, innerValue, _outerIndex, _innerSub) {\n    this.destination.next(innerValue);\n  };\n  ComplexOuterSubscriber.prototype.notifyError = function (error) {\n    this.destination.error(error);\n  };\n  ComplexOuterSubscriber.prototype.notifyComplete = function (_innerSub) {\n    this.destination.complete();\n  };\n  return ComplexOuterSubscriber;\n}(Subscriber);\nexport { ComplexOuterSubscriber };\nexport function innerSubscribe(result, innerSubscriber) {\n  if (innerSubscriber.closed) {\n    return undefined;\n  }\n  if (result instanceof Observable) {\n    return result.subscribe(innerSubscriber);\n  }\n  var subscription;\n  try {\n    subscription = subscribeTo(result)(innerSubscriber);\n  } catch (error) {\n    innerSubscriber.error(error);\n  }\n  return subscription;\n}","map":{"version":3,"names":["tslib_1","Subscriber","Observable","subscribeTo","SimpleInnerSubscriber","_super","__extends","parent","_this","call","prototype","_next","value","notifyNext","_error","error","notifyError","unsubscribe","_complete","notifyComplete","ComplexInnerSubscriber","outerValue","outerIndex","SimpleOuterSubscriber","apply","arguments","innerValue","destination","next","err","complete","ComplexOuterSubscriber","_outerValue","_outerIndex","_innerSub","innerSubscribe","result","innerSubscriber","closed","undefined","subscribe","subscription"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/radixdlt/node_modules/rxjs/src/internal/innerSubscribe.ts"],"sourcesContent":["/** @prettier */\nimport { Subscription } from './Subscription';\nimport { Subscriber } from './Subscriber';\nimport { Observable } from './Observable';\nimport { subscribeTo } from './util/subscribeTo';\n\ninterface SimpleOuterSubscriberLike<T> {\n  /**\n   * A handler for inner next notifications from the inner subscription\n   * @param innerValue the value nexted by the inner producer\n   */\n  notifyNext(innerValue: T): void;\n  /**\n   * A handler for inner error notifications from the inner subscription\n   * @param err the error from the inner producer\n   */\n  notifyError(err: any): void;\n  /**\n   * A handler for inner complete notifications from the inner subscription.\n   */\n  notifyComplete(): void;\n}\n\nexport class SimpleInnerSubscriber<T> extends Subscriber<T> {\n  constructor(private parent: SimpleOuterSubscriberLike<any>) {\n    super();\n  }\n\n  protected _next(value: T): void {\n    this.parent.notifyNext(value);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete();\n    this.unsubscribe();\n  }\n}\n\nexport class ComplexInnerSubscriber<T, R> extends Subscriber<R> {\n  constructor(private parent: ComplexOuterSubscriber<T, R>, public outerValue: T, public outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n\nexport class SimpleOuterSubscriber<T, R> extends Subscriber<T> implements SimpleOuterSubscriberLike<R> {\n  notifyNext(innerValue: R): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(): void {\n    this.destination.complete();\n  }\n}\n\n/**\n * DO NOT USE (formerly \"OuterSubscriber\")\n * TODO: We want to refactor this and remove it. It is retaining values it shouldn't for long\n * periods of time.\n */\nexport class ComplexOuterSubscriber<T, R> extends Subscriber<T> {\n  /**\n   * @param _outerValue Used by: bufferToggle, delayWhen, windowToggle\n   * @param innerValue Used by: subclass default, combineLatest, race, bufferToggle, windowToggle, withLatestFrom\n   * @param _outerIndex Used by: combineLatest, race, withLatestFrom\n   * @param _innerSub Used by: delayWhen\n   */\n  notifyNext(_outerValue: T, innerValue: R, _outerIndex: number, _innerSub: ComplexInnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any): void {\n    this.destination.error(error);\n  }\n\n  /**\n   * @param _innerSub Used by: race, bufferToggle, delayWhen, windowToggle, windowWhen\n   */\n  notifyComplete(_innerSub: ComplexInnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n\nexport function innerSubscribe(result: any, innerSubscriber: Subscriber<any>): Subscription | undefined {\n  if (innerSubscriber.closed) {\n    return undefined;\n  }\n  if (result instanceof Observable) {\n    return result.subscribe(innerSubscriber);\n  }\n  let subscription: Subscription;\n  try {\n    subscription = subscribeTo(result)(innerSubscriber) as Subscription;\n  } catch (error) {\n    innerSubscriber.error(error);\n  }\n  return subscription;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}