{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Signature = void 0;\nconst tslib_1 = require(\"tslib\");\nconst neverthrow_1 = require(\"neverthrow\");\nconst uint256_1 = require(\"@radixdlt/uint256\");\nconst primitives_1 = require(\"@radixdlt/primitives\");\nconst bn_js_1 = (0, tslib_1.__importDefault)(require(\"bn.js\"));\n// @ts-ignore\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst __js_DER = require('./indutnyEllipticImportDER');\nconst __fromRSAndDER = input => {\n  const {\n    r,\n    s,\n    der\n  } = input;\n  return {\n    r,\n    s,\n    toDER: () => der,\n    equals: other => other.toDER() === der\n  };\n};\nconst fromIndutnyElliptic = ellipticSignature => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const derUnknown = ellipticSignature.toDER('hex');\n  if (!derUnknown || typeof derUnknown !== 'string') {\n    throw new Error('Incorrect implementation, should always be able to format DER from signature.');\n  }\n  const der = derUnknown;\n  return (0, neverthrow_1.combine)([(0, primitives_1.uint256FromBN)(ellipticSignature.r), (0, primitives_1.uint256FromBN)(ellipticSignature.s)]).map(resultList => {\n    const r = resultList[0];\n    const s = resultList[1];\n    return __fromRSAndDER({\n      r,\n      s,\n      der\n    });\n  });\n};\nconst fromRSBuffer = buffer => {\n  const expectedLength = 64;\n  if (buffer.length !== expectedLength) {\n    return (0, neverthrow_1.err)(new Error(`Incorrect length of signature buffer (R||S), expected #${expectedLength} bytes, but got #${buffer.length}.`));\n  }\n  const rHex = buffer.slice(0, 32).toString('hex');\n  const r = new uint256_1.UInt256(rHex, 16);\n  const sHex = buffer.slice(32, 64).toString('hex');\n  const s = new uint256_1.UInt256(sHex, 16);\n  /* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access */\n  const der = __js_DER.__js_toDER(new bn_js_1.default(rHex, 16), new bn_js_1.default(sHex, 16), 'hex');\n  return (0, neverthrow_1.ok)(__fromRSAndDER({\n    r,\n    s,\n    der\n  }));\n  /* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access */\n};\nconst fromDER = buffer => {\n  const dataHex = typeof buffer === 'string' ? buffer : buffer.toString('hex');\n  /* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access */\n  const importedDER = __js_DER.__js_importDER(dataHex, 'hex');\n  if (!importedDER) {\n    return (0, neverthrow_1.err)(new Error('Failed to import DER'));\n  }\n  return (0, neverthrow_1.ok)(__fromRSAndDER({\n    r: importedDER.r,\n    s: importedDER.s,\n    der: buffer.toString('hex')\n  }));\n  /* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access */\n};\nexports.Signature = {\n  fromDER,\n  fromRSBuffer,\n  fromIndutnyElliptic\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","Signature","tslib_1","require","neverthrow_1","uint256_1","primitives_1","bn_js_1","__importDefault","__js_DER","__fromRSAndDER","input","r","s","der","toDER","equals","other","fromIndutnyElliptic","ellipticSignature","derUnknown","Error","combine","uint256FromBN","map","resultList","fromRSBuffer","buffer","expectedLength","length","err","rHex","slice","toString","UInt256","sHex","__js_toDER","default","ok","fromDER","dataHex","importedDER","__js_importDER"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/@radixdlt/crypto/dist/elliptic-curve/signature.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Signature = void 0;\nconst tslib_1 = require(\"tslib\");\nconst neverthrow_1 = require(\"neverthrow\");\nconst uint256_1 = require(\"@radixdlt/uint256\");\nconst primitives_1 = require(\"@radixdlt/primitives\");\nconst bn_js_1 = (0, tslib_1.__importDefault)(require(\"bn.js\"));\n// @ts-ignore\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst __js_DER = require('./indutnyEllipticImportDER');\nconst __fromRSAndDER = (input) => {\n    const { r, s, der } = input;\n    return {\n        r,\n        s,\n        toDER: () => der,\n        equals: (other) => other.toDER() === der,\n    };\n};\nconst fromIndutnyElliptic = (ellipticSignature) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const derUnknown = ellipticSignature.toDER('hex');\n    if (!derUnknown || typeof derUnknown !== 'string') {\n        throw new Error('Incorrect implementation, should always be able to format DER from signature.');\n    }\n    const der = derUnknown;\n    return (0, neverthrow_1.combine)([\n        (0, primitives_1.uint256FromBN)(ellipticSignature.r),\n        (0, primitives_1.uint256FromBN)(ellipticSignature.s),\n    ]).map(resultList => {\n        const r = resultList[0];\n        const s = resultList[1];\n        return __fromRSAndDER({ r, s, der });\n    });\n};\nconst fromRSBuffer = (buffer) => {\n    const expectedLength = 64;\n    if (buffer.length !== expectedLength) {\n        return (0, neverthrow_1.err)(new Error(`Incorrect length of signature buffer (R||S), expected #${expectedLength} bytes, but got #${buffer.length}.`));\n    }\n    const rHex = buffer.slice(0, 32).toString('hex');\n    const r = new uint256_1.UInt256(rHex, 16);\n    const sHex = buffer.slice(32, 64).toString('hex');\n    const s = new uint256_1.UInt256(sHex, 16);\n    /* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access */\n    const der = __js_DER.__js_toDER(new bn_js_1.default(rHex, 16), new bn_js_1.default(sHex, 16), 'hex');\n    return (0, neverthrow_1.ok)(__fromRSAndDER({\n        r,\n        s,\n        der,\n    }));\n    /* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access */\n};\nconst fromDER = (buffer) => {\n    const dataHex = typeof buffer === 'string' ? buffer : buffer.toString('hex');\n    /* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access */\n    const importedDER = __js_DER.__js_importDER(dataHex, 'hex');\n    if (!importedDER) {\n        return (0, neverthrow_1.err)(new Error('Failed to import DER'));\n    }\n    return (0, neverthrow_1.ok)(__fromRSAndDER({\n        r: importedDER.r,\n        s: importedDER.s,\n        der: buffer.toString('hex'),\n    }));\n    /* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access */\n};\nexports.Signature = {\n    fromDER,\n    fromRSBuffer,\n    fromIndutnyElliptic,\n};\n//# sourceMappingURL=signature.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}