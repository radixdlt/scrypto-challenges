{"ast":null,"code":"\"use strict\";\n\nvar assert = require('assert');\nfunction BufferReader(buffer) {\n  buffer = buffer || new Buffer(0);\n  assert(Buffer.isBuffer(buffer), 'A Buffer must be provided');\n  this.buf = buffer;\n  this.offset = 0;\n}\nBufferReader.prototype.append = function (buffer) {\n  assert(Buffer.isBuffer(buffer), 'A Buffer must be provided');\n  this.buf = Buffer.concat([this.buf, buffer]);\n  return this;\n};\nBufferReader.prototype.tell = function () {\n  return this.offset;\n};\nBufferReader.prototype.seek = function (pos) {\n  assert(pos >= 0 && pos <= this.buf.length, 'Position is Invalid');\n  this.offset = pos;\n  return this;\n};\nBufferReader.prototype.move = function (diff) {\n  assert(this.offset + diff >= 0 && this.offset + diff <= this.buf.length, 'Difference is Invalid');\n  this.offset += diff;\n  return this;\n};\nBufferReader.prototype.nextAll = BufferReader.prototype.restAll = function () {\n  var remain = this.buf.length - this.offset;\n  assert(remain >= 0, 'Buffer is not in normal state: offset > totalLength');\n  var buf = new Buffer(remain);\n  this.buf.copy(buf, 0, this.offset);\n  this.offset = this.buf.length;\n  return buf;\n};\nBufferReader.prototype.nextBuffer = function (length) {\n  assert(length >= 0, 'Length must be no negative');\n  assert(this.offset + length <= this.buf.length, \"Out of Original Buffer's Boundary\");\n  var buf = new Buffer(length);\n  this.buf.copy(buf, 0, this.offset, this.offset + length);\n  this.offset += length;\n  return buf;\n};\nBufferReader.prototype.nextString = function (length, encoding) {\n  assert(length >= 0, 'Length must be no negative');\n  assert(this.offset + length <= this.buf.length, \"Out of Original Buffer's Boundary\");\n  this.offset += length;\n  return this.buf.toString(encoding, this.offset - length, this.offset);\n};\nBufferReader.prototype.nextStringZero = function (encoding) {\n  // Find null by end of buffer\n  for (var length = 0; length + this.offset < this.buf.length && this.buf[this.offset + length] !== 0x00; length++);\n  assert(length <= this.buf.length && this.buf[this.offset + length] === 0x00, \"Out of Original Buffer's Boundary\");\n  this.offset += length + 1;\n  return this.buf.toString(encoding, this.offset - length - 1, this.offset - 1);\n};\nfunction MAKE_NEXT_READER(valueName, size) {\n  valueName = cap(valueName);\n  BufferReader.prototype['next' + valueName] = function () {\n    assert(this.offset + size <= this.buf.length, \"Out of Original Buffer's Boundary\");\n    var val = this.buf['read' + valueName](this.offset);\n    this.offset += size;\n    return val;\n  };\n}\nfunction MAKE_NEXT_READER_BOTH(valueName, size) {\n  MAKE_NEXT_READER(valueName + 'LE', size);\n  MAKE_NEXT_READER(valueName + 'BE', size);\n}\nMAKE_NEXT_READER('Int8', 1);\nMAKE_NEXT_READER('UInt8', 1);\nMAKE_NEXT_READER_BOTH('UInt16', 2);\nMAKE_NEXT_READER_BOTH('Int16', 2);\nMAKE_NEXT_READER_BOTH('UInt32', 4);\nMAKE_NEXT_READER_BOTH('Int32', 4);\nMAKE_NEXT_READER_BOTH('Float', 4);\nMAKE_NEXT_READER_BOTH('Double', 8);\nfunction cap(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nmodule.exports = BufferReader;","map":{"version":3,"names":["assert","require","BufferReader","buffer","Buffer","isBuffer","buf","offset","prototype","append","concat","tell","seek","pos","length","move","diff","nextAll","restAll","remain","copy","nextBuffer","nextString","encoding","toString","nextStringZero","MAKE_NEXT_READER","valueName","size","cap","val","MAKE_NEXT_READER_BOTH","str","charAt","toUpperCase","slice","module","exports"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/buffer-reader/index.js"],"sourcesContent":["\"use strict\";\n\nvar assert = require('assert');\n\nfunction BufferReader(buffer) {\n    buffer = buffer || new Buffer(0);\n    assert(Buffer.isBuffer(buffer), 'A Buffer must be provided');\n    this.buf = buffer;\n    this.offset = 0;\n}\n\nBufferReader.prototype.append = function(buffer) {\n    assert(Buffer.isBuffer(buffer), 'A Buffer must be provided');\n    this.buf = Buffer.concat([this.buf, buffer]);\n    return this;\n};\n\nBufferReader.prototype.tell = function() {\n    return this.offset;\n};\n\nBufferReader.prototype.seek = function(pos) {\n    assert(pos >= 0 && pos <= this.buf.length, 'Position is Invalid');\n    this.offset = pos;\n    return this;\n};\n\nBufferReader.prototype.move = function(diff) {\n    assert(this.offset + diff >= 0 && this.offset + diff <= this.buf.length, 'Difference is Invalid');\n    this.offset += diff;\n    return this;\n};\n\n\nBufferReader.prototype.nextAll =\nBufferReader.prototype.restAll = function() {\n    var remain = this.buf.length - this.offset;\n    assert(remain >= 0, 'Buffer is not in normal state: offset > totalLength');\n    var buf = new Buffer(remain);\n    this.buf.copy(buf, 0, this.offset);\n    this.offset = this.buf.length;\n    return buf;\n};\n\n\nBufferReader.prototype.nextBuffer = function(length) {\n    assert(length >= 0, 'Length must be no negative');\n    assert(this.offset + length <= this.buf.length, \"Out of Original Buffer's Boundary\");\n    var buf = new Buffer(length);\n    this.buf.copy(buf, 0, this.offset, this.offset + length);\n    this.offset += length;\n    return buf;\n};\n\nBufferReader.prototype.nextString = function(length, encoding) {\n    assert(length >= 0, 'Length must be no negative');\n    assert(this.offset + length <= this.buf.length, \"Out of Original Buffer's Boundary\");\n\n    this.offset += length;\n    return this.buf.toString(encoding, this.offset - length, this.offset);\n};\n\nBufferReader.prototype.nextStringZero = function(encoding) {\n    // Find null by end of buffer\n    for(var length = 0; length + this.offset < this.buf.length && this.buf[this.offset + length] !== 0x00; length++) ;\n    \n    assert(length <= this.buf.length && this.buf[this.offset + length] === 0x00, \"Out of Original Buffer's Boundary\");\n\n    this.offset += length + 1;\n    return this.buf.toString(encoding, this.offset - length - 1, this.offset - 1);\n};\n\n\nfunction MAKE_NEXT_READER(valueName, size) {\n    valueName = cap(valueName);\n    BufferReader.prototype['next' + valueName] = function() {\n        assert(this.offset + size <= this.buf.length, \"Out of Original Buffer's Boundary\");\n        var val = this.buf['read' + valueName](this.offset);\n        this.offset += size;\n        return val;\n    };\n}\n\nfunction MAKE_NEXT_READER_BOTH(valueName, size) {\n    MAKE_NEXT_READER(valueName + 'LE', size);\n    MAKE_NEXT_READER(valueName + 'BE', size);\n}\n\nMAKE_NEXT_READER('Int8', 1);\nMAKE_NEXT_READER('UInt8', 1);\nMAKE_NEXT_READER_BOTH('UInt16', 2);\nMAKE_NEXT_READER_BOTH('Int16', 2);\nMAKE_NEXT_READER_BOTH('UInt32', 4);\nMAKE_NEXT_READER_BOTH('Int32', 4);\nMAKE_NEXT_READER_BOTH('Float', 4);\nMAKE_NEXT_READER_BOTH('Double', 8);\n\nfunction cap(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nmodule.exports = BufferReader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}