{"ast":null,"code":"import _isArrayLike from \"./_isArrayLike.js\";\nimport _xwrap from \"./_xwrap.js\";\nimport bind from \"../bind.js\";\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx += 1;\n  }\n  return xf['@@transducer/result'](acc);\n}\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    step = iter.next();\n  }\n  return xf['@@transducer/result'](acc);\n}\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n  throw new TypeError('reduce: list must be array or iterable');\n}","map":{"version":3,"names":["_isArrayLike","_xwrap","bind","_arrayReduce","xf","acc","list","idx","len","length","_iterableReduce","iter","step","next","done","value","_methodReduce","obj","methodName","symIterator","Symbol","iterator","_reduce","fn","reduce","TypeError"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/ramda/es/internal/_reduce.js"],"sourcesContent":["import _isArrayLike from \"./_isArrayLike.js\";\nimport _xwrap from \"./_xwrap.js\";\nimport bind from \"../bind.js\";\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    idx += 1;\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    step = iter.next();\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}"],"mappings":"AAAA,OAAOA,YAAY,MAAM,mBAAmB;AAC5C,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,IAAI,MAAM,YAAY;AAE7B,SAASC,YAAYA,CAACC,EAAE,EAAEC,GAAG,EAAEC,IAAI,EAAE;EACnC,IAAIC,GAAG,GAAG,CAAC;EACX,IAAIC,GAAG,GAAGF,IAAI,CAACG,MAAM;EAErB,OAAOF,GAAG,GAAGC,GAAG,EAAE;IAChBH,GAAG,GAAGD,EAAE,CAAC,mBAAmB,CAAC,CAACC,GAAG,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;IAE7C,IAAIF,GAAG,IAAIA,GAAG,CAAC,sBAAsB,CAAC,EAAE;MACtCA,GAAG,GAAGA,GAAG,CAAC,oBAAoB,CAAC;MAC/B;IACF;IAEAE,GAAG,IAAI,CAAC;EACV;EAEA,OAAOH,EAAE,CAAC,qBAAqB,CAAC,CAACC,GAAG,CAAC;AACvC;AAEA,SAASK,eAAeA,CAACN,EAAE,EAAEC,GAAG,EAAEM,IAAI,EAAE;EACtC,IAAIC,IAAI,GAAGD,IAAI,CAACE,IAAI,CAAC,CAAC;EAEtB,OAAO,CAACD,IAAI,CAACE,IAAI,EAAE;IACjBT,GAAG,GAAGD,EAAE,CAAC,mBAAmB,CAAC,CAACC,GAAG,EAAEO,IAAI,CAACG,KAAK,CAAC;IAE9C,IAAIV,GAAG,IAAIA,GAAG,CAAC,sBAAsB,CAAC,EAAE;MACtCA,GAAG,GAAGA,GAAG,CAAC,oBAAoB,CAAC;MAC/B;IACF;IAEAO,IAAI,GAAGD,IAAI,CAACE,IAAI,CAAC,CAAC;EACpB;EAEA,OAAOT,EAAE,CAAC,qBAAqB,CAAC,CAACC,GAAG,CAAC;AACvC;AAEA,SAASW,aAAaA,CAACZ,EAAE,EAAEC,GAAG,EAAEY,GAAG,EAAEC,UAAU,EAAE;EAC/C,OAAOd,EAAE,CAAC,qBAAqB,CAAC,CAACa,GAAG,CAACC,UAAU,CAAC,CAAChB,IAAI,CAACE,EAAE,CAAC,mBAAmB,CAAC,EAAEA,EAAE,CAAC,EAAEC,GAAG,CAAC,CAAC;AAC3F;AAEA,IAAIc,WAAW,GAAG,OAAOC,MAAM,KAAK,WAAW,GAAGA,MAAM,CAACC,QAAQ,GAAG,YAAY;AAChF,eAAe,SAASC,OAAOA,CAACC,EAAE,EAAElB,GAAG,EAAEC,IAAI,EAAE;EAC7C,IAAI,OAAOiB,EAAE,KAAK,UAAU,EAAE;IAC5BA,EAAE,GAAGtB,MAAM,CAACsB,EAAE,CAAC;EACjB;EAEA,IAAIvB,YAAY,CAACM,IAAI,CAAC,EAAE;IACtB,OAAOH,YAAY,CAACoB,EAAE,EAAElB,GAAG,EAAEC,IAAI,CAAC;EACpC;EAEA,IAAI,OAAOA,IAAI,CAAC,qBAAqB,CAAC,KAAK,UAAU,EAAE;IACrD,OAAOU,aAAa,CAACO,EAAE,EAAElB,GAAG,EAAEC,IAAI,EAAE,qBAAqB,CAAC;EAC5D;EAEA,IAAIA,IAAI,CAACa,WAAW,CAAC,IAAI,IAAI,EAAE;IAC7B,OAAOT,eAAe,CAACa,EAAE,EAAElB,GAAG,EAAEC,IAAI,CAACa,WAAW,CAAC,CAAC,CAAC,CAAC;EACtD;EAEA,IAAI,OAAOb,IAAI,CAACO,IAAI,KAAK,UAAU,EAAE;IACnC,OAAOH,eAAe,CAACa,EAAE,EAAElB,GAAG,EAAEC,IAAI,CAAC;EACvC;EAEA,IAAI,OAAOA,IAAI,CAACkB,MAAM,KAAK,UAAU,EAAE;IACrC,OAAOR,aAAa,CAACO,EAAE,EAAElB,GAAG,EAAEC,IAAI,EAAE,QAAQ,CAAC;EAC/C;EAEA,MAAM,IAAImB,SAAS,CAAC,wCAAwC,CAAC;AAC/D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}