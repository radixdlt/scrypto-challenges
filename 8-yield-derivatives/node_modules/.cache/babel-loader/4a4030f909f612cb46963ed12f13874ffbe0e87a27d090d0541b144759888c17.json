{"ast":null,"code":"'use strict';\n\nvar KEYWORDS = ['multipleOf', 'maximum', 'exclusiveMaximum', 'minimum', 'exclusiveMinimum', 'maxLength', 'minLength', 'pattern', 'additionalItems', 'maxItems', 'minItems', 'uniqueItems', 'maxProperties', 'minProperties', 'required', 'additionalProperties', 'enum', 'format', 'const'];\nmodule.exports = function (metaSchema, keywordsJsonPointers) {\n  for (var i = 0; i < keywordsJsonPointers.length; i++) {\n    metaSchema = JSON.parse(JSON.stringify(metaSchema));\n    var segments = keywordsJsonPointers[i].split('/');\n    var keywords = metaSchema;\n    var j;\n    for (j = 1; j < segments.length; j++) keywords = keywords[segments[j]];\n    for (j = 0; j < KEYWORDS.length; j++) {\n      var key = KEYWORDS[j];\n      var schema = keywords[key];\n      if (schema) {\n        keywords[key] = {\n          anyOf: [schema, {\n            $ref: 'https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#'\n          }]\n        };\n      }\n    }\n  }\n  return metaSchema;\n};","map":{"version":3,"names":["KEYWORDS","module","exports","metaSchema","keywordsJsonPointers","i","length","JSON","parse","stringify","segments","split","keywords","j","key","schema","anyOf","$ref"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/ajv/lib/data.js"],"sourcesContent":["'use strict';\n\nvar KEYWORDS = [\n  'multipleOf',\n  'maximum',\n  'exclusiveMaximum',\n  'minimum',\n  'exclusiveMinimum',\n  'maxLength',\n  'minLength',\n  'pattern',\n  'additionalItems',\n  'maxItems',\n  'minItems',\n  'uniqueItems',\n  'maxProperties',\n  'minProperties',\n  'required',\n  'additionalProperties',\n  'enum',\n  'format',\n  'const'\n];\n\nmodule.exports = function (metaSchema, keywordsJsonPointers) {\n  for (var i=0; i<keywordsJsonPointers.length; i++) {\n    metaSchema = JSON.parse(JSON.stringify(metaSchema));\n    var segments = keywordsJsonPointers[i].split('/');\n    var keywords = metaSchema;\n    var j;\n    for (j=1; j<segments.length; j++)\n      keywords = keywords[segments[j]];\n\n    for (j=0; j<KEYWORDS.length; j++) {\n      var key = KEYWORDS[j];\n      var schema = keywords[key];\n      if (schema) {\n        keywords[key] = {\n          anyOf: [\n            schema,\n            { $ref: 'https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#' }\n          ]\n        };\n      }\n    }\n  }\n\n  return metaSchema;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,QAAQ,GAAG,CACb,YAAY,EACZ,SAAS,EACT,kBAAkB,EAClB,SAAS,EACT,kBAAkB,EAClB,WAAW,EACX,WAAW,EACX,SAAS,EACT,iBAAiB,EACjB,UAAU,EACV,UAAU,EACV,aAAa,EACb,eAAe,EACf,eAAe,EACf,UAAU,EACV,sBAAsB,EACtB,MAAM,EACN,QAAQ,EACR,OAAO,CACR;AAEDC,MAAM,CAACC,OAAO,GAAG,UAAUC,UAAU,EAAEC,oBAAoB,EAAE;EAC3D,KAAK,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACD,oBAAoB,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;IAChDF,UAAU,GAAGI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACN,UAAU,CAAC,CAAC;IACnD,IAAIO,QAAQ,GAAGN,oBAAoB,CAACC,CAAC,CAAC,CAACM,KAAK,CAAC,GAAG,CAAC;IACjD,IAAIC,QAAQ,GAAGT,UAAU;IACzB,IAAIU,CAAC;IACL,KAAKA,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACH,QAAQ,CAACJ,MAAM,EAAEO,CAAC,EAAE,EAC9BD,QAAQ,GAAGA,QAAQ,CAACF,QAAQ,CAACG,CAAC,CAAC,CAAC;IAElC,KAAKA,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACb,QAAQ,CAACM,MAAM,EAAEO,CAAC,EAAE,EAAE;MAChC,IAAIC,GAAG,GAAGd,QAAQ,CAACa,CAAC,CAAC;MACrB,IAAIE,MAAM,GAAGH,QAAQ,CAACE,GAAG,CAAC;MAC1B,IAAIC,MAAM,EAAE;QACVH,QAAQ,CAACE,GAAG,CAAC,GAAG;UACdE,KAAK,EAAE,CACLD,MAAM,EACN;YAAEE,IAAI,EAAE;UAAiF,CAAC;QAE9F,CAAC;MACH;IACF;EACF;EAEA,OAAOd,UAAU;AACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}