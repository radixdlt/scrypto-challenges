{"ast":null,"code":"'use strict';\n\nmodule.exports = function generate_custom(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + $lvl + ' = ' + it.util.getData($schema.$data, $dataLvl, it.dataPathArr) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $rule = this,\n    $definition = 'definition' + $lvl,\n    $rDef = $rule.definition,\n    $closingBraces = '';\n  var $compile, $inline, $macro, $ruleValidate, $validateCode;\n  if ($isData && $rDef.$data) {\n    $validateCode = 'keywordValidate' + $lvl;\n    var $validateSchema = $rDef.validateSchema;\n    out += ' var ' + $definition + ' = RULES.custom[\\'' + $keyword + '\\'].definition; var ' + $validateCode + ' = ' + $definition + '.validate;';\n  } else {\n    $ruleValidate = it.useCustomRule($rule, $schema, it.schema, it);\n    if (!$ruleValidate) return;\n    $schemaValue = 'validate.schema' + $schemaPath;\n    $validateCode = $ruleValidate.code;\n    $compile = $rDef.compile;\n    $inline = $rDef.inline;\n    $macro = $rDef.macro;\n  }\n  var $ruleErrs = $validateCode + '.errors',\n    $i = 'i' + $lvl,\n    $ruleErr = 'ruleErr' + $lvl,\n    $asyncKeyword = $rDef.async;\n  if ($asyncKeyword && !it.async) throw new Error('async keyword in sync schema');\n  if (!($inline || $macro)) {\n    out += '' + $ruleErrs + ' = null;';\n  }\n  out += 'var ' + $errs + ' = errors;var ' + $valid + ';';\n  if ($isData && $rDef.$data) {\n    $closingBraces += '}';\n    out += ' if (' + $schemaValue + ' === undefined) { ' + $valid + ' = true; } else { ';\n    if ($validateSchema) {\n      $closingBraces += '}';\n      out += ' ' + $valid + ' = ' + $definition + '.validateSchema(' + $schemaValue + '); if (' + $valid + ') { ';\n    }\n  }\n  if ($inline) {\n    if ($rDef.statements) {\n      out += ' ' + $ruleValidate.validate + ' ';\n    } else {\n      out += ' ' + $valid + ' = ' + $ruleValidate.validate + '; ';\n    }\n  } else if ($macro) {\n    var $it = it.util.copy(it);\n    var $closingBraces = '';\n    $it.level++;\n    var $nextValid = 'valid' + $it.level;\n    $it.schema = $ruleValidate.validate;\n    $it.schemaPath = '';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var $code = it.validate($it).replace(/validate\\.schema/g, $validateCode);\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + $code;\n  } else {\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    out += '  ' + $validateCode + '.call( ';\n    if (it.opts.passContext) {\n      out += 'this';\n    } else {\n      out += 'self';\n    }\n    if ($compile || $rDef.schema === false) {\n      out += ' , ' + $data + ' ';\n    } else {\n      out += ' , ' + $schemaValue + ' , ' + $data + ' , validate.schema' + it.schemaPath + ' ';\n    }\n    out += ' , (dataPath || \\'\\')';\n    if (it.errorPath != '\"\"') {\n      out += ' + ' + it.errorPath;\n    }\n    var $parentData = $dataLvl ? 'data' + ($dataLvl - 1 || '') : 'parentData',\n      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n    out += ' , ' + $parentData + ' , ' + $parentDataProperty + ' , rootData )  ';\n    var def_callRuleValidate = out;\n    out = $$outStack.pop();\n    if ($rDef.errors === false) {\n      out += ' ' + $valid + ' = ';\n      if ($asyncKeyword) {\n        out += 'await ';\n      }\n      out += '' + def_callRuleValidate + '; ';\n    } else {\n      if ($asyncKeyword) {\n        $ruleErrs = 'customErrors' + $lvl;\n        out += ' var ' + $ruleErrs + ' = null; try { ' + $valid + ' = await ' + def_callRuleValidate + '; } catch (e) { ' + $valid + ' = false; if (e instanceof ValidationError) ' + $ruleErrs + ' = e.errors; else throw e; } ';\n      } else {\n        out += ' ' + $ruleErrs + ' = null; ' + $valid + ' = ' + def_callRuleValidate + '; ';\n      }\n    }\n  }\n  if ($rDef.modifying) {\n    out += ' if (' + $parentData + ') ' + $data + ' = ' + $parentData + '[' + $parentDataProperty + '];';\n  }\n  out += '' + $closingBraces;\n  if ($rDef.valid) {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  } else {\n    out += ' if ( ';\n    if ($rDef.valid === undefined) {\n      out += ' !';\n      if ($macro) {\n        out += '' + $nextValid;\n      } else {\n        out += '' + $valid;\n      }\n    } else {\n      out += ' ' + !$rDef.valid + ' ';\n    }\n    out += ') { ';\n    $errorKeyword = $rule.keyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || 'custom') + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { keyword: \\'' + $rule.keyword + '\\' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should pass \"' + $rule.keyword + '\" keyword validation\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + __err + ']); ';\n      } else {\n        out += ' validate.errors = [' + __err + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    var def_customError = out;\n    out = $$outStack.pop();\n    if ($inline) {\n      if ($rDef.errors) {\n        if ($rDef.errors != 'full') {\n          out += '  for (var ' + $i + '=' + $errs + '; ' + $i + '<errors; ' + $i + '++) { var ' + $ruleErr + ' = vErrors[' + $i + ']; if (' + $ruleErr + '.dataPath === undefined) ' + $ruleErr + '.dataPath = (dataPath || \\'\\') + ' + it.errorPath + '; if (' + $ruleErr + '.schemaPath === undefined) { ' + $ruleErr + '.schemaPath = \"' + $errSchemaPath + '\"; } ';\n          if (it.opts.verbose) {\n            out += ' ' + $ruleErr + '.schema = ' + $schemaValue + '; ' + $ruleErr + '.data = ' + $data + '; ';\n          }\n          out += ' } ';\n        }\n      } else {\n        if ($rDef.errors === false) {\n          out += ' ' + def_customError + ' ';\n        } else {\n          out += ' if (' + $errs + ' == errors) { ' + def_customError + ' } else {  for (var ' + $i + '=' + $errs + '; ' + $i + '<errors; ' + $i + '++) { var ' + $ruleErr + ' = vErrors[' + $i + ']; if (' + $ruleErr + '.dataPath === undefined) ' + $ruleErr + '.dataPath = (dataPath || \\'\\') + ' + it.errorPath + '; if (' + $ruleErr + '.schemaPath === undefined) { ' + $ruleErr + '.schemaPath = \"' + $errSchemaPath + '\"; } ';\n          if (it.opts.verbose) {\n            out += ' ' + $ruleErr + '.schema = ' + $schemaValue + '; ' + $ruleErr + '.data = ' + $data + '; ';\n          }\n          out += ' } } ';\n        }\n      }\n    } else if ($macro) {\n      out += '   var err =   '; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'custom') + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { keyword: \\'' + $rule.keyword + '\\' } ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should pass \"' + $rule.keyword + '\" keyword validation\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError(vErrors); ';\n        } else {\n          out += ' validate.errors = vErrors; return false; ';\n        }\n      }\n    } else {\n      if ($rDef.errors === false) {\n        out += ' ' + def_customError + ' ';\n      } else {\n        out += ' if (Array.isArray(' + $ruleErrs + ')) { if (vErrors === null) vErrors = ' + $ruleErrs + '; else vErrors = vErrors.concat(' + $ruleErrs + '); errors = vErrors.length;  for (var ' + $i + '=' + $errs + '; ' + $i + '<errors; ' + $i + '++) { var ' + $ruleErr + ' = vErrors[' + $i + ']; if (' + $ruleErr + '.dataPath === undefined) ' + $ruleErr + '.dataPath = (dataPath || \\'\\') + ' + it.errorPath + ';  ' + $ruleErr + '.schemaPath = \"' + $errSchemaPath + '\";  ';\n        if (it.opts.verbose) {\n          out += ' ' + $ruleErr + '.schema = ' + $schemaValue + '; ' + $ruleErr + '.data = ' + $data + '; ';\n        }\n        out += ' } } else { ' + def_customError + ' } ';\n      }\n    }\n    out += ' } ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n  }\n  return out;\n};","map":{"version":3,"names":["module","exports","generate_custom","it","$keyword","$ruleType","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$errorKeyword","$data","$valid","$errs","$isData","$schemaValue","getData","dataPathArr","$rule","$definition","$rDef","definition","$closingBraces","$compile","$inline","$macro","$ruleValidate","$validateCode","$validateSchema","validateSchema","useCustomRule","code","compile","inline","macro","$ruleErrs","$i","$ruleErr","$asyncKeyword","async","Error","statements","validate","$it","copy","$nextValid","$wasComposite","compositeRule","$code","replace","$$outStack","push","passContext","errorPath","$parentData","$parentDataProperty","def_callRuleValidate","pop","errors","modifying","valid","undefined","keyword","createErrors","toQuotedString","messages","verbose","__err","def_customError"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/ajv/lib/dotjs/custom.js"],"sourcesContent":["'use strict';\nmodule.exports = function generate_custom(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $rule = this,\n    $definition = 'definition' + $lvl,\n    $rDef = $rule.definition,\n    $closingBraces = '';\n  var $compile, $inline, $macro, $ruleValidate, $validateCode;\n  if ($isData && $rDef.$data) {\n    $validateCode = 'keywordValidate' + $lvl;\n    var $validateSchema = $rDef.validateSchema;\n    out += ' var ' + ($definition) + ' = RULES.custom[\\'' + ($keyword) + '\\'].definition; var ' + ($validateCode) + ' = ' + ($definition) + '.validate;';\n  } else {\n    $ruleValidate = it.useCustomRule($rule, $schema, it.schema, it);\n    if (!$ruleValidate) return;\n    $schemaValue = 'validate.schema' + $schemaPath;\n    $validateCode = $ruleValidate.code;\n    $compile = $rDef.compile;\n    $inline = $rDef.inline;\n    $macro = $rDef.macro;\n  }\n  var $ruleErrs = $validateCode + '.errors',\n    $i = 'i' + $lvl,\n    $ruleErr = 'ruleErr' + $lvl,\n    $asyncKeyword = $rDef.async;\n  if ($asyncKeyword && !it.async) throw new Error('async keyword in sync schema');\n  if (!($inline || $macro)) {\n    out += '' + ($ruleErrs) + ' = null;';\n  }\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if ($isData && $rDef.$data) {\n    $closingBraces += '}';\n    out += ' if (' + ($schemaValue) + ' === undefined) { ' + ($valid) + ' = true; } else { ';\n    if ($validateSchema) {\n      $closingBraces += '}';\n      out += ' ' + ($valid) + ' = ' + ($definition) + '.validateSchema(' + ($schemaValue) + '); if (' + ($valid) + ') { ';\n    }\n  }\n  if ($inline) {\n    if ($rDef.statements) {\n      out += ' ' + ($ruleValidate.validate) + ' ';\n    } else {\n      out += ' ' + ($valid) + ' = ' + ($ruleValidate.validate) + '; ';\n    }\n  } else if ($macro) {\n    var $it = it.util.copy(it);\n    var $closingBraces = '';\n    $it.level++;\n    var $nextValid = 'valid' + $it.level;\n    $it.schema = $ruleValidate.validate;\n    $it.schemaPath = '';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var $code = it.validate($it).replace(/validate\\.schema/g, $validateCode);\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($code);\n  } else {\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    out += '  ' + ($validateCode) + '.call( ';\n    if (it.opts.passContext) {\n      out += 'this';\n    } else {\n      out += 'self';\n    }\n    if ($compile || $rDef.schema === false) {\n      out += ' , ' + ($data) + ' ';\n    } else {\n      out += ' , ' + ($schemaValue) + ' , ' + ($data) + ' , validate.schema' + (it.schemaPath) + ' ';\n    }\n    out += ' , (dataPath || \\'\\')';\n    if (it.errorPath != '\"\"') {\n      out += ' + ' + (it.errorPath);\n    }\n    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ' , rootData )  ';\n    var def_callRuleValidate = out;\n    out = $$outStack.pop();\n    if ($rDef.errors === false) {\n      out += ' ' + ($valid) + ' = ';\n      if ($asyncKeyword) {\n        out += 'await ';\n      }\n      out += '' + (def_callRuleValidate) + '; ';\n    } else {\n      if ($asyncKeyword) {\n        $ruleErrs = 'customErrors' + $lvl;\n        out += ' var ' + ($ruleErrs) + ' = null; try { ' + ($valid) + ' = await ' + (def_callRuleValidate) + '; } catch (e) { ' + ($valid) + ' = false; if (e instanceof ValidationError) ' + ($ruleErrs) + ' = e.errors; else throw e; } ';\n      } else {\n        out += ' ' + ($ruleErrs) + ' = null; ' + ($valid) + ' = ' + (def_callRuleValidate) + '; ';\n      }\n    }\n  }\n  if ($rDef.modifying) {\n    out += ' if (' + ($parentData) + ') ' + ($data) + ' = ' + ($parentData) + '[' + ($parentDataProperty) + '];';\n  }\n  out += '' + ($closingBraces);\n  if ($rDef.valid) {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  } else {\n    out += ' if ( ';\n    if ($rDef.valid === undefined) {\n      out += ' !';\n      if ($macro) {\n        out += '' + ($nextValid);\n      } else {\n        out += '' + ($valid);\n      }\n    } else {\n      out += ' ' + (!$rDef.valid) + ' ';\n    }\n    out += ') { ';\n    $errorKeyword = $rule.keyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || 'custom') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \\'' + ($rule.keyword) + '\\' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should pass \"' + ($rule.keyword) + '\" keyword validation\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    var def_customError = out;\n    out = $$outStack.pop();\n    if ($inline) {\n      if ($rDef.errors) {\n        if ($rDef.errors != 'full') {\n          out += '  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\"; } ';\n          if (it.opts.verbose) {\n            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n          }\n          out += ' } ';\n        }\n      } else {\n        if ($rDef.errors === false) {\n          out += ' ' + (def_customError) + ' ';\n        } else {\n          out += ' if (' + ($errs) + ' == errors) { ' + (def_customError) + ' } else {  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\"; } ';\n          if (it.opts.verbose) {\n            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n          }\n          out += ' } } ';\n        }\n      }\n    } else if ($macro) {\n      out += '   var err =   '; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'custom') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \\'' + ($rule.keyword) + '\\' } ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should pass \"' + ($rule.keyword) + '\" keyword validation\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError(vErrors); ';\n        } else {\n          out += ' validate.errors = vErrors; return false; ';\n        }\n      }\n    } else {\n      if ($rDef.errors === false) {\n        out += ' ' + (def_customError) + ' ';\n      } else {\n        out += ' if (Array.isArray(' + ($ruleErrs) + ')) { if (vErrors === null) vErrors = ' + ($ruleErrs) + '; else vErrors = vErrors.concat(' + ($ruleErrs) + '); errors = vErrors.length;  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + ';  ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\";  ';\n        if (it.opts.verbose) {\n          out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n        }\n        out += ' } } else { ' + (def_customError) + ' } ';\n      }\n    }\n    out += ' } ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n  }\n  return out;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}