{"ast":null,"code":"// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from 'openai/resource';\nimport { ChatCompletionRunner } from 'openai/lib/ChatCompletionRunner';\nexport { ChatCompletionRunner } from 'openai/lib/ChatCompletionRunner';\nimport { ChatCompletionStreamingRunner } from 'openai/lib/ChatCompletionStreamingRunner';\nexport { ChatCompletionStreamingRunner } from 'openai/lib/ChatCompletionStreamingRunner';\nexport { ParsingFunction, ParsingToolFunction } from 'openai/lib/RunnableFunction';\nimport { ChatCompletionStream } from 'openai/lib/ChatCompletionStream';\nexport { ChatCompletionStream } from 'openai/lib/ChatCompletionStream';\nexport class Completions extends APIResource {\n  runFunctions(body, options) {\n    if (body.stream) {\n      return ChatCompletionStreamingRunner.runFunctions(this._client.chat.completions, body, options);\n    }\n    return ChatCompletionRunner.runFunctions(this._client.chat.completions, body, options);\n  }\n  runTools(body, options) {\n    if (body.stream) {\n      return ChatCompletionStreamingRunner.runTools(this._client.chat.completions, body, options);\n    }\n    return ChatCompletionRunner.runTools(this._client.chat.completions, body, options);\n  }\n  /**\n   * Creates a chat completion stream\n   */\n  stream(body, options) {\n    return ChatCompletionStream.createChatCompletion(this._client.chat.completions, body, options);\n  }\n}","map":{"version":3,"names":["APIResource","ChatCompletionRunner","ChatCompletionStreamingRunner","ParsingFunction","ParsingToolFunction","ChatCompletionStream","Completions","runFunctions","body","options","stream","_client","chat","completions","runTools","createChatCompletion"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/openai/src/resources/beta/chat/completions.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport * as Core from \"../../../core\";\nimport { APIResource } from \"../../../resource\";\nimport { ChatCompletionRunner, ChatCompletionFunctionRunnerParams } from \"../../../lib/ChatCompletionRunner\";\nexport { ChatCompletionRunner, ChatCompletionFunctionRunnerParams } from \"../../../lib/ChatCompletionRunner\";\nimport {\n  ChatCompletionStreamingRunner,\n  ChatCompletionStreamingFunctionRunnerParams,\n} from \"../../../lib/ChatCompletionStreamingRunner\";\nexport {\n  ChatCompletionStreamingRunner,\n  ChatCompletionStreamingFunctionRunnerParams,\n} from \"../../../lib/ChatCompletionStreamingRunner\";\nimport { BaseFunctionsArgs } from \"../../../lib/RunnableFunction\";\nexport {\n  RunnableFunction,\n  RunnableFunctions,\n  RunnableFunctionWithParse,\n  RunnableFunctionWithoutParse,\n  ParsingFunction,\n  ParsingToolFunction,\n} from \"../../../lib/RunnableFunction\";\nimport { ChatCompletionToolRunnerParams } from \"../../../lib/ChatCompletionRunner\";\nexport { ChatCompletionToolRunnerParams } from \"../../../lib/ChatCompletionRunner\";\nimport { ChatCompletionStreamingToolRunnerParams } from \"../../../lib/ChatCompletionStreamingRunner\";\nexport { ChatCompletionStreamingToolRunnerParams } from \"../../../lib/ChatCompletionStreamingRunner\";\nimport { ChatCompletionStream, type ChatCompletionStreamParams } from \"../../../lib/ChatCompletionStream\";\nexport { ChatCompletionStream, type ChatCompletionStreamParams } from \"../../../lib/ChatCompletionStream\";\n\nexport class Completions extends APIResource {\n  /**\n   * @deprecated - use `runTools` instead.\n   */\n  runFunctions<FunctionsArgs extends BaseFunctionsArgs>(\n    body: ChatCompletionFunctionRunnerParams<FunctionsArgs>,\n    options?: Core.RequestOptions,\n  ): ChatCompletionRunner;\n  runFunctions<FunctionsArgs extends BaseFunctionsArgs>(\n    body: ChatCompletionStreamingFunctionRunnerParams<FunctionsArgs>,\n    options?: Core.RequestOptions,\n  ): ChatCompletionStreamingRunner;\n  runFunctions<FunctionsArgs extends BaseFunctionsArgs>(\n    body:\n      | ChatCompletionFunctionRunnerParams<FunctionsArgs>\n      | ChatCompletionStreamingFunctionRunnerParams<FunctionsArgs>,\n    options?: Core.RequestOptions,\n  ): ChatCompletionRunner | ChatCompletionStreamingRunner {\n    if (body.stream) {\n      return ChatCompletionStreamingRunner.runFunctions(\n        this._client.chat.completions,\n        body as ChatCompletionStreamingFunctionRunnerParams<FunctionsArgs>,\n        options,\n      );\n    }\n    return ChatCompletionRunner.runFunctions(\n      this._client.chat.completions,\n      body as ChatCompletionFunctionRunnerParams<FunctionsArgs>,\n      options,\n    );\n  }\n\n  /**\n   * A convenience helper for using tool calls with the /chat/completions endpoint\n   * which automatically calls the JavaScript functions you provide and sends their\n   * results back to the /chat/completions endpoint, looping as long as the model\n   * requests function calls.\n   *\n   * For more details and examples, see\n   * [the docs](https://github.com/openai/openai-node#automated-function-calls)\n   */\n  runTools<FunctionsArgs extends BaseFunctionsArgs>(\n    body: ChatCompletionToolRunnerParams<FunctionsArgs>,\n    options?: Core.RequestOptions,\n  ): ChatCompletionRunner;\n  runTools<FunctionsArgs extends BaseFunctionsArgs>(\n    body: ChatCompletionStreamingToolRunnerParams<FunctionsArgs>,\n    options?: Core.RequestOptions,\n  ): ChatCompletionStreamingRunner;\n  runTools<FunctionsArgs extends BaseFunctionsArgs>(\n    body:\n      | ChatCompletionToolRunnerParams<FunctionsArgs>\n      | ChatCompletionStreamingToolRunnerParams<FunctionsArgs>,\n    options?: Core.RequestOptions,\n  ): ChatCompletionRunner | ChatCompletionStreamingRunner {\n    if (body.stream) {\n      return ChatCompletionStreamingRunner.runTools(\n        this._client.chat.completions,\n        body as ChatCompletionStreamingToolRunnerParams<FunctionsArgs>,\n        options,\n      );\n    }\n    return ChatCompletionRunner.runTools(\n      this._client.chat.completions,\n      body as ChatCompletionToolRunnerParams<FunctionsArgs>,\n      options,\n    );\n  }\n\n  /**\n   * Creates a chat completion stream\n   */\n  stream(body: ChatCompletionStreamParams, options?: Core.RequestOptions): ChatCompletionStream {\n    return ChatCompletionStream.createChatCompletion(this._client.chat.completions, body, options);\n  }\n}\n"],"mappings":"AAAA;SAGSA,WAAW,QAAQ,iBAAiB;SACpCC,oBAAoB,QAA4C,iCAAiC;SACjGA,oBAAoB,QAA4C,iCAAiC;SAExGC,6BAA6B,QAExB,0CAA0C;SAE/CA,6BAA6B,QAExB,0CAA0C;SAO/CC,eAAe,EACfC,mBAAmB,QACd,6BAA6B;SAK3BC,oBAAoB,QAAyC,iCAAiC;SAC9FA,oBAAoB,QAAyC,iCAAiC;AAEvG,OAAM,MAAOC,WAAY,SAAQN,WAAW;EAY1CO,YAAYA,CACVC,IAE8D,EAC9DC,OAA6B;IAE7B,IAAID,IAAI,CAACE,MAAM,EAAE;MACf,OAAOR,6BAA6B,CAACK,YAAY,CAC/C,IAAI,CAACI,OAAO,CAACC,IAAI,CAACC,WAAW,EAC7BL,IAAkE,EAClEC,OAAO,CACR;;IAEH,OAAOR,oBAAoB,CAACM,YAAY,CACtC,IAAI,CAACI,OAAO,CAACC,IAAI,CAACC,WAAW,EAC7BL,IAAyD,EACzDC,OAAO,CACR;EACH;EAmBAK,QAAQA,CACNN,IAE0D,EAC1DC,OAA6B;IAE7B,IAAID,IAAI,CAACE,MAAM,EAAE;MACf,OAAOR,6BAA6B,CAACY,QAAQ,CAC3C,IAAI,CAACH,OAAO,CAACC,IAAI,CAACC,WAAW,EAC7BL,IAA8D,EAC9DC,OAAO,CACR;;IAEH,OAAOR,oBAAoB,CAACa,QAAQ,CAClC,IAAI,CAACH,OAAO,CAACC,IAAI,CAACC,WAAW,EAC7BL,IAAqD,EACrDC,OAAO,CACR;EACH;EAEA;;;EAGAC,MAAMA,CAACF,IAAgC,EAAEC,OAA6B;IACpE,OAAOJ,oBAAoB,CAACU,oBAAoB,CAAC,IAAI,CAACJ,OAAO,CAACC,IAAI,CAACC,WAAW,EAAEL,IAAI,EAAEC,OAAO,CAAC;EAChG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}