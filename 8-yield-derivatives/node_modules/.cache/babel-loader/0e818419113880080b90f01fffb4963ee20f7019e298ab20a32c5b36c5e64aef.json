{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IntendedTransferTokens = exports.isTransferTokensInput = void 0;\nconst _types_1 = require(\"./_types\");\nconst account_1 = require(\"@radixdlt/account\");\nconst primitives_1 = require(\"@radixdlt/primitives\");\nconst neverthrow_1 = require(\"neverthrow\");\nconst isTransferTokensInput = something => {\n  const inspection = something;\n  return (0, account_1.isAccountAddressOrUnsafeInput)(inspection.to_account) && (0, primitives_1.isAmountOrUnsafeInput)(inspection.amount) && (0, account_1.isResourceIdentifierOrUnsafeInput)(inspection.tokenIdentifier);\n};\nexports.isTransferTokensInput = isTransferTokensInput;\nconst create = (input, from_account) => (0, neverthrow_1.combine)([account_1.AccountAddress.fromUnsafe(input.to_account), primitives_1.Amount.fromUnsafe(input.amount), account_1.ResourceIdentifier.fromUnsafe(input.tokenIdentifier)]).map(resultList => {\n  const to_account = resultList[0];\n  const amount = resultList[1];\n  const rri = resultList[2];\n  return {\n    to_account: to_account.toString(),\n    amount,\n    rri,\n    type: _types_1.ActionType.TOKEN_TRANSFER,\n    from_account: from_account.toString()\n  };\n});\nexports.IntendedTransferTokens = {\n  create\n};","map":{"version":3,"names":["_types_1","require","account_1","primitives_1","neverthrow_1","isTransferTokensInput","something","inspection","isAccountAddressOrUnsafeInput","to_account","isAmountOrUnsafeInput","amount","isResourceIdentifierOrUnsafeInput","tokenIdentifier","exports","create","input","from_account","combine","AccountAddress","fromUnsafe","Amount","ResourceIdentifier","map","resultList","rri","toString","type","ActionType","TOKEN_TRANSFER","IntendedTransferTokens"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/@radixdlt/application/src/actions/intendedTransferTokensAction.ts"],"sourcesContent":["import {\n\tActionType,\n\tIntendedTransferTokensAction,\n\tTransferTokensInput,\n} from './_types'\nimport {\n\tAccountAddress,\n\tAccountAddressT,\n\tisAccountAddressOrUnsafeInput,\n\tResourceIdentifierT,\n\tResourceIdentifier,\n\tisResourceIdentifierOrUnsafeInput,\n} from '@radixdlt/account'\nimport { Amount, AmountT, isAmountOrUnsafeInput } from '@radixdlt/primitives'\nimport { combine, Result } from 'neverthrow'\n\nexport const isTransferTokensInput = (\n\tsomething: unknown,\n): something is TransferTokensInput => {\n\tconst inspection = something as TransferTokensInput\n\treturn (\n\t\tisAccountAddressOrUnsafeInput(inspection.to_account) &&\n\t\tisAmountOrUnsafeInput(inspection.amount) &&\n\t\tisResourceIdentifierOrUnsafeInput(inspection.tokenIdentifier)\n\t)\n}\n\nconst create = (\n\tinput: TransferTokensInput,\n\tfrom_account: AccountAddressT,\n): Result<IntendedTransferTokensAction, Error> =>\n\tcombine([\n\t\tAccountAddress.fromUnsafe(input.to_account),\n\t\tAmount.fromUnsafe(input.amount),\n\t\tResourceIdentifier.fromUnsafe(input.tokenIdentifier),\n\t]).map(\n\t\t(resultList): IntendedTransferTokensAction => {\n\t\t\tconst to_account = resultList[0] as AccountAddressT\n\t\t\tconst amount = resultList[1] as AmountT\n\t\t\tconst rri = resultList[2] as ResourceIdentifierT\n\n\t\t\treturn {\n\t\t\t\tto_account: to_account.toString(),\n\t\t\t\tamount,\n\t\t\t\trri,\n\t\t\t\ttype: ActionType.TOKEN_TRANSFER,\n\t\t\t\tfrom_account: from_account.toString(),\n\t\t\t}\n\t\t},\n\t)\n\nexport const IntendedTransferTokens = {\n\tcreate,\n}\n"],"mappings":";;;;;;AAAA,MAAAA,QAAA,GAAAC,OAAA;AAKA,MAAAC,SAAA,GAAAD,OAAA;AAQA,MAAAE,YAAA,GAAAF,OAAA;AACA,MAAAG,YAAA,GAAAH,OAAA;AAEO,MAAMI,qBAAqB,GACjCC,SAAkB,IACmB;EACrC,MAAMC,UAAU,GAAGD,SAAgC;EACnD,OACC,IAAAJ,SAAA,CAAAM,6BAA6B,EAACD,UAAU,CAACE,UAAU,CAAC,IACpD,IAAAN,YAAA,CAAAO,qBAAqB,EAACH,UAAU,CAACI,MAAM,CAAC,IACxC,IAAAT,SAAA,CAAAU,iCAAiC,EAACL,UAAU,CAACM,eAAe,CAAC;AAE/D,CAAC;AATYC,OAAA,CAAAT,qBAAqB,GAAAA,qBAAA;AAWlC,MAAMU,MAAM,GAAGA,CACdC,KAA0B,EAC1BC,YAA6B,KAE7B,IAAAb,YAAA,CAAAc,OAAO,EAAC,CACPhB,SAAA,CAAAiB,cAAc,CAACC,UAAU,CAACJ,KAAK,CAACP,UAAU,CAAC,EAC3CN,YAAA,CAAAkB,MAAM,CAACD,UAAU,CAACJ,KAAK,CAACL,MAAM,CAAC,EAC/BT,SAAA,CAAAoB,kBAAkB,CAACF,UAAU,CAACJ,KAAK,CAACH,eAAe,CAAC,CACpD,CAAC,CAACU,GAAG,CACJC,UAAU,IAAkC;EAC5C,MAAMf,UAAU,GAAGe,UAAU,CAAC,CAAC,CAAoB;EACnD,MAAMb,MAAM,GAAGa,UAAU,CAAC,CAAC,CAAY;EACvC,MAAMC,GAAG,GAAGD,UAAU,CAAC,CAAC,CAAwB;EAEhD,OAAO;IACNf,UAAU,EAAEA,UAAU,CAACiB,QAAQ,EAAE;IACjCf,MAAM;IACNc,GAAG;IACHE,IAAI,EAAE3B,QAAA,CAAA4B,UAAU,CAACC,cAAc;IAC/BZ,YAAY,EAAEA,YAAY,CAACS,QAAQ;GACnC;AACF,CAAC,CACD;AAEWZ,OAAA,CAAAgB,sBAAsB,GAAG;EACrCf;CACA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}