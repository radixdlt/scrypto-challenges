{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});","map":{"version":3,"names":[],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/@radixdlt/crypto/src/elliptic-curve/_types.ts"],"sourcesContent":["import { ResultAsync } from 'neverthrow'\nimport { UInt256 } from '@radixdlt/uint256'\nimport { Hasher } from '../_types'\n\nexport type DiffieHellman = (\n\tpublicKeyOfOtherParty: PublicKeyT,\n) => ResultAsync<ECPointOnCurveT, Error>\n\nexport type Signer = Readonly<{\n\tsign: (hashedMessage: Buffer) => ResultAsync<SignatureT, Error>\n\n\tsignUnhashed: (\n\t\tinput: Readonly<{\n\t\t\tmsgToHash: Buffer | string\n\t\t\thasher?: Hasher\n\t\t}>,\n\t) => ResultAsync<SignatureT, Error>\n}>\n\nexport type SignatureT = Readonly<{\n\tr: UInt256\n\ts: UInt256\n\ttoDER: () => string\n\tequals: (other: SignatureT) => boolean\n}>\n\n// A non-infinity point on the EC curve (e.g. `secp256k1`)\nexport type ECPointOnCurveT = Readonly<{\n\tx: UInt256\n\ty: UInt256\n\ttoBuffer: (includePrefixByte?: boolean) => Buffer\n\ttoString: (includePrefixByte?: boolean) => string\n\tequals: (other: ECPointOnCurveT) => boolean\n\tadd: (other: ECPointOnCurveT) => ECPointOnCurveT\n\tmultiply: (by: UInt256) => ECPointOnCurveT\n\tmultiplyWithPrivateKey: (privateKey: PrivateKeyT) => ECPointOnCurveT\n}>\n\nexport type PublicKeyT = Readonly<{\n\t__hex: string // debug print\n\tasData: (input: { readonly compressed: boolean }) => Buffer\n\ttoString: (compressed?: boolean) => string\n\tisValidSignature: (\n\t\tinput: Readonly<{\n\t\t\tsignature: SignatureT\n\t\t\thashedMessage: Buffer\n\t\t}>,\n\t) => boolean\n\tdecodeToPointOnCurve: () => ECPointOnCurveT\n\tequals: (other: PublicKeyT) => boolean\n}>\n\nexport type PrivateKeyT = Signer &\n\tReadonly<{\n\t\tdiffieHellman: DiffieHellman\n\t\tscalar: UInt256\n\t\tpublicKey: () => PublicKeyT\n\t\ttoString: () => string\n\t}>\n\nexport type KeyPairT = Readonly<{\n\tpublicKey: PublicKeyT\n\tprivateKey: PrivateKeyT\n}>\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}