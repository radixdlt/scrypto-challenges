{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n/**\n * A predicate is a function taking one parameter and returning a boolean.\n * In other words the predicate checks whether some proposition holds for the parameter.\n *\n * The Predicate interface offers normal function-calling, to make sure that the\n * predicate holds (just call predicate(x)), but also some helper methods to\n * deal with logical operations between propositions.\n *\n * You can build predicates using [[PredicateStatic]] through the\n * 'Predicate' global constant.\n *\n * Examples:\n *\n *     const check = Predicate.of((x: number) => x > 10).and(x => x < 20);\n *     check(12); // => true\n *     check(21);\n *     => false\n *\n *     Vector.of(1,2,3,4,5).filter(\n *         Predicate.isIn([2,3]).negate())\n *     => Vector.of(1, 4, 5)\n */\nvar Comparison_1 = require(\"./Comparison\");\nvar Vector_1 = require(\"./Vector\");\n/**\n * The Predicates class offers some helper functions to deal\n * with [[Predicate]] including the ability to build [[Predicate]]\n * from functions using [[PredicateStatic.of]], some builtin predicates\n * like [[PredicateStatic.isIn]], and the ability to combine to combine\n * Predicates like with [[PredicateStatic.allOf]].\n */\nvar PredicateStatic = /** @class */function () {\n  function PredicateStatic() {}\n  /**\n   * Take a predicate function and of it to become a [[Predicate]]\n   * (enabling you to call [[Predicate.and]], and other logic operations on it)\n   */\n  PredicateStatic.prototype.of = function (fn) {\n    var r = fn;\n    r.and = function (other) {\n      return exports.Predicate.of(function (x) {\n        return r(x) && other(x);\n      });\n    };\n    r.or = function (other) {\n      return exports.Predicate.of(function (x) {\n        return r(x) || other(x);\n      });\n    };\n    r.negate = function () {\n      return exports.Predicate.of(function (x) {\n        return !fn(x);\n      });\n    };\n    return r;\n  };\n  /**\n   * Return a [[Predicate]] checking whether a value is equal to the\n   * value you give as parameter.\n   */\n  PredicateStatic.prototype.equals = function (other) {\n    return exports.Predicate.of(function (x) {\n      return Comparison_1.areEqual(other, x);\n    });\n  };\n  /**\n   * Return a [[Predicate]] checking whether a value is contained in the\n   * list of values you give as parameter.\n   */\n  PredicateStatic.prototype.isIn = function (others) {\n    return exports.Predicate.of(function (x) {\n      return Vector_1.Vector.ofIterable(others).contains(x);\n    });\n  };\n  /**\n   * Return a [[Predicate]] checking whether all of the predicate functions given hold\n   */\n  PredicateStatic.prototype.allOf = function () {\n    var predicates = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      predicates[_i] = arguments[_i];\n    }\n    return exports.Predicate.of(function (x) {\n      return Vector_1.Vector.ofIterable(predicates).allMatch(function (p) {\n        return p(x);\n      });\n    });\n  };\n  /**\n   * Return a [[Predicate]] checking whether any of the predicate functions given hold\n   */\n  PredicateStatic.prototype.anyOf = function () {\n    var predicates = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      predicates[_i] = arguments[_i];\n    }\n    return exports.Predicate.of(function (x) {\n      return Vector_1.Vector.ofIterable(predicates).anyMatch(function (p) {\n        return p(x);\n      });\n    });\n  };\n  /**\n   * Return a [[Predicate]] checking whether none of the predicate functions given hold\n   */\n  PredicateStatic.prototype.noneOf = function () {\n    var predicates = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      predicates[_i] = arguments[_i];\n    }\n    return exports.Predicate.of(function (x) {\n      return !Vector_1.Vector.ofIterable(predicates).anyMatch(function (p) {\n        return p(x);\n      });\n    });\n  };\n  return PredicateStatic;\n}();\nexports.PredicateStatic = PredicateStatic;\n/**\n * The Predicate constant allows to call the [[Predicate]] \"static\" methods.\n */\nexports.Predicate = new PredicateStatic();","map":{"version":3,"names":["exports","__esModule","Comparison_1","require","Vector_1","PredicateStatic","prototype","of","fn","r","and","other","Predicate","x","or","negate","equals","areEqual","isIn","others","Vector","ofIterable","contains","allOf","predicates","_i","arguments","length","allMatch","p","anyOf","anyMatch","noneOf"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/prelude-ts/dist/src/Predicate.js"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\n/**\n * A predicate is a function taking one parameter and returning a boolean.\n * In other words the predicate checks whether some proposition holds for the parameter.\n *\n * The Predicate interface offers normal function-calling, to make sure that the\n * predicate holds (just call predicate(x)), but also some helper methods to\n * deal with logical operations between propositions.\n *\n * You can build predicates using [[PredicateStatic]] through the\n * 'Predicate' global constant.\n *\n * Examples:\n *\n *     const check = Predicate.of((x: number) => x > 10).and(x => x < 20);\n *     check(12); // => true\n *     check(21);\n *     => false\n *\n *     Vector.of(1,2,3,4,5).filter(\n *         Predicate.isIn([2,3]).negate())\n *     => Vector.of(1, 4, 5)\n */\nvar Comparison_1 = require(\"./Comparison\");\nvar Vector_1 = require(\"./Vector\");\n/**\n * The Predicates class offers some helper functions to deal\n * with [[Predicate]] including the ability to build [[Predicate]]\n * from functions using [[PredicateStatic.of]], some builtin predicates\n * like [[PredicateStatic.isIn]], and the ability to combine to combine\n * Predicates like with [[PredicateStatic.allOf]].\n */\nvar PredicateStatic = /** @class */ (function () {\n    function PredicateStatic() {\n    }\n    /**\n     * Take a predicate function and of it to become a [[Predicate]]\n     * (enabling you to call [[Predicate.and]], and other logic operations on it)\n     */\n    PredicateStatic.prototype.of = function (fn) {\n        var r = fn;\n        r.and = function (other) { return exports.Predicate.of(function (x) { return r(x) && other(x); }); };\n        r.or = function (other) { return exports.Predicate.of(function (x) { return r(x) || other(x); }); };\n        r.negate = function () { return exports.Predicate.of(function (x) { return !fn(x); }); };\n        return r;\n    };\n    /**\n     * Return a [[Predicate]] checking whether a value is equal to the\n     * value you give as parameter.\n     */\n    PredicateStatic.prototype.equals = function (other) {\n        return exports.Predicate.of(function (x) { return Comparison_1.areEqual(other, x); });\n    };\n    /**\n     * Return a [[Predicate]] checking whether a value is contained in the\n     * list of values you give as parameter.\n     */\n    PredicateStatic.prototype.isIn = function (others) {\n        return exports.Predicate.of(function (x) { return Vector_1.Vector.ofIterable(others).contains(x); });\n    };\n    /**\n     * Return a [[Predicate]] checking whether all of the predicate functions given hold\n     */\n    PredicateStatic.prototype.allOf = function () {\n        var predicates = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            predicates[_i] = arguments[_i];\n        }\n        return exports.Predicate.of(function (x) { return Vector_1.Vector.ofIterable(predicates).allMatch(function (p) { return p(x); }); });\n    };\n    /**\n     * Return a [[Predicate]] checking whether any of the predicate functions given hold\n     */\n    PredicateStatic.prototype.anyOf = function () {\n        var predicates = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            predicates[_i] = arguments[_i];\n        }\n        return exports.Predicate.of(function (x) { return Vector_1.Vector.ofIterable(predicates).anyMatch(function (p) { return p(x); }); });\n    };\n    /**\n     * Return a [[Predicate]] checking whether none of the predicate functions given hold\n     */\n    PredicateStatic.prototype.noneOf = function () {\n        var predicates = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            predicates[_i] = arguments[_i];\n        }\n        return exports.Predicate.of(function (x) { return !Vector_1.Vector.ofIterable(predicates).anyMatch(function (p) { return p(x); }); });\n    };\n    return PredicateStatic;\n}());\nexports.PredicateStatic = PredicateStatic;\n/**\n * The Predicate constant allows to call the [[Predicate]] \"static\" methods.\n */\nexports.Predicate = new PredicateStatic();\n//# sourceMappingURL=Predicate.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}