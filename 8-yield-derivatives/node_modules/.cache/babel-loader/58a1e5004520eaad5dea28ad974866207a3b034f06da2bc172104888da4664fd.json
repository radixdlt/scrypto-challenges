{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nfunction every(predicate, thisArg) {\n  return operators_1.every(predicate, thisArg)(this);\n}\nexports.every = every;","map":{"version":3,"names":["operators_1","require","every","predicate","thisArg","exports"],"sources":["../src/compat/operator/every.ts"],"sourcesContent":[null],"mappings":";;;;;AAEA,IAAAA,WAAA,GAAAC,OAAA;AAEA;;;;;;;;;;;;;;AAcA,SAAgBC,KAAKA,CAAyBC,SAAsE,EAC3FC,OAAa;EACpC,OAAOJ,WAAA,CAAAE,KAAW,CAACC,SAAS,EAAEC,OAAO,CAAC,CAAC,IAAI,CAAC;AAC9C;AAHAC,OAAA,CAAAH,KAAA,GAAAA,KAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}