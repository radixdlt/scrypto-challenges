{"ast":null,"code":"'use strict';\n\nmodule.exports = function generate_ref(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $async, $refCode;\n  if ($schema == '#' || $schema == '#/') {\n    if (it.isRoot) {\n      $async = it.async;\n      $refCode = 'validate';\n    } else {\n      $async = it.root.schema.$async === true;\n      $refCode = 'root.refVal[0]';\n    }\n  } else {\n    var $refVal = it.resolveRef(it.baseId, $schema, it.isRoot);\n    if ($refVal === undefined) {\n      var $message = it.MissingRefError.message(it.baseId, $schema);\n      if (it.opts.missingRefs == 'fail') {\n        it.logger.error($message);\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + '$ref' + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { ref: \\'' + it.util.escapeQuotes($schema) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'can\\\\\\'t resolve reference ' + it.util.escapeQuotes($schema) + '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: ' + it.util.toQuotedString($schema) + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + __err + ']); ';\n          } else {\n            out += ' validate.errors = [' + __err + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        if ($breakOnError) {\n          out += ' if (false) { ';\n        }\n      } else if (it.opts.missingRefs == 'ignore') {\n        it.logger.warn($message);\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n      } else {\n        throw new it.MissingRefError(it.baseId, $schema, $message);\n      }\n    } else if ($refVal.inline) {\n      var $it = it.util.copy(it);\n      $it.level++;\n      var $nextValid = 'valid' + $it.level;\n      $it.schema = $refVal.schema;\n      $it.schemaPath = '';\n      $it.errSchemaPath = $schema;\n      var $code = it.validate($it).replace(/validate\\.schema/g, $refVal.code);\n      out += ' ' + $code + ' ';\n      if ($breakOnError) {\n        out += ' if (' + $nextValid + ') { ';\n      }\n    } else {\n      $async = $refVal.$async === true || it.async && $refVal.$async !== false;\n      $refCode = $refVal.code;\n    }\n  }\n  if ($refCode) {\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    if (it.opts.passContext) {\n      out += ' ' + $refCode + '.call(this, ';\n    } else {\n      out += ' ' + $refCode + '( ';\n    }\n    out += ' ' + $data + ', (dataPath || \\'\\')';\n    if (it.errorPath != '\"\"') {\n      out += ' + ' + it.errorPath;\n    }\n    var $parentData = $dataLvl ? 'data' + ($dataLvl - 1 || '') : 'parentData',\n      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n    out += ' , ' + $parentData + ' , ' + $parentDataProperty + ', rootData)  ';\n    var __callValidate = out;\n    out = $$outStack.pop();\n    if ($async) {\n      if (!it.async) throw new Error('async schema referenced by sync schema');\n      if ($breakOnError) {\n        out += ' var ' + $valid + '; ';\n      }\n      out += ' try { await ' + __callValidate + '; ';\n      if ($breakOnError) {\n        out += ' ' + $valid + ' = true; ';\n      }\n      out += ' } catch (e) { if (!(e instanceof ValidationError)) throw e; if (vErrors === null) vErrors = e.errors; else vErrors = vErrors.concat(e.errors); errors = vErrors.length; ';\n      if ($breakOnError) {\n        out += ' ' + $valid + ' = false; ';\n      }\n      out += ' } ';\n      if ($breakOnError) {\n        out += ' if (' + $valid + ') { ';\n      }\n    } else {\n      out += ' if (!' + __callValidate + ') { if (vErrors === null) vErrors = ' + $refCode + '.errors; else vErrors = vErrors.concat(' + $refCode + '.errors); errors = vErrors.length; } ';\n      if ($breakOnError) {\n        out += ' else { ';\n      }\n    }\n  }\n  return out;\n};","map":{"version":3,"names":["module","exports","generate_ref","it","$keyword","$ruleType","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$data","$valid","$async","$refCode","isRoot","async","root","$refVal","resolveRef","baseId","undefined","$message","MissingRefError","message","missingRefs","logger","error","$$outStack","push","createErrors","errorPath","util","toQuotedString","escapeQuotes","messages","verbose","schemaPath","__err","pop","compositeRule","warn","inline","$it","copy","$nextValid","$code","validate","replace","code","passContext","$parentData","$parentDataProperty","dataPathArr","__callValidate","Error"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/ajv/lib/dotjs/ref.js"],"sourcesContent":["'use strict';\nmodule.exports = function generate_ref(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $async, $refCode;\n  if ($schema == '#' || $schema == '#/') {\n    if (it.isRoot) {\n      $async = it.async;\n      $refCode = 'validate';\n    } else {\n      $async = it.root.schema.$async === true;\n      $refCode = 'root.refVal[0]';\n    }\n  } else {\n    var $refVal = it.resolveRef(it.baseId, $schema, it.isRoot);\n    if ($refVal === undefined) {\n      var $message = it.MissingRefError.message(it.baseId, $schema);\n      if (it.opts.missingRefs == 'fail') {\n        it.logger.error($message);\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('$ref') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { ref: \\'' + (it.util.escapeQuotes($schema)) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'can\\\\\\'t resolve reference ' + (it.util.escapeQuotes($schema)) + '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: ' + (it.util.toQuotedString($schema)) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        if ($breakOnError) {\n          out += ' if (false) { ';\n        }\n      } else if (it.opts.missingRefs == 'ignore') {\n        it.logger.warn($message);\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n      } else {\n        throw new it.MissingRefError(it.baseId, $schema, $message);\n      }\n    } else if ($refVal.inline) {\n      var $it = it.util.copy(it);\n      $it.level++;\n      var $nextValid = 'valid' + $it.level;\n      $it.schema = $refVal.schema;\n      $it.schemaPath = '';\n      $it.errSchemaPath = $schema;\n      var $code = it.validate($it).replace(/validate\\.schema/g, $refVal.code);\n      out += ' ' + ($code) + ' ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n      }\n    } else {\n      $async = $refVal.$async === true || (it.async && $refVal.$async !== false);\n      $refCode = $refVal.code;\n    }\n  }\n  if ($refCode) {\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    if (it.opts.passContext) {\n      out += ' ' + ($refCode) + '.call(this, ';\n    } else {\n      out += ' ' + ($refCode) + '( ';\n    }\n    out += ' ' + ($data) + ', (dataPath || \\'\\')';\n    if (it.errorPath != '\"\"') {\n      out += ' + ' + (it.errorPath);\n    }\n    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ', rootData)  ';\n    var __callValidate = out;\n    out = $$outStack.pop();\n    if ($async) {\n      if (!it.async) throw new Error('async schema referenced by sync schema');\n      if ($breakOnError) {\n        out += ' var ' + ($valid) + '; ';\n      }\n      out += ' try { await ' + (__callValidate) + '; ';\n      if ($breakOnError) {\n        out += ' ' + ($valid) + ' = true; ';\n      }\n      out += ' } catch (e) { if (!(e instanceof ValidationError)) throw e; if (vErrors === null) vErrors = e.errors; else vErrors = vErrors.concat(e.errors); errors = vErrors.length; ';\n      if ($breakOnError) {\n        out += ' ' + ($valid) + ' = false; ';\n      }\n      out += ' } ';\n      if ($breakOnError) {\n        out += ' if (' + ($valid) + ') { ';\n      }\n    } else {\n      out += ' if (!' + (__callValidate) + ') { if (vErrors === null) vErrors = ' + ($refCode) + '.errors; else vErrors = vErrors.concat(' + ($refCode) + '.errors); errors = vErrors.length; } ';\n      if ($breakOnError) {\n        out += ' else { ';\n      }\n    }\n  }\n  return out;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}