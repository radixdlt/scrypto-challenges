{"ast":null,"code":"/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nexport function toSubscriber(nextOrObserver, error, complete) {\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return nextOrObserver;\n    }\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n  return new Subscriber(nextOrObserver, error, complete);\n}","map":{"version":3,"names":["Subscriber","rxSubscriber","rxSubscriberSymbol","empty","emptyObserver","toSubscriber","nextOrObserver","error","complete"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/radixdlt/node_modules/rxjs/src/internal/util/toSubscriber.ts"],"sourcesContent":["import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nimport { PartialObserver } from '../types';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n"],"mappings":"AAAA;AACA,SAASA,UAAA,QAAgB;AACzB,SAASC,YAAS,IAAAC,kBAAqB,gCAAc;AAGrD,SAAMC,KAAA,IAAUC,aACd,qBAEA;OAEA,SAAIC,YAAgBA,CAAAC,cAAA,EAAAC,KAAA,EAAAC,QAAA;MAClBF,cAAI;QACFA,cAAwB,YAAgBN,UAAA;MACzC,OAAAM,cAAA;IAED;QACEA,cAAO,CAAAJ,kBAAe;MACvB,OAAAI,cAAA,CAAAJ,kBAAA;IACF;EAED;MACE,CAAAI,cAAW,KAAAC,KAAW,KAAAC,QAAe;IACtC,WAAAR,UAAA,CAAAI,aAAA;EAED;EACD,WAAAJ,UAAA,CAAAM,cAAA,EAAAC,KAAA,EAAAC,QAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}