{"ast":null,"code":"import { decorateProperty as r } from \"./base.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nfunction e(e) {\n  return r({\n    finisher: (r, t) => {\n      Object.assign(r.prototype[t], e);\n    }\n  });\n}\nexport { e as eventOptions };","map":{"version":3,"names":["e","r","finisher","t","Object","assign","prototype","eventOptions"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/@lit/reactive-element/src/decorators/event-options.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {ReactiveElement} from '../reactive-element.js';\nimport {decorateProperty} from './base.js';\n\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * ```ts\n * class MyElement {\n *   clicked = false;\n *\n *   render() {\n *     return html`\n *       <div @click=${this._onClick}>\n *         <button></button>\n *       </div>\n *     `;\n *   }\n *\n *   @eventOptions({capture: true})\n *   _onClick(e) {\n *     this.clicked = true;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function eventOptions(options: AddEventListenerOptions) {\n  return decorateProperty({\n    finisher: (ctor: typeof ReactiveElement, name: PropertyKey) => {\n      Object.assign(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        ctor.prototype[name as keyof ReactiveElement] as any,\n        options\n      );\n    },\n  });\n}\n"],"mappings":";;;;;;AA8CM,SAAUA,EAAaA,CAAA;EAC3B,OAAOC,CAAA,CAAiB;IACtBC,QAAA,EAAUA,CAACD,CAAA,EAA8BE,CAAA;MACvCC,MAAA,CAAOC,MAAA,CAELJ,CAAA,CAAKK,SAAA,CAAUH,CAAA,GACfH,CAAA,CACD;IAAA;EAAA,EAGP;AAAA;AAAA,SAAAA,CAAA,IAAAO,YAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}