{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar typescript_map_1 = require(\"typescript-map\");\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\nvar RadixTokenDefinition_1 = require(\"../token/RadixTokenDefinition\");\nvar atommodel_1 = require(\"../atommodel\");\nvar RadixTokenDefinitionAccountSystem = /** @class */function () {\n  function RadixTokenDefinitionAccountSystem(address) {\n    this.address = address;\n    this.name = 'TOKENS';\n    this.tokenDefinitions = new typescript_map_1.TSMap();\n    this.tokenDefinitionSubject = new rxjs_1.Subject();\n    this.processedAtomHIDs = new typescript_map_1.TSMap();\n    // Empty constructor\n  }\n  RadixTokenDefinitionAccountSystem.prototype.processAtomUpdate = function (atomUpdate) {\n    if (!atomUpdate.atom.containsParticle(atommodel_1.RadixTokenDefinitionParticle, atommodel_1.RadixUnallocatedTokensParticle)) {\n      return;\n    }\n    if (atomUpdate.action === 'STORE') {\n      this.processStoreAtom(atomUpdate);\n    } else if (atomUpdate.action === 'DELETE') {\n      this.processDeleteAtom(atomUpdate);\n    }\n  };\n  RadixTokenDefinitionAccountSystem.prototype.processStoreAtom = function (atomUpdate) {\n    var e_1, _a, e_2, _b, e_3, _c;\n    var atom = atomUpdate.atom;\n    if (this.processedAtomHIDs.has(atom.getAidString())) {\n      return;\n    }\n    this.processedAtomHIDs.set(atom.getAidString(), true);\n    try {\n      for (var _d = tslib_1.__values(atom.getParticleGroups()), _e = _d.next(); !_e.done; _e = _d.next()) {\n        var particleGroup = _e.value;\n        var tokenDefinition = void 0;\n        if (particleGroup.containsParticle(atommodel_1.RadixTokenDefinitionParticle)) {\n          try {\n            // Token definition\n            for (var _f = (e_2 = void 0, tslib_1.__values(particleGroup.getParticles())), _g = _f.next(); !_g.done; _g = _f.next()) {\n              var spunParticle = _g.value;\n              if (spunParticle.particle instanceof atommodel_1.RadixTokenDefinitionParticle && spunParticle.spin === atommodel_1.RadixSpin.UP) {\n                this.createOrUpdateTokenDefinition(spunParticle.particle);\n              } else if (spunParticle.particle instanceof atommodel_1.RadixUnallocatedTokensParticle) {\n                var particle = spunParticle.particle;\n                tokenDefinition = this.getOrCreateTokenDefinition(particle.getTokenDefinitionReference());\n                if (spunParticle.spin === atommodel_1.RadixSpin.UP) {\n                  tokenDefinition.unallocatedTokens.set(particle.getHidString(), particle);\n                } else {\n                  tokenDefinition.unallocatedTokens.delete(particle.getHidString());\n                }\n              }\n            }\n          } catch (e_2_1) {\n            e_2 = {\n              error: e_2_1\n            };\n          } finally {\n            try {\n              if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n            } finally {\n              if (e_2) throw e_2.error;\n            }\n          }\n        } else if (particleGroup.containsParticle(atommodel_1.RadixUnallocatedTokensParticle) && particleGroup.containsParticle(atommodel_1.RadixTransferrableTokensParticle)) {\n          try {\n            // Mint or burn\n            for (var _h = (e_3 = void 0, tslib_1.__values(particleGroup.getParticles())), _j = _h.next(); !_j.done; _j = _h.next()) {\n              var spunParticle = _j.value;\n              if (spunParticle.particle instanceof atommodel_1.RadixUnallocatedTokensParticle) {\n                var particle = spunParticle.particle;\n                tokenDefinition = this.getOrCreateTokenDefinition(particle.getTokenDefinitionReference());\n                if (spunParticle.spin === atommodel_1.RadixSpin.UP) {\n                  tokenDefinition.unallocatedTokens.set(particle.getHidString(), particle);\n                  tokenDefinition.addTotalSupply(particle.getAmount().neg());\n                } else {\n                  tokenDefinition.unallocatedTokens.delete(particle.getHidString());\n                  tokenDefinition.addTotalSupply(particle.getAmount());\n                }\n              }\n            }\n          } catch (e_3_1) {\n            e_3 = {\n              error: e_3_1\n            };\n          } finally {\n            try {\n              if (_j && !_j.done && (_c = _h.return)) _c.call(_h);\n            } finally {\n              if (e_3) throw e_3.error;\n            }\n          }\n        }\n        if (tokenDefinition) {\n          this.tokenDefinitionSubject.next(tokenDefinition);\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n  RadixTokenDefinitionAccountSystem.prototype.processDeleteAtom = function (atomUpdate) {\n    var e_4, _a, e_5, _b, e_6, _c;\n    var atom = atomUpdate.atom;\n    if (!this.processedAtomHIDs.has(atom.getAidString())) {\n      return;\n    }\n    this.processedAtomHIDs.delete(atom.getAidString());\n    try {\n      for (var _d = tslib_1.__values(atom.getParticleGroups()), _e = _d.next(); !_e.done; _e = _d.next()) {\n        var particleGroup = _e.value;\n        var tokenDefinition = void 0;\n        if (particleGroup.containsParticle(atommodel_1.RadixTokenDefinitionParticle)) {\n          try {\n            // Token definition\n            for (var _f = (e_5 = void 0, tslib_1.__values(particleGroup.getParticles())), _g = _f.next(); !_g.done; _g = _f.next()) {\n              var spunParticle = _g.value;\n              if (spunParticle.particle instanceof atommodel_1.RadixTokenDefinitionParticle && spunParticle.spin === atommodel_1.RadixSpin.DOWN) {\n                this.createOrUpdateTokenDefinition(spunParticle.particle);\n              } else if (spunParticle.particle instanceof atommodel_1.RadixUnallocatedTokensParticle) {\n                var particle = spunParticle.particle;\n                tokenDefinition = this.getOrCreateTokenDefinition(particle.getTokenDefinitionReference());\n                if (spunParticle.spin === atommodel_1.RadixSpin.DOWN) {\n                  tokenDefinition.unallocatedTokens.set(particle.getHidString(), particle);\n                } else {\n                  tokenDefinition.unallocatedTokens.delete(particle.getHidString());\n                }\n              }\n            }\n          } catch (e_5_1) {\n            e_5 = {\n              error: e_5_1\n            };\n          } finally {\n            try {\n              if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n            } finally {\n              if (e_5) throw e_5.error;\n            }\n          }\n        } else if (particleGroup.containsParticle(atommodel_1.RadixUnallocatedTokensParticle) && particleGroup.containsParticle(atommodel_1.RadixTransferrableTokensParticle)) {\n          try {\n            // Mint or burn\n            for (var _h = (e_6 = void 0, tslib_1.__values(particleGroup.getParticles())), _j = _h.next(); !_j.done; _j = _h.next()) {\n              var spunParticle = _j.value;\n              if (spunParticle.particle instanceof atommodel_1.RadixUnallocatedTokensParticle) {\n                var particle = spunParticle.particle;\n                tokenDefinition = this.getOrCreateTokenDefinition(particle.getTokenDefinitionReference());\n                if (spunParticle.spin === atommodel_1.RadixSpin.DOWN) {\n                  tokenDefinition.unallocatedTokens.set(particle.getHidString(), particle);\n                  tokenDefinition.addTotalSupply(particle.getAmount().neg());\n                } else {\n                  tokenDefinition.unallocatedTokens.delete(particle.getHidString());\n                  tokenDefinition.addTotalSupply(particle.getAmount());\n                }\n              }\n            }\n          } catch (e_6_1) {\n            e_6 = {\n              error: e_6_1\n            };\n          } finally {\n            try {\n              if (_j && !_j.done && (_c = _h.return)) _c.call(_h);\n            } finally {\n              if (e_6) throw e_6.error;\n            }\n          }\n        }\n        if (tokenDefinition) {\n          this.tokenDefinitionSubject.next(tokenDefinition);\n        }\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n  };\n  RadixTokenDefinitionAccountSystem.prototype.createOrUpdateTokenDefinition = function (particle) {\n    var reference = particle.getTokenDefinitionReference();\n    var tokenDefinition = this.getOrCreateTokenDefinition(reference);\n    tokenDefinition.symbol = reference.getName();\n    tokenDefinition.name = particle.name;\n    tokenDefinition.description = particle.description;\n    tokenDefinition.granularity = particle.granularity;\n    tokenDefinition.iconUrl = particle.iconUrl;\n    var mintPermissions = particle.permissions.mint;\n    if (mintPermissions === atommodel_1.RadixTokenPermissionsValues.TOKEN_CREATION_ONLY || mintPermissions === atommodel_1.RadixTokenPermissionsValues.NONE) {\n      tokenDefinition.tokenSupplyType = RadixTokenDefinition_1.RadixTokenSupplyType.FIXED;\n    } else if (mintPermissions === atommodel_1.RadixTokenPermissionsValues.TOKEN_OWNER_ONLY || mintPermissions === atommodel_1.RadixTokenPermissionsValues.ALL) {\n      tokenDefinition.tokenSupplyType = RadixTokenDefinition_1.RadixTokenSupplyType.MUTABLE;\n    } else {\n      throw new Error(\"Token particle with MINT permissions \" + mintPermissions + \" not supported\");\n    }\n    this.tokenDefinitionSubject.next(tokenDefinition);\n  };\n  RadixTokenDefinitionAccountSystem.prototype.getOrCreateTokenDefinition = function (reference) {\n    if (!this.tokenDefinitions.has(reference.getName())) {\n      this.tokenDefinitions.set(reference.getName(), new RadixTokenDefinition_1.RadixTokenDefinition(reference.address, reference.getName()));\n    }\n    return this.tokenDefinitions.get(reference.getName());\n  };\n  RadixTokenDefinitionAccountSystem.prototype.getTokenDefinition = function (symbol) {\n    if (this.tokenDefinitions.has(symbol)) {\n      return this.tokenDefinitions.get(symbol);\n    }\n    return null;\n  };\n  // Subscribe for symbol\n  RadixTokenDefinitionAccountSystem.prototype.getTokenDefinitionObservable = function (symbol) {\n    var _this = this;\n    return rxjs_1.Observable.create(function (observer) {\n      if (_this.tokenDefinitions.has(symbol)) {\n        observer.next(_this.tokenDefinitions.get(symbol));\n      }\n      _this.tokenDefinitionSubject.pipe(operators_1.filter(function (x) {\n        return x.symbol === symbol;\n      })).subscribe(observer);\n    });\n  };\n  RadixTokenDefinitionAccountSystem.prototype.getAllTokenDefinitionObservable = function () {\n    return this.tokenDefinitionSubject.share();\n  };\n  return RadixTokenDefinitionAccountSystem;\n}();\nexports.RadixTokenDefinitionAccountSystem = RadixTokenDefinitionAccountSystem;","map":{"version":3,"names":["typescript_map_1","require","rxjs_1","operators_1","RadixTokenDefinition_1","atommodel_1","RadixTokenDefinitionAccountSystem","address","name","tokenDefinitions","TSMap","tokenDefinitionSubject","Subject","processedAtomHIDs","prototype","processAtomUpdate","atomUpdate","atom","containsParticle","RadixTokenDefinitionParticle","RadixUnallocatedTokensParticle","action","processStoreAtom","processDeleteAtom","has","getAidString","set","_d","tslib_1","__values","getParticleGroups","_e","next","done","particleGroup","value","tokenDefinition","_f","e_2","getParticles","_g","spunParticle","particle","spin","RadixSpin","UP","createOrUpdateTokenDefinition","getOrCreateTokenDefinition","getTokenDefinitionReference","unallocatedTokens","getHidString","delete","RadixTransferrableTokensParticle","_h","e_3","_j","addTotalSupply","getAmount","neg","e_5","DOWN","e_6","reference","symbol","getName","description","granularity","iconUrl","mintPermissions","permissions","mint","RadixTokenPermissionsValues","TOKEN_CREATION_ONLY","NONE","tokenSupplyType","RadixTokenSupplyType","FIXED","TOKEN_OWNER_ONLY","ALL","MUTABLE","Error","RadixTokenDefinition","get","getTokenDefinition","getTokenDefinitionObservable","_this","Observable","create","observer","pipe","filter","x","subscribe","getAllTokenDefinitionObservable","share","exports"],"sources":["../../../../src/modules/account/RadixTokenDefinitionAccountSystem.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}