{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nfunction skipWhile(predicate) {\n  return operators_1.skipWhile(predicate)(this);\n}\nexports.skipWhile = skipWhile;","map":{"version":3,"names":["operators_1","require","skipWhile","predicate","exports"],"sources":["../src/compat/operator/skipWhile.ts"],"sourcesContent":[null],"mappings":";;;;;AACA,IAAAA,WAAA,GAAAC,OAAA;AAEA;;;;;;;;;;;;AAYA,SAAgBC,SAASA,CAAyBC,SAA+C;EAC/F,OAAOH,WAAA,CAAAE,SAAW,CAACC,SAAS,CAAC,CAAC,IAAI,CAAC;AACrC;AAFAC,OAAA,CAAAF,SAAA,GAAAA,SAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}