{"ast":null,"code":"'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\nvar assert = utils.assert;\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1) return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function (vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [l1, l2];\n};\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n  return [{\n    a: a1,\n    b: b1\n  }, {\n    a: a2,\n    b: b2\n  }];\n};\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return {\n    k1: k1,\n    k2: k2\n  };\n};\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red) x = x.toRed(this.red);\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0) throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();\n  return this.point(x, y);\n};\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf) return true;\n  var x = point.x;\n  var y = point.y;\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\nShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n    var p = points[i];\n    var beta = p._getBeta();\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n  // Clean-up references to points and coefficients\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n  return res;\n};\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo) return;\n  var pre = this.precomputed;\n  if (pre && pre.beta) return pre.beta;\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function (p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n  return beta;\n};\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed) return [this.x, this.y];\n  return [this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  }];\n};\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string') obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2]) return res;\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [res].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [res].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf) return p;\n\n  // P + O = P\n  if (p.inf) return this;\n\n  // P + P = 2P\n  if (this.eq(p)) return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p)) return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0) return this.curve.point(null, null);\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0) c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\nPoint.prototype.dbl = function dbl() {\n  if (this.inf) return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0) return this.curve.point(null, null);\n  var a = this.curve.a;\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity()) return this;else if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);else if (this.curve.endo) return this.curve._endoWnafMulAdd([this], [k]);else return this.curve._wnafMul(this, k);\n};\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [this, p2];\n  var coeffs = [k1, k2];\n  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs);else return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [this, p2];\n  var coeffs = [k1, k2];\n  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs, true);else return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\nPoint.prototype.eq = function eq(p) {\n  return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf) return this;\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function (p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n  return res;\n};\nPoint.prototype.toJ = function toJ() {\n  if (this.inf) return this.curve.jpoint(null, null, null);\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity()) return this.curve.point(null, null);\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n  return this.curve.point(ax, ay);\n};\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity()) return p;\n\n  // P + O = P\n  if (p.isInfinity()) return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n  }\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n  return this.curve.jpoint(nx, ny, nz);\n};\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity()) return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity()) return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n  }\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n  return this.curve.jpoint(nx, ny, nz);\n};\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0) return this;\n  if (this.isInfinity()) return this;\n  if (!pow) return this.dbl();\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++) r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow) jz4 = jz4.redMul(jyd4);\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity()) return this;\n  if (this.curve.zeroA) return this._zeroDbl();else if (this.curve.threeA) return this._threeDbl();else return this._dbl();\n};\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n  return this.curve.jpoint(nx, ny, nz);\n};\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n  return this.curve.jpoint(nx, ny, nz);\n};\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n  return this.curve.jpoint(nx, ny, nz);\n};\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA) return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n  return this.curve.jpoint(nx, ny, nz);\n};\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n  return this.curve._wnafMul(this, k);\n};\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine') return this.eq(p.toJ());\n  if (this === p) return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0) return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0) return true;\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0) return false;\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0) return true;\n  }\n};\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) + ' y: ' + this.y.toString(16, 2) + ' z: ' + this.z.toString(16, 2) + '>';\n};\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};","map":{"version":3,"names":["utils","require","BN","inherits","Base","assert","ShortCurve","conf","call","a","toRed","red","b","tinv","two","redInvm","zeroA","fromRed","cmpn","threeA","sub","p","endo","_getEndomorphism","_endoWnafT1","Array","_endoWnafT2","module","exports","prototype","g","n","modn","beta","lambda","betas","_getEndoRoots","cmp","lambdas","mul","x","redMul","basis","map","vec","_getEndoBasis","num","mont","ntinv","redNeg","s","redSqrt","l1","redAdd","l2","redSub","aprxSqrt","ushrn","Math","floor","bitLength","u","v","clone","x1","y1","x2","y2","a0","b0","a1","b1","a2","b2","prevR","i","r","q","div","y","neg","len1","sqr","add","len2","negative","_endoSplit","k","v1","v2","c1","divRound","c2","p1","p2","q1","q2","k1","k2","pointFromX","odd","redSqr","redIAdd","zero","Error","isOdd","point","validate","inf","ax","rhs","redISub","_endoWnafMulAdd","points","coeffs","jacobianResult","npoints","ncoeffs","length","split","_getBeta","ineg","res","_wnafMulAdd","j","Point","curve","isRed","BasePoint","forceRed","pointFromJSON","obj","fromJSON","pre","precomputed","endoMul","naf","wnd","doubles","step","toJSON","slice","JSON","parse","obj2point","concat","inspect","isInfinity","toString","eq","dbl","c","nx","ny","ys1","dyinv","getX","getY","_hasDoubles","_fixedNafMul","_wnafMul","mulAdd","jmulAdd","_precompute","negate","toJ","jpoint","one","JPoint","z","zOne","toP","zinv","zinv2","ay","pz2","z2","u1","u2","s1","s2","h","h2","h3","nz","mixedAdd","dblp","pow","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","m","t","yyyy8","d","e","f","c8","delta","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","type","z3","pz3","eqXToP","zs","rx","xc","redN","iadd"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/elliptic/lib/elliptic/curve/short.js"],"sourcesContent":["'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}