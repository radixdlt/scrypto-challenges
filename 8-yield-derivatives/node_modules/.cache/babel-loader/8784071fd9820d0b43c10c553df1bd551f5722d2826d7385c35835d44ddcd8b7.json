{"ast":null,"code":"/** PURE_IMPORTS_START _hostReportError PURE_IMPORTS_END */\nimport { hostReportError } from './hostReportError';\nexport var subscribeToPromise = function (promise) {\n  return function (subscriber) {\n    promise.then(function (value) {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    }, function (err) {\n      return subscriber.error(err);\n    }).then(null, hostReportError);\n    return subscriber;\n  };\n};","map":{"version":3,"names":["hostReportError","subscribeToPromise","promise","subscriber","then","value","closed","next","complete","err","error"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/radixdlt/node_modules/rxjs/src/internal/util/subscribeToPromise.ts"],"sourcesContent":["import { Subscriber } from '../Subscriber';\nimport { hostReportError } from './hostReportError';\n\nexport const subscribeToPromise = <T>(promise: PromiseLike<T>) => (subscriber: Subscriber<T>) => {\n  promise.then(\n    (value) => {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    },\n    (err: any) => subscriber.error(err)\n  )\n  .then(null, hostReportError);\n  return subscriber;\n};\n"],"mappings":"AACA;AAEA,SAAOA,eAAM,QAAqB,mBAA2B;OAC3D,IAAOC,kBACJ,GAAK,SAAAA,CAAAC,OAAA;SACJ,UAAKC,UAAiB,EAAE;WACtB,CAAAC,IAAA,WAAgBC,KAAO;MACvB,KAAAF,UAAW,CAAAG,MAAW;QACvBH,UAAA,CAAAI,IAAA,CAAAF,KAAA;QAEHF,UAAc,CAAAK,QAAA;MAEf;IACD,GAAO,UAAUC,GAAC;MAAA,OAAAN,UAAA,CAAAO,KAAA,CAAAD,GAAA;IAAA,GAClBL,IAAA,OAAAJ,eAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}