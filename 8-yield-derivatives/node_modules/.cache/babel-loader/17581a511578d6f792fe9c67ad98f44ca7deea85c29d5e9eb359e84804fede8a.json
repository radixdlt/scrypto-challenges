{"ast":null,"code":"export function getXHRResponse(xhr) {\n  switch (xhr.responseType) {\n    case 'json':\n      {\n        if ('response' in xhr) {\n          return xhr.response;\n        } else {\n          var ieXHR = xhr;\n          return JSON.parse(ieXHR.responseText);\n        }\n      }\n    case 'document':\n      return xhr.responseXML;\n    case 'text':\n    default:\n      {\n        if ('response' in xhr) {\n          return xhr.response;\n        } else {\n          var ieXHR = xhr;\n          return ieXHR.responseText;\n        }\n      }\n  }\n}","map":{"version":3,"names":["getXHRResponse","xhr","responseType","response","ieXHR","JSON","parse","responseText","responseXML"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/rxjs/src/internal/ajax/getXHRResponse.ts"],"sourcesContent":["/**\n * Gets what should be in the `response` property of the XHR. However,\n * since we still support the final versions of IE, we need to do a little\n * checking here to make sure that we get the right thing back. Conquentally,\n * we need to do a JSON.parse() in here, which *could* throw if the response\n * isn't valid JSON.\n *\n * This is used both in creating an AjaxResponse, and in creating certain errors\n * that we throw, so we can give the user whatever was in the response property.\n *\n * @param xhr The XHR to examine the response of\n */\nexport function getXHRResponse(xhr: XMLHttpRequest) {\n  switch (xhr.responseType) {\n    case 'json': {\n      if ('response' in xhr) {\n        return xhr.response;\n      } else {\n        // IE\n        const ieXHR: any = xhr;\n        return JSON.parse(ieXHR.responseText);\n      }\n    }\n    case 'document':\n      return xhr.responseXML;\n    case 'text':\n    default: {\n      if ('response' in xhr) {\n        return xhr.response;\n      } else {\n        // IE\n        const ieXHR: any = xhr;\n        return ieXHR.responseText;\n      }\n    }\n  }\n}\n"],"mappings":"AAYA,OAAM,SAAUA,cAAcA,CAACC,GAAmB;EAChD,QAAQA,GAAG,CAACC,YAAY;IACtB,KAAK,MAAM;MAAE;QACX,IAAI,UAAU,IAAID,GAAG,EAAE;UACrB,OAAOA,GAAG,CAACE,QAAQ;SACpB,MAAM;UAEL,IAAMC,KAAK,GAAQH,GAAG;UACtB,OAAOI,IAAI,CAACC,KAAK,CAACF,KAAK,CAACG,YAAY,CAAC;;;IAGzC,KAAK,UAAU;MACb,OAAON,GAAG,CAACO,WAAW;IACxB,KAAK,MAAM;IACX;MAAS;QACP,IAAI,UAAU,IAAIP,GAAG,EAAE;UACrB,OAAOA,GAAG,CAACE,QAAQ;SACpB,MAAM;UAEL,IAAMC,KAAK,GAAQH,GAAG;UACtB,OAAOG,KAAK,CAACG,YAAY;;;;AAIjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}