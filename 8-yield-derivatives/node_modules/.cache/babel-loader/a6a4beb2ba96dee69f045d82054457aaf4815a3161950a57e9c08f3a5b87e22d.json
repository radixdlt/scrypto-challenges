{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncScheduler } from './AsyncScheduler';\nvar AnimationFrameScheduler = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(AnimationFrameScheduler, _super);\n  function AnimationFrameScheduler() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  AnimationFrameScheduler.prototype.flush = function (action) {\n    this.active = true;\n    this.scheduled = undefined;\n    var actions = this.actions;\n    var error;\n    var index = -1;\n    var count = actions.length;\n    action = action || actions.shift();\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n    this.active = false;\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  };\n  return AnimationFrameScheduler;\n}(AsyncScheduler);\nexport { AnimationFrameScheduler };","map":{"version":3,"names":["tslib_1","AsyncScheduler","AnimationFrameScheduler","_super","__extends","apply","arguments","prototype","flush","action","active","scheduled","undefined","actions","error","index","count","length","shift","execute","state","delay","unsubscribe"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/radixdlt/node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts"],"sourcesContent":["import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n"],"mappings":";AACA,OAAO,KAAEA,OAAA,MAAgB,OAAM;AAE/B,SAAAC,cAAA;IAA6CC,uBAAA,0BAAcC,MAAA;EAA3DH,OAAA,CAAAI,SAAA,CAAAF,uBAAA,EAAAC,MAAA;;IA2BC,OAAAA,MAAA,aAAAA,MAAA,CAAAE,KAAA,OAAAC,SAAA;EA1BQ;yBAEc,CAAAC,SAAA,CAAAC,KAAA,aAAAC,MAAA;IACnB,IAAI,CAACC,MAAA,GAAS,IAAG;IAEV,KAAAC,SAAA,GAAAC,SAAO;IACd,IAAIC,OAAW,QAAAA,OAAA;IACf,IAAIC,KAAK;IACT,IAAIC,KAAK,GAAW;IACpB,IAAAC,KAAS,GAAAH,OAAU,CAAAI,MAAO;IAE1BR,MAAG,GAAAA,MAAA,IAAAI,OAAA,CAAAK,KAAA;;UAECJ,KAAA,GAAML,MAAA,CAAAU,OAAA,CAAAV,MAAA,CAAAW,KAAA,EAAAX,MAAA,CAAAY,KAAA;QACP;MACF;IAED,SAAK,EAAMN,KAAG,GAAKC,KAAC,KAAAP,MAAA,GAAAI,OAAA,CAAAK,KAAA;IAEpB,IAAI,CAAAR,MAAO;QACTI,KAAA,EAAO;aACL,EAAAC,KAAO,GAAAC,KAAW,KAAGP,MAAA,GAAAI,OAAA,CAAAK,KAAA;QACtBT,MAAA,CAAAa,WAAA;MACD;MACD,MAAAR,KAAA;IACF;EACH;EA3B6C,OAAAZ,uBA2B5C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}