{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t = window,\n  e = t.ShadowRoot && (void 0 === t.ShadyCSS || t.ShadyCSS.nativeShadow) && \"adoptedStyleSheets\" in Document.prototype && \"replace\" in CSSStyleSheet.prototype,\n  s = Symbol(),\n  n = new WeakMap();\nclass o {\n  constructor(t, e, n) {\n    if (this._$cssResult$ = !0, n !== s) throw Error(\"CSSResult is not constructable. Use `unsafeCSS` or `css` instead.\");\n    this.cssText = t, this.t = e;\n  }\n  get styleSheet() {\n    let t = this.o;\n    const s = this.t;\n    if (e && void 0 === t) {\n      const e = void 0 !== s && 1 === s.length;\n      e && (t = n.get(s)), void 0 === t && ((this.o = t = new CSSStyleSheet()).replaceSync(this.cssText), e && n.set(s, t));\n    }\n    return t;\n  }\n  toString() {\n    return this.cssText;\n  }\n}\nconst r = t => new o(\"string\" == typeof t ? t : t + \"\", void 0, s),\n  i = function (t) {\n    for (var _len = arguments.length, e = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      e[_key - 1] = arguments[_key];\n    }\n    const n = 1 === t.length ? t[0] : e.reduce((e, s, n) => e + (t => {\n      if (!0 === t._$cssResult$) return t.cssText;\n      if (\"number\" == typeof t) return t;\n      throw Error(\"Value passed to 'css' function must be a 'css' function result: \" + t + \". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.\");\n    })(s) + t[n + 1], t[0]);\n    return new o(n, t, s);\n  },\n  S = (s, n) => {\n    e ? s.adoptedStyleSheets = n.map(t => t instanceof CSSStyleSheet ? t : t.styleSheet) : n.forEach(e => {\n      const n = document.createElement(\"style\"),\n        o = t.litNonce;\n      void 0 !== o && n.setAttribute(\"nonce\", o), n.textContent = e.cssText, s.appendChild(n);\n    });\n  },\n  c = e ? t => t : t => t instanceof CSSStyleSheet ? (t => {\n    let e = \"\";\n    for (const s of t.cssRules) e += s.cssText;\n    return r(e);\n  })(t) : t;\nexport { o as CSSResult, S as adoptStyles, i as css, c as getCompatibleStyle, e as supportsAdoptingStyleSheets, r as unsafeCSS };","map":{"version":3,"names":["t","window","e","ShadowRoot","ShadyCSS","nativeShadow","Document","prototype","CSSStyleSheet","s","Symbol","n","WeakMap","o","constructor","_$cssResult$","Error","cssText","styleSheet","length","get","replaceSync","set","toString","r","i","css","_len","arguments","Array","_key","reduce","S","adoptStyles","adoptedStyleSheets","map","forEach","document","createElement","litNonce","setAttribute","textContent","appendChild","c","cssRules","CSSResult","getCompatibleStyle","supportsAdoptingStyleSheets","unsafeCSS"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/@lit/reactive-element/src/css-tag.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nconst NODE_MODE = false;\nconst global = NODE_MODE ? globalThis : window;\n\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets: boolean =\n  global.ShadowRoot &&\n  (global.ShadyCSS === undefined || global.ShadyCSS.nativeShadow) &&\n  'adoptedStyleSheets' in Document.prototype &&\n  'replace' in CSSStyleSheet.prototype;\n\n/**\n * A CSSResult or native CSSStyleSheet.\n *\n * In browsers that support constructible CSS style sheets, CSSStyleSheet\n * object can be used for styling along side CSSResult from the `css`\n * template tag.\n */\nexport type CSSResultOrNative = CSSResult | CSSStyleSheet;\n\nexport type CSSResultArray = Array<CSSResultOrNative | CSSResultArray>;\n\n/**\n * A single CSSResult, CSSStyleSheet, or an array or nested arrays of those.\n */\nexport type CSSResultGroup = CSSResultOrNative | CSSResultArray;\n\nconst constructionToken = Symbol();\n\nconst cssTagCache = new WeakMap<TemplateStringsArray, CSSStyleSheet>();\n\n/**\n * A container for a string of CSS text, that may be used to create a CSSStyleSheet.\n *\n * CSSResult is the return value of `css`-tagged template literals and\n * `unsafeCSS()`. In order to ensure that CSSResults are only created via the\n * `css` tag and `unsafeCSS()`, CSSResult cannot be constructed directly.\n */\nexport class CSSResult {\n  // This property needs to remain unminified.\n  ['_$cssResult$'] = true;\n  readonly cssText: string;\n  private _styleSheet?: CSSStyleSheet;\n  private _strings: TemplateStringsArray | undefined;\n\n  private constructor(\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n        'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.'\n      );\n    }\n    this.cssText = cssText;\n    this._strings = strings;\n  }\n\n  // This is a getter so that it's lazy. In practice, this means stylesheets\n  // are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet | undefined {\n    // If `supportsAdoptingStyleSheets` is true then we assume CSSStyleSheet is\n    // constructable.\n    let styleSheet = this._styleSheet;\n    const strings = this._strings;\n    if (supportsAdoptingStyleSheets && styleSheet === undefined) {\n      const cacheable = strings !== undefined && strings.length === 1;\n      if (cacheable) {\n        styleSheet = cssTagCache.get(strings);\n      }\n      if (styleSheet === undefined) {\n        (this._styleSheet = styleSheet = new CSSStyleSheet()).replaceSync(\n          this.cssText\n        );\n        if (cacheable) {\n          cssTagCache.set(strings, styleSheet);\n        }\n      }\n    }\n    return styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\ntype ConstructableCSSResult = CSSResult & {\n  new (\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ): CSSResult;\n};\n\nconst textFromCSSResult = (value: CSSResultGroup | number) => {\n  // This property needs to remain unminified.\n  if ((value as CSSResult)['_$cssResult$'] === true) {\n    return (value as CSSResult).cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n      `Value passed to 'css' function must be a 'css' function result: ` +\n        `${value}. Use 'unsafeCSS' to pass non-literal values, but take care ` +\n        `to ensure page security.`\n    );\n  }\n};\n\n/**\n * Wrap a value for interpolation in a {@linkcode css} tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) =>\n  new (CSSResult as ConstructableCSSResult)(\n    typeof value === 'string' ? value : String(value),\n    undefined,\n    constructionToken\n  );\n\n/**\n * A template literal tag which can be used with LitElement's\n * {@linkcode LitElement.styles} property to set element styles.\n *\n * For security reasons, only literal string values and number may be used in\n * embedded expressions. To incorporate non-literal values {@linkcode unsafeCSS}\n * may be used inside an expression.\n */\nexport const css = (\n  strings: TemplateStringsArray,\n  ...values: (CSSResultGroup | number)[]\n): CSSResult => {\n  const cssText =\n    strings.length === 1\n      ? strings[0]\n      : values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]\n        );\n  return new (CSSResult as ConstructableCSSResult)(\n    cssText,\n    strings,\n    constructionToken\n  );\n};\n\n/**\n * Applies the given styles to a `shadowRoot`. When Shadow DOM is\n * available but `adoptedStyleSheets` is not, styles are appended to the\n * `shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n * Note, when shimming is used, any styles that are subsequently placed into\n * the shadowRoot should be placed *before* any shimmed adopted styles. This\n * will match spec behavior that gives adopted sheets precedence over styles in\n * shadowRoot.\n */\nexport const adoptStyles = (\n  renderRoot: ShadowRoot,\n  styles: Array<CSSResultOrNative>\n) => {\n  if (supportsAdoptingStyleSheets) {\n    (renderRoot as ShadowRoot).adoptedStyleSheets = styles.map((s) =>\n      s instanceof CSSStyleSheet ? s : s.styleSheet!\n    );\n  } else {\n    styles.forEach((s) => {\n      const style = document.createElement('style');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const nonce = (global as any)['litNonce'];\n      if (nonce !== undefined) {\n        style.setAttribute('nonce', nonce);\n      }\n      style.textContent = (s as CSSResult).cssText;\n      renderRoot.appendChild(style);\n    });\n  }\n};\n\nconst cssResultFromStyleSheet = (sheet: CSSStyleSheet) => {\n  let cssText = '';\n  for (const rule of sheet.cssRules) {\n    cssText += rule.cssText;\n  }\n  return unsafeCSS(cssText);\n};\n\nexport const getCompatibleStyle =\n  supportsAdoptingStyleSheets ||\n  (NODE_MODE && global.CSSStyleSheet === undefined)\n    ? (s: CSSResultOrNative) => s\n    : (s: CSSResultOrNative) =>\n        s instanceof CSSStyleSheet ? cssResultFromStyleSheet(s) : s;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}