{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Provides an error interface for handling when a function call has invalid parameters.\n */\nvar ParameterValidationError = /** @class */function () {\n  /**\n   * @param paramIndex The index of the param that for this error (index\n   * of the param in MethodObject.params).\n   * @param expectedSchema The expected JSON Schema for the passed in value.\n   * @param receievedParam The value of the param passed to the method call.\n   * @param errors The errors recieved by ajv\n   */\n  function ParameterValidationError(paramIndex, expectedSchema, receievedParam, errors) {\n    this.paramIndex = paramIndex;\n    this.expectedSchema = expectedSchema;\n    this.receievedParam = receievedParam;\n    this.name = \"ParameterValidationError\";\n    this.message = [\"Expected param at \" + (typeof paramIndex === \"string\" ? \"key\" : \"position\") + \": \", paramIndex, \" to match the json schema: \", JSON.stringify(expectedSchema, undefined, \"  \"), \". The function received instead \", receievedParam, \".\", \"The Validation errors: \\n\", JSON.stringify(errors)].join(\"\");\n  }\n  return ParameterValidationError;\n}();\nexports.default = ParameterValidationError;","map":{"version":3,"names":["Object","defineProperty","exports","value","ParameterValidationError","paramIndex","expectedSchema","receievedParam","errors","name","message","JSON","stringify","undefined","join","default"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/open-rpc-utils/build/method-call-validator/parameter-validation-error.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Provides an error interface for handling when a function call has invalid parameters.\n */\nvar ParameterValidationError = /** @class */ (function () {\n    /**\n     * @param paramIndex The index of the param that for this error (index\n     * of the param in MethodObject.params).\n     * @param expectedSchema The expected JSON Schema for the passed in value.\n     * @param receievedParam The value of the param passed to the method call.\n     * @param errors The errors recieved by ajv\n     */\n    function ParameterValidationError(paramIndex, expectedSchema, receievedParam, errors) {\n        this.paramIndex = paramIndex;\n        this.expectedSchema = expectedSchema;\n        this.receievedParam = receievedParam;\n        this.name = \"ParameterValidationError\";\n        this.message = [\n            \"Expected param at \" + (typeof paramIndex === \"string\" ? \"key\" : \"position\") + \": \",\n            paramIndex,\n            \" to match the json schema: \",\n            JSON.stringify(expectedSchema, undefined, \"  \"),\n            \". The function received instead \",\n            receievedParam,\n            \".\",\n            \"The Validation errors: \\n\",\n            JSON.stringify(errors)\n        ].join(\"\");\n    }\n    return ParameterValidationError;\n}());\nexports.default = ParameterValidationError;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D;AACA;AACA;AACA,IAAIC,wBAAwB,GAAG,aAAe,YAAY;EACtD;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,SAASA,wBAAwBA,CAACC,UAAU,EAAEC,cAAc,EAAEC,cAAc,EAAEC,MAAM,EAAE;IAClF,IAAI,CAACH,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACE,IAAI,GAAG,0BAA0B;IACtC,IAAI,CAACC,OAAO,GAAG,CACX,oBAAoB,IAAI,OAAOL,UAAU,KAAK,QAAQ,GAAG,KAAK,GAAG,UAAU,CAAC,GAAG,IAAI,EACnFA,UAAU,EACV,6BAA6B,EAC7BM,IAAI,CAACC,SAAS,CAACN,cAAc,EAAEO,SAAS,EAAE,IAAI,CAAC,EAC/C,kCAAkC,EAClCN,cAAc,EACd,GAAG,EACH,2BAA2B,EAC3BI,IAAI,CAACC,SAAS,CAACJ,MAAM,CAAC,CACzB,CAACM,IAAI,CAAC,EAAE,CAAC;EACd;EACA,OAAOV,wBAAwB;AACnC,CAAC,CAAC,CAAE;AACJF,OAAO,CAACa,OAAO,GAAGX,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}