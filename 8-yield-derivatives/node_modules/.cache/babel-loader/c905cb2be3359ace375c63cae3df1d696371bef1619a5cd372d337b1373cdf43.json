{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nfunction find(predicate, thisArg) {\n  return operators_1.find(predicate, thisArg)(this);\n}\nexports.find = find;","map":{"version":3,"names":["operators_1","require","find","predicate","thisArg","exports"],"sources":["../src/compat/operator/find.ts"],"sourcesContent":[null],"mappings":";;;;;AACA,IAAAA,WAAA,GAAAC,OAAA;AASA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,SAAgBC,IAAIA,CAAyBC,SAAsE,EAC3FC,OAAa;EACnC,OAAOJ,WAAA,CAAAE,IAAW,CAACC,SAAS,EAAEC,OAAO,CAAC,CAAC,IAAI,CAAC;AAC9C;AAHAC,OAAA,CAAAH,IAAA,GAAAA,IAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}