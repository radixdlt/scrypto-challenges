{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { decorateProperty } from './base.js';\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n *     once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first: HTMLDivElement;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector, cache) {\n  return decorateProperty({\n    descriptor: name => {\n      const descriptor = {\n        get() {\n          var _a, _b;\n          return (_b = (_a = this.renderRoot) === null || _a === void 0 ? void 0 : _a.querySelector(selector)) !== null && _b !== void 0 ? _b : null;\n        },\n        enumerable: true,\n        configurable: true\n      };\n      if (cache) {\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        descriptor.get = function () {\n          var _a, _b;\n          if (this[key] === undefined) {\n            this[key] = (_b = (_a = this.renderRoot) === null || _a === void 0 ? void 0 : _a.querySelector(selector)) !== null && _b !== void 0 ? _b : null;\n          }\n          return this[key];\n        };\n      }\n      return descriptor;\n    }\n  });\n}","map":{"version":3,"names":["decorateProperty","query","selector","cache","descriptor","name","get","_b","_a","renderRoot","querySelector","enumerable","configurable","key","Symbol","undefined"],"sources":["/Users/mdabdurrazzak/scrypto-challenges/8-yield-derivatives/node_modules/@lit/reactive-element/src/decorators/query.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {ReactiveElement} from '../reactive-element.js';\nimport {decorateProperty} from './base.js';\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n *     once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first: HTMLDivElement;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector: string, cache?: boolean) {\n  return decorateProperty({\n    descriptor: (name: PropertyKey) => {\n      const descriptor = {\n        get(this: ReactiveElement) {\n          return this.renderRoot?.querySelector(selector) ?? null;\n        },\n        enumerable: true,\n        configurable: true,\n      };\n      if (cache) {\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        descriptor.get = function (this: ReactiveElement) {\n          if (\n            (this as unknown as {[key: string]: Element | null})[\n              key as string\n            ] === undefined\n          ) {\n            (this as unknown as {[key: string]: Element | null})[\n              key as string\n            ] = this.renderRoot?.querySelector(selector) ?? null;\n          }\n          return (this as unknown as {[key: string]: Element | null})[\n            key as string\n          ];\n        };\n      }\n      return descriptor;\n    },\n  });\n}\n"],"mappings":"AAAA;;;;;AAcA,SAAQA,gBAAgB,QAAO,WAAW;AAE1C;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,OAAM,SAAUC,KAAKA,CAACC,QAAgB,EAAEC,KAAe;EACrD,OAAOH,gBAAgB,CAAC;IACtBI,UAAU,EAAGC,IAAiB,IAAI;MAChC,MAAMD,UAAU,GAAG;QACjBE,GAAGA,CAAA;;UACD,OAAO,CAAAC,EAAA,IAAAC,EAAA,OAAI,CAACC,UAAU,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,aAAa,CAACR,QAAQ,CAAC,cAAAK,EAAA,cAAAA,EAAA,GAAI,IAAI;QACzD,CAAC;QACDI,UAAU,EAAE,IAAI;QAChBC,YAAY,EAAE;OACf;MACD,IAAIT,KAAK,EAAE;QACT,MAAMU,GAAG,GAAG,OAAOR,IAAI,KAAK,QAAQ,GAAGS,MAAM,EAAE,GAAG,KAAKT,IAAI,EAAE;QAC7DD,UAAU,CAACE,GAAG,GAAG;;UACf,IACG,IAAmD,CAClDO,GAAa,CACd,KAAKE,SAAS,EACf;YACC,IAAmD,CAClDF,GAAa,CACd,GAAG,CAAAN,EAAA,IAAAC,EAAA,OAAI,CAACC,UAAU,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,aAAa,CAACR,QAAQ,CAAC,cAAAK,EAAA,cAAAA,EAAA,GAAI,IAAI;;UAEtD,OAAQ,IAAmD,CACzDM,GAAa,CACd;QACH,CAAC;;MAEH,OAAOT,UAAU;IACnB;GACD,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}