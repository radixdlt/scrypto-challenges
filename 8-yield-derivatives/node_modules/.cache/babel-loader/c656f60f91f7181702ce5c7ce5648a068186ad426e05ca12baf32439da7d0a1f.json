{"ast":null,"code":"import _includes from \"./internal/_includes.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _filter from \"./internal/_filter.js\";\nimport flip from \"./flip.js\";\nimport uniq from \"./uniq.js\";\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\n\nvar intersection = /*#__PURE__*/\n_curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n  return uniq(_filter(flip(_includes)(lookupList), filteredList));\n});\nexport default intersection;","map":{"version":3,"names":["_includes","_curry2","_filter","flip","uniq","intersection","list1","list2","lookupList","filteredList","length"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/ramda/es/intersection.js"],"sourcesContent":["import _includes from \"./internal/_includes.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _filter from \"./internal/_filter.js\";\nimport flip from \"./flip.js\";\nimport uniq from \"./uniq.js\";\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\n\nvar intersection =\n/*#__PURE__*/\n_curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n\n  return uniq(_filter(flip(_includes)(lookupList), filteredList));\n});\n\nexport default intersection;"],"mappings":"AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,IAAI,MAAM,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,YAAY,GAChB;AACAJ,OAAO,CAAC,SAASI,YAAYA,CAACC,KAAK,EAAEC,KAAK,EAAE;EAC1C,IAAIC,UAAU,EAAEC,YAAY;EAE5B,IAAIH,KAAK,CAACI,MAAM,GAAGH,KAAK,CAACG,MAAM,EAAE;IAC/BF,UAAU,GAAGF,KAAK;IAClBG,YAAY,GAAGF,KAAK;EACtB,CAAC,MAAM;IACLC,UAAU,GAAGD,KAAK;IAClBE,YAAY,GAAGH,KAAK;EACtB;EAEA,OAAOF,IAAI,CAACF,OAAO,CAACC,IAAI,CAACH,SAAS,CAAC,CAACQ,UAAU,CAAC,EAAEC,YAAY,CAAC,CAAC;AACjE,CAAC,CAAC;AAEF,eAAeJ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}