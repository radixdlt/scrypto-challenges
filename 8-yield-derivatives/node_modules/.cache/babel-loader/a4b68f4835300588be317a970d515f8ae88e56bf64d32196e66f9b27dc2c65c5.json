{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nexport function skipLast(count) {\n  return function (source) {\n    return source.lift(new SkipLastOperator(count));\n  };\n}\nvar SkipLastOperator = /*@__PURE__*/function () {\n  function SkipLastOperator(_skipCount) {\n    this._skipCount = _skipCount;\n    if (this._skipCount < 0) {\n      throw new ArgumentOutOfRangeError();\n    }\n  }\n  SkipLastOperator.prototype.call = function (subscriber, source) {\n    if (this._skipCount === 0) {\n      return source.subscribe(new Subscriber(subscriber));\n    } else {\n      return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n    }\n  };\n  return SkipLastOperator;\n}();\nvar SkipLastSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SkipLastSubscriber, _super);\n  function SkipLastSubscriber(destination, _skipCount) {\n    var _this = _super.call(this, destination) || this;\n    _this._skipCount = _skipCount;\n    _this._count = 0;\n    _this._ring = new Array(_skipCount);\n    return _this;\n  }\n  SkipLastSubscriber.prototype._next = function (value) {\n    var skipCount = this._skipCount;\n    var count = this._count++;\n    if (count < skipCount) {\n      this._ring[count] = value;\n    } else {\n      var currentIndex = count % skipCount;\n      var ring = this._ring;\n      var oldValue = ring[currentIndex];\n      ring[currentIndex] = value;\n      this.destination.next(oldValue);\n    }\n  };\n  return SkipLastSubscriber;\n}(Subscriber);","map":{"version":3,"names":["tslib_1","Subscriber","ArgumentOutOfRangeError","skipLast","count","source","lift","SkipLastOperator","_skipCount","prototype","call","subscriber","subscribe","SkipLastSubscriber","_super","__extends","destination","_this","_count","_next","value","skipCount","_ring","currentIndex","ring","oldValue","next"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/radixdlt/node_modules/rxjs/src/internal/operators/skipLast.ts"],"sourcesContent":["import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * ![](skipLast.png)\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * ## Example\n * Skip the last 2 values of an Observable with many values\n * ```ts\n * import { range } from 'rxjs';\n * import { skipLast } from 'rxjs/operators';\n *\n * const many = range(1, 5);\n * const skipLastTwo = many.pipe(skipLast(2));\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n * ```\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nexport function skipLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipLastOperator(count));\n}\n\nclass SkipLastOperator<T> implements Operator<T, T> {\n  constructor(private _skipCount: number) {\n    if (this._skipCount < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    if (this._skipCount === 0) {\n      // If we don't want to skip any values then just subscribe\n      // to Subscriber without any further logic.\n      return source.subscribe(new Subscriber(subscriber));\n    } else {\n      return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipLastSubscriber<T> extends Subscriber<T> {\n  private _ring: T[];\n  private _count: number = 0;\n\n  constructor(destination: Subscriber<T>, private _skipCount: number) {\n    super(destination);\n    this._ring = new Array<T>(_skipCount);\n  }\n\n  protected _next(value: T): void {\n    const skipCount = this._skipCount;\n    const count = this._count++;\n\n    if (count < skipCount) {\n      this._ring[count] = value;\n    } else {\n      const currentIndex = count % skipCount;\n      const ring = this._ring;\n      const oldValue = ring[currentIndex];\n\n      ring[currentIndex] = value;\n      this.destination.next(oldValue);\n    }\n  }\n}\n"],"mappings":";AACA,OAAO,KAAEA,OAAU,MAAE,OAAM;AAC3B,SAASC,UAAA,uBAA+B;AA0CxC,SAAMC,uBAAmC;OACvC,SAAOC,QAACA,CAAAC,KAAqB,EAAK;EACnC,iBAAAC,MAAA;IAAA,OAAAA,MAAA,CAAAC,IAAA,KAAAC,gBAAA,CAAAH,KAAA;EAAA;AAED;IACEG,gBAAA,gBAAoB,YAAkB;WAAlBA,iBAAAC,UAAkB;IACpC,IAAI,CAAAA,UAAK,GAAAA,UAAgB;QACvB,KAAAA,UAAU;MACX,UAAAN,uBAAA;IACF;EAED;kBACW,CAAAO,SAAU,CAAAC,IAAQ,aAAAC,UAAA,EAAAN,MAAA;QAGzB,KAAAG,UAAc,QAAS;MACxB,OAAAH,MAAA,CAAAO,SAAA,KAAAX,UAAA,CAAAU,UAAA;WACC;MACD,OAAAN,MAAA,CAAAO,SAAA,KAAAC,kBAAA,CAAAF,UAAA,OAAAH,UAAA;IACF;EACH;EAhBA,OAgBCD,gBAAA;AAOD;IAAoCM,kBAAA,0BAAaC,MAAA;EAI/Cd,OAAA,CAAAe,SAAA,CAAAF,kBAAY,EAAAC,MAAoC;WAAhDD,kBACEA,CAAAG,WAAM,EAAAR,UAAY;IAD4B,IAAAS,KAAA,GAAAH,MAAU,CAAVJ,IAAA,OAAkBM,WAAA;IAF1DC,KAAA,CAAAT,UAAkB,GAACA,UAAA;IAIzBS,KAAI,CAACC,MAAK,GAAG;;IACd,OAAAD,KAAA;EAES;oBACO,CAAAR,SAAQ,CAAAU,KAAA,GAAW,UAAAC,KAAA;IAClC,IAAMC,SAAQ,GAAI,IAAC,CAAAb,UAAS;IAE5B,IAAIJ,KAAK,GAAG,KAAAc,MAAW;QACrBd,KAAK,GAAAiB,SAAY;MAClB,KAAAC,KAAA,CAAAlB,KAAA,IAAAgB,KAAA;WACC;MACA,IAAMG,YAAY,GAAAnB,KAAM,GAAAiB,SAAA;MACxB,IAAMG,IAAA,OAAW,CAAAF,KAAK;MAEtB,IAAIG,QAAC,GAAAD,IAAa,CAAAD,YAAS;MAC3BC,IAAI,CAACD,YAAY,IAAIH,KAAC;MACvB,KAAAJ,WAAA,CAAAU,IAAA,CAAAD,QAAA;IACF;EACH;EAxBoC,OAAAZ,kBAwBnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}