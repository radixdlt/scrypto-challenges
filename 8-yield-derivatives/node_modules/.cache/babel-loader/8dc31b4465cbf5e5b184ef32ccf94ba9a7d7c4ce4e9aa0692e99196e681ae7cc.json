{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAPI = void 0;\nconst neverthrow_1 = require(\"neverthrow\");\nconst responseHandlers_1 = require(\"./responseHandlers\");\nconst ramda_1 = require(\"ramda\");\nconst _types_1 = require(\"./_types\");\nconst callAPI = endpoint => (call, handleResponse) => params => (0, ramda_1.pipe)(call, (0, ramda_1.andThen)(handleResponse), value =>\n// @ts-ignore\nneverthrow_1.ResultAsync.fromPromise(value, e => e).andThen(r => r))(endpoint, params);\nconst setupAPICall = call => (\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nhandleResponse) => endpoint => callAPI(endpoint)(call, handleResponse);\nconst getAPI = call => {\n  const setupAPIResponse = setupAPICall(call);\n  return {\n    [_types_1.ApiMethod.NETWORK_ID]: setupAPIResponse(responseHandlers_1.handleNetworkIdResponse)(_types_1.ApiMethod.NETWORK_ID),\n    [_types_1.ApiMethod.TOKEN_BALANCES]: setupAPIResponse(responseHandlers_1.handleTokenBalancesResponse)(_types_1.ApiMethod.TOKEN_BALANCES),\n    [_types_1.ApiMethod.VALIDATORS]: setupAPIResponse(responseHandlers_1.handleValidatorsResponse)(_types_1.ApiMethod.VALIDATORS),\n    [_types_1.ApiMethod.LOOKUP_TX]: setupAPIResponse(responseHandlers_1.handleLookupTXResponse)(_types_1.ApiMethod.LOOKUP_TX),\n    [_types_1.ApiMethod.LOOKUP_VALIDATOR]: setupAPIResponse(responseHandlers_1.handleLookupValidatorResponse)(_types_1.ApiMethod.LOOKUP_VALIDATOR),\n    [_types_1.ApiMethod.TRANSACTION_HISTORY]: setupAPIResponse(responseHandlers_1.handleTransactionHistoryResponse)(_types_1.ApiMethod.TRANSACTION_HISTORY),\n    [_types_1.ApiMethod.NATIVE_TOKEN]: setupAPIResponse(responseHandlers_1.handleTokenInfoResponse)(_types_1.ApiMethod.NATIVE_TOKEN),\n    [_types_1.ApiMethod.TOKEN_INFO]: setupAPIResponse(responseHandlers_1.handleTokenInfoResponse)(_types_1.ApiMethod.TOKEN_INFO),\n    [_types_1.ApiMethod.STAKES]: setupAPIResponse(responseHandlers_1.handleStakesResponse)(_types_1.ApiMethod.STAKES),\n    [_types_1.ApiMethod.UNSTAKES]: setupAPIResponse(responseHandlers_1.handleUnstakesResponse)(_types_1.ApiMethod.UNSTAKES),\n    [_types_1.ApiMethod.TX_STATUS]: setupAPIResponse(responseHandlers_1.handleTransactionStatusResponse)(_types_1.ApiMethod.TX_STATUS),\n    [_types_1.ApiMethod.NETWORK_TX_THROUGHPUT]: setupAPIResponse(responseHandlers_1.handleNetworkxThroughputResponse)(_types_1.ApiMethod.NETWORK_TX_THROUGHPUT),\n    [_types_1.ApiMethod.NETWORK_TX_DEMAND]: setupAPIResponse(responseHandlers_1.handleNetworkxDemandResponse)(_types_1.ApiMethod.NETWORK_TX_DEMAND),\n    [_types_1.ApiMethod.BUILD_TX_FROM_INTENT]: setupAPIResponse(responseHandlers_1.handleBuildTransactionResponse)(_types_1.ApiMethod.BUILD_TX_FROM_INTENT),\n    [_types_1.ApiMethod.FINALIZE_TX]: setupAPIResponse(responseHandlers_1.handleFinalizeTransactionResponse)(_types_1.ApiMethod.FINALIZE_TX),\n    [_types_1.ApiMethod.SUBMIT_TX]: setupAPIResponse(responseHandlers_1.handleSubmitTransactionResponse)(_types_1.ApiMethod.SUBMIT_TX)\n  };\n};\nexports.getAPI = getAPI;","map":{"version":3,"names":["neverthrow_1","require","responseHandlers_1","ramda_1","_types_1","callAPI","endpoint","call","handleResponse","params","pipe","andThen","value","ResultAsync","fromPromise","e","r","setupAPICall","getAPI","setupAPIResponse","ApiMethod","NETWORK_ID","handleNetworkIdResponse","TOKEN_BALANCES","handleTokenBalancesResponse","VALIDATORS","handleValidatorsResponse","LOOKUP_TX","handleLookupTXResponse","LOOKUP_VALIDATOR","handleLookupValidatorResponse","TRANSACTION_HISTORY","handleTransactionHistoryResponse","NATIVE_TOKEN","handleTokenInfoResponse","TOKEN_INFO","STAKES","handleStakesResponse","UNSTAKES","handleUnstakesResponse","TX_STATUS","handleTransactionStatusResponse","NETWORK_TX_THROUGHPUT","handleNetworkxThroughputResponse","NETWORK_TX_DEMAND","handleNetworkxDemandResponse","BUILD_TX_FROM_INTENT","handleBuildTransactionResponse","FINALIZE_TX","handleFinalizeTransactionResponse","SUBMIT_TX","handleSubmitTransactionResponse","exports"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/@radixdlt/application/src/api/json-rpc/interface.ts"],"sourcesContent":["import { Result, ResultAsync } from 'neverthrow'\nimport {\n\thandleBuildTransactionResponse,\n\thandleLookupTXResponse,\n\thandleNetworkxDemandResponse,\n\thandleNetworkxThroughputResponse,\n\thandleStakesResponse,\n\thandleFinalizeTransactionResponse,\n\thandleTokenBalancesResponse,\n\thandleTokenInfoResponse,\n\thandleTransactionHistoryResponse,\n\thandleTransactionStatusResponse,\n\thandleNetworkIdResponse,\n\thandleUnstakesResponse,\n\thandleValidatorsResponse,\n\thandleSubmitTransactionResponse,\n\thandleLookupValidatorResponse,\n} from './responseHandlers'\nimport { andThen, pipe } from 'ramda'\nimport {\n\tApiMethod,\n\tBuildTransactionEndpoint,\n\tSubmitTransactionEndpoint,\n\tLookupTransactionEndpoint,\n\tNativeTokenEndpoint,\n\tNetworkIdEndpoint,\n\tNetworkTransactionDemandEndpoint,\n\tNetworkTransactionThroughputEndpoint,\n\tStakePositionsEndpoint,\n\tFinalizeTransactionEndpoint,\n\tTokenBalancesEndpoint,\n\tTokenInfoEndpoint,\n\tTransactionHistoryEndpoint,\n\tTransactionStatusEndpoint,\n\tUnstakePositionsEndpoint,\n\tValidatorsEndpoint,\n\tLookupValidatorEndpoint,\n} from './_types'\n\nconst callAPI = <Params extends Record<string, unknown>, DecodedResponse>(\n\tendpoint: ApiMethod,\n) => (\n\tcall: (\n\t\tendpoint: ApiMethod,\n\t\tparams: Params,\n\t\theaders?: Record<string, string>,\n\t) => Promise<unknown>,\n\thandleResponse: (response: unknown) => Result<DecodedResponse, Error[]>,\n) => (params: Params) =>\n\tpipe(call, andThen(handleResponse), value =>\n\t\t// @ts-ignore\n\t\tResultAsync.fromPromise(value, (e: Error[]) => e).andThen(r => r),\n\t)(endpoint, params)\n\nconst setupAPICall = (\n\tcall: (\n\t\tendpoint: ApiMethod,\n\t\tparams: Record<string, unknown>,\n\t\theaders?: Record<string, string>,\n\t) => Promise<unknown>,\n) => <I extends Record<string, unknown>, R>(\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\thandleResponse: (response: any) => Result<R, Error[]>,\n) => (endpoint: ApiMethod) => callAPI<I, R>(endpoint)(call, handleResponse)\n\nexport const getAPI = (\n\tcall: (\n\t\tendpoint: ApiMethod,\n\t\tparams: Record<string, unknown>,\n\t\theaders?: Record<string, string>,\n\t) => Promise<unknown>,\n) => {\n\tconst setupAPIResponse = setupAPICall(call)\n\n\treturn {\n\t\t[ApiMethod.NETWORK_ID]: setupAPIResponse<\n\t\t\tNetworkIdEndpoint.Input,\n\t\t\tNetworkIdEndpoint.DecodedResponse\n\t\t>(handleNetworkIdResponse)(ApiMethod.NETWORK_ID),\n\n\t\t[ApiMethod.TOKEN_BALANCES]: setupAPIResponse<\n\t\t\tTokenBalancesEndpoint.Input,\n\t\t\tTokenBalancesEndpoint.DecodedResponse\n\t\t>(handleTokenBalancesResponse)(ApiMethod.TOKEN_BALANCES),\n\n\t\t[ApiMethod.VALIDATORS]: setupAPIResponse<\n\t\t\tValidatorsEndpoint.Input,\n\t\t\tValidatorsEndpoint.DecodedResponse\n\t\t>(handleValidatorsResponse)(ApiMethod.VALIDATORS),\n\n\t\t[ApiMethod.LOOKUP_TX]: setupAPIResponse<\n\t\t\tLookupTransactionEndpoint.Input,\n\t\t\tLookupTransactionEndpoint.DecodedResponse\n\t\t>(handleLookupTXResponse)(ApiMethod.LOOKUP_TX),\n\n\t\t[ApiMethod.LOOKUP_VALIDATOR]: setupAPIResponse<\n\t\t\tLookupValidatorEndpoint.Input,\n\t\t\tLookupValidatorEndpoint.DecodedResponse\n\t\t>(handleLookupValidatorResponse)(ApiMethod.LOOKUP_VALIDATOR),\n\n\t\t[ApiMethod.TRANSACTION_HISTORY]: setupAPIResponse<\n\t\t\tTransactionHistoryEndpoint.Input,\n\t\t\tTransactionHistoryEndpoint.DecodedResponse\n\t\t>(handleTransactionHistoryResponse)(ApiMethod.TRANSACTION_HISTORY),\n\n\t\t[ApiMethod.NATIVE_TOKEN]: setupAPIResponse<\n\t\t\tNativeTokenEndpoint.Input,\n\t\t\tNativeTokenEndpoint.DecodedResponse\n\t\t>(handleTokenInfoResponse)(ApiMethod.NATIVE_TOKEN),\n\n\t\t[ApiMethod.TOKEN_INFO]: setupAPIResponse<\n\t\t\tTokenInfoEndpoint.Input,\n\t\t\tTokenInfoEndpoint.DecodedResponse\n\t\t>(handleTokenInfoResponse)(ApiMethod.TOKEN_INFO),\n\n\t\t[ApiMethod.STAKES]: setupAPIResponse<\n\t\t\tStakePositionsEndpoint.Input,\n\t\t\tStakePositionsEndpoint.DecodedResponse\n\t\t>(handleStakesResponse)(ApiMethod.STAKES),\n\n\t\t[ApiMethod.UNSTAKES]: setupAPIResponse<\n\t\t\tUnstakePositionsEndpoint.Input,\n\t\t\tUnstakePositionsEndpoint.DecodedResponse\n\t\t>(handleUnstakesResponse)(ApiMethod.UNSTAKES),\n\n\t\t[ApiMethod.TX_STATUS]: setupAPIResponse<\n\t\t\tTransactionStatusEndpoint.Input,\n\t\t\tTransactionStatusEndpoint.DecodedResponse\n\t\t>(handleTransactionStatusResponse)(ApiMethod.TX_STATUS),\n\n\t\t[ApiMethod.NETWORK_TX_THROUGHPUT]: setupAPIResponse<\n\t\t\tNetworkTransactionThroughputEndpoint.Input,\n\t\t\tNetworkTransactionThroughputEndpoint.DecodedResponse\n\t\t>(handleNetworkxThroughputResponse)(ApiMethod.NETWORK_TX_THROUGHPUT),\n\n\t\t[ApiMethod.NETWORK_TX_DEMAND]: setupAPIResponse<\n\t\t\tNetworkTransactionDemandEndpoint.Input,\n\t\t\tNetworkTransactionDemandEndpoint.DecodedResponse\n\t\t>(handleNetworkxDemandResponse)(ApiMethod.NETWORK_TX_DEMAND),\n\n\t\t[ApiMethod.BUILD_TX_FROM_INTENT]: setupAPIResponse<\n\t\t\tBuildTransactionEndpoint.Input,\n\t\t\tBuildTransactionEndpoint.DecodedResponse\n\t\t>(handleBuildTransactionResponse)(ApiMethod.BUILD_TX_FROM_INTENT),\n\n\t\t[ApiMethod.FINALIZE_TX]: setupAPIResponse<\n\t\t\tFinalizeTransactionEndpoint.Input,\n\t\t\tFinalizeTransactionEndpoint.DecodedResponse\n\t\t>(handleFinalizeTransactionResponse)(ApiMethod.FINALIZE_TX),\n\n\t\t[ApiMethod.SUBMIT_TX]: setupAPIResponse<\n\t\t\tSubmitTransactionEndpoint.Input,\n\t\t\tSubmitTransactionEndpoint.DecodedResponse\n\t\t>(handleSubmitTransactionResponse)(ApiMethod.SUBMIT_TX),\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}