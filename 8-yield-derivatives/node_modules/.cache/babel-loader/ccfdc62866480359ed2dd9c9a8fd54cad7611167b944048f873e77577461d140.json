{"ast":null,"code":"(function () {\n  'use strict';\n\n  var compoundSubject = function (arrayOfStrings) {\n    var wrapperObject = {},\n      endWith = 'and',\n      delimitAll = false,\n      delimitWith = ',';\n    wrapperObject.endWith = function (newEndWith) {\n      if (typeof newEndWith !== 'string') {\n        return wrapperObject;\n      }\n      endWith = newEndWith;\n      return wrapperObject;\n    };\n    wrapperObject.delimitAll = function /*newDelimitAll*/\n    () {\n      var newDelimitAll = arguments[0];\n      if (typeof newDelimitAll === 'boolean') {\n        delimitAll = newDelimitAll;\n      } else {\n        delimitAll = true;\n      }\n      return wrapperObject;\n    };\n    wrapperObject.delimitWith = function (newDelimitWith) {\n      if (typeof newDelimitWith !== 'string') {\n        return wrapperObject;\n      }\n      delimitWith = newDelimitWith;\n      return wrapperObject;\n    };\n    wrapperObject.make = function () {\n      var combinedEndWith = delimitAll ? delimitWith + ' ' + endWith + ' ' : ' ' + endWith + ' ',\n        upToLastTwo,\n        lastTwo;\n      if (typeof arrayOfStrings === 'undefined' || !arrayOfStrings instanceof Array) {\n        return '';\n      }\n      upToLastTwo = arrayOfStrings.slice(0, -2).join(delimitWith + ' ');\n      lastTwo = arrayOfStrings.slice(arrayOfStrings.length - 2).join(combinedEndWith);\n      if (!upToLastTwo.length) {\n        return lastTwo;\n      }\n      return upToLastTwo + delimitWith + ' ' + lastTwo;\n    };\n    return wrapperObject;\n  };\n\n  // Node\n  if (typeof module !== 'undefined') {\n    module.exports = compoundSubject;\n  }\n\n  // Browser\n  else if (typeof window !== 'undefined') {\n    window.compoundSubject = compoundSubject;\n  } else {\n    throw new Error('Couldn\\'t find a suitable scope in which to define compoundSubject');\n  }\n})();","map":{"version":3,"names":["compoundSubject","arrayOfStrings","wrapperObject","endWith","delimitAll","delimitWith","newEndWith","newDelimitAll","arguments","newDelimitWith","make","combinedEndWith","upToLastTwo","lastTwo","Array","slice","join","length","module","exports","window","Error"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/compound-subject/compound-subject.js"],"sourcesContent":["(function () {\n\n\n\t'use strict';\n\n\n\tvar compoundSubject = function (arrayOfStrings) {\n\n\n\t\tvar wrapperObject = {},\n\t\t\tendWith = 'and',\n\t\t\tdelimitAll = false,\n\t\t\tdelimitWith = ',';\n\n\n\t\twrapperObject.endWith = function (newEndWith) {\n\n\t\t\tif (typeof newEndWith !== 'string') {\n\t\t\t\treturn wrapperObject;\n\t\t\t}\n\n\t\t\tendWith = newEndWith;\n\n\t\t\treturn wrapperObject;\n\n\t\t};\n\n\n\t\twrapperObject.delimitAll = function (/*newDelimitAll*/) {\n\n\t\t\tvar newDelimitAll = arguments[0];\n\n\t\t\tif (typeof newDelimitAll === 'boolean') {\n\t\t\t\tdelimitAll = newDelimitAll;\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\tdelimitAll = true;\n\t\t\t}\n\n\t\t\treturn wrapperObject;\n\n\t\t};\n\n\n\t\twrapperObject.delimitWith = function (newDelimitWith) {\n\n\t\t\tif (typeof newDelimitWith !== 'string') {\n\t\t\t\treturn wrapperObject;\n\t\t\t}\n\n\t\t\tdelimitWith = newDelimitWith;\n\n\t\t\treturn wrapperObject;\n\n\t\t};\n\n\n\t\twrapperObject.make = function () {\n\n\t\t\tvar combinedEndWith = delimitAll ? delimitWith + ' ' + endWith + ' ' : ' ' + endWith + ' ',\n\t\t\t\tupToLastTwo,\n\t\t\t\tlastTwo;\n\n\t\t\tif (typeof arrayOfStrings === 'undefined' || !arrayOfStrings instanceof Array) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tupToLastTwo = arrayOfStrings\n\t\t\t\t.slice(0, -2)\n\t\t\t\t.join(delimitWith + ' ');\n\n\t\t\tlastTwo = arrayOfStrings\n\t\t\t\t.slice(arrayOfStrings.length - 2)\n\t\t\t\t.join(combinedEndWith);\t\t\t\t\n\n\t\t\tif (!upToLastTwo.length) {\n\t\t\t\treturn lastTwo;\n\t\t\t}\n\n\t\t\treturn upToLastTwo + delimitWith + ' ' + lastTwo;\n\n\t\t};\n\n\n\t\treturn wrapperObject;\n\n\n\t};\n\n\n\t// Node\n\tif (typeof module !== 'undefined') {\n\t\tmodule.exports = compoundSubject;\n\t}\n\n\t// Browser\n\telse if (typeof window !== 'undefined') {\n\t\twindow.compoundSubject = compoundSubject;\n\t}\n\n\telse {\n\t\tthrow new Error('Couldn\\'t find a suitable scope in which to define compoundSubject');\n\t}\n\n\n})();\n"],"mappings":"AAAA,CAAC,YAAY;EAGZ,YAAY;;EAGZ,IAAIA,eAAe,GAAG,SAAAA,CAAUC,cAAc,EAAE;IAG/C,IAAIC,aAAa,GAAG,CAAC,CAAC;MACrBC,OAAO,GAAG,KAAK;MACfC,UAAU,GAAG,KAAK;MAClBC,WAAW,GAAG,GAAG;IAGlBH,aAAa,CAACC,OAAO,GAAG,UAAUG,UAAU,EAAE;MAE7C,IAAI,OAAOA,UAAU,KAAK,QAAQ,EAAE;QACnC,OAAOJ,aAAa;MACrB;MAEAC,OAAO,GAAGG,UAAU;MAEpB,OAAOJ,aAAa;IAErB,CAAC;IAGDA,aAAa,CAACE,UAAU,GAAG,SAAU;IAAA,GAAmB;MAEvD,IAAIG,aAAa,GAAGC,SAAS,CAAC,CAAC,CAAC;MAEhC,IAAI,OAAOD,aAAa,KAAK,SAAS,EAAE;QACvCH,UAAU,GAAGG,aAAa;MAC3B,CAAC,MAEI;QACJH,UAAU,GAAG,IAAI;MAClB;MAEA,OAAOF,aAAa;IAErB,CAAC;IAGDA,aAAa,CAACG,WAAW,GAAG,UAAUI,cAAc,EAAE;MAErD,IAAI,OAAOA,cAAc,KAAK,QAAQ,EAAE;QACvC,OAAOP,aAAa;MACrB;MAEAG,WAAW,GAAGI,cAAc;MAE5B,OAAOP,aAAa;IAErB,CAAC;IAGDA,aAAa,CAACQ,IAAI,GAAG,YAAY;MAEhC,IAAIC,eAAe,GAAGP,UAAU,GAAGC,WAAW,GAAG,GAAG,GAAGF,OAAO,GAAG,GAAG,GAAG,GAAG,GAAGA,OAAO,GAAG,GAAG;QACzFS,WAAW;QACXC,OAAO;MAER,IAAI,OAAOZ,cAAc,KAAK,WAAW,IAAI,CAACA,cAAc,YAAYa,KAAK,EAAE;QAC9E,OAAO,EAAE;MACV;MAEAF,WAAW,GAAGX,cAAc,CAC1Bc,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CACZC,IAAI,CAACX,WAAW,GAAG,GAAG,CAAC;MAEzBQ,OAAO,GAAGZ,cAAc,CACtBc,KAAK,CAACd,cAAc,CAACgB,MAAM,GAAG,CAAC,CAAC,CAChCD,IAAI,CAACL,eAAe,CAAC;MAEvB,IAAI,CAACC,WAAW,CAACK,MAAM,EAAE;QACxB,OAAOJ,OAAO;MACf;MAEA,OAAOD,WAAW,GAAGP,WAAW,GAAG,GAAG,GAAGQ,OAAO;IAEjD,CAAC;IAGD,OAAOX,aAAa;EAGrB,CAAC;;EAGD;EACA,IAAI,OAAOgB,MAAM,KAAK,WAAW,EAAE;IAClCA,MAAM,CAACC,OAAO,GAAGnB,eAAe;EACjC;;EAEA;EAAA,KACK,IAAI,OAAOoB,MAAM,KAAK,WAAW,EAAE;IACvCA,MAAM,CAACpB,eAAe,GAAGA,eAAe;EACzC,CAAC,MAEI;IACJ,MAAM,IAAIqB,KAAK,CAAC,oEAAoE,CAAC;EACtF;AAGD,CAAC,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}