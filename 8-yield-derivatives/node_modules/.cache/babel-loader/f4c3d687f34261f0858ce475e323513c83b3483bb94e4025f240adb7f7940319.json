{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\nimport { observeNotification } from '../Notification';\nvar HotObservable = function (_super) {\n  __extends(HotObservable, _super);\n  function HotObservable(messages, scheduler) {\n    var _this = _super.call(this) || this;\n    _this.messages = messages;\n    _this.subscriptions = [];\n    _this.scheduler = scheduler;\n    return _this;\n  }\n  HotObservable.prototype._subscribe = function (subscriber) {\n    var subject = this;\n    var index = subject.logSubscribedFrame();\n    var subscription = new Subscription();\n    subscription.add(new Subscription(function () {\n      subject.logUnsubscribedFrame(index);\n    }));\n    subscription.add(_super.prototype._subscribe.call(this, subscriber));\n    return subscription;\n  };\n  HotObservable.prototype.setup = function () {\n    var subject = this;\n    var messagesLength = subject.messages.length;\n    var _loop_1 = function (i) {\n      (function () {\n        var _a = subject.messages[i],\n          notification = _a.notification,\n          frame = _a.frame;\n        subject.scheduler.schedule(function () {\n          observeNotification(notification, subject);\n        }, frame);\n      })();\n    };\n    for (var i = 0; i < messagesLength; i++) {\n      _loop_1(i);\n    }\n  };\n  return HotObservable;\n}(Subject);\nexport { HotObservable };\napplyMixins(HotObservable, [SubscriptionLoggable]);","map":{"version":3,"names":["Subject","Subscription","SubscriptionLoggable","applyMixins","observeNotification","HotObservable","_super","__extends","messages","scheduler","_this","call","subscriptions","prototype","_subscribe","subscriber","subject","index","logSubscribedFrame","subscription","add","logUnsubscribedFrame","setup","messagesLength","length","i","_a","notification","frame","schedule"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/rxjs/src/internal/testing/HotObservable.ts"],"sourcesContent":["import { Subject } from '../Subject';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Scheduler } from '../Scheduler';\nimport { TestMessage } from './TestMessage';\nimport { SubscriptionLog } from './SubscriptionLog';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\nimport { observeNotification } from '../Notification';\n\nexport class HotObservable<T> extends Subject<T> implements SubscriptionLoggable {\n  public subscriptions: SubscriptionLog[] = [];\n  scheduler: Scheduler;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  logSubscribedFrame: () => number;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  logUnsubscribedFrame: (index: number) => void;\n\n  constructor(public messages: TestMessage[], scheduler: Scheduler) {\n    super();\n    this.scheduler = scheduler;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): Subscription {\n    const subject: HotObservable<T> = this;\n    const index = subject.logSubscribedFrame();\n    const subscription = new Subscription();\n    subscription.add(\n      new Subscription(() => {\n        subject.logUnsubscribedFrame(index);\n      })\n    );\n    subscription.add(super._subscribe(subscriber));\n    return subscription;\n  }\n\n  setup() {\n    const subject = this;\n    const messagesLength = subject.messages.length;\n    /* tslint:disable:no-var-keyword */\n    for (let i = 0; i < messagesLength; i++) {\n      (() => {\n        const { notification, frame } = subject.messages[i];\n        /* tslint:enable */\n        subject.scheduler.schedule(() => {\n          observeNotification(notification, subject);\n        }, frame);\n      })();\n    }\n  }\n}\napplyMixins(HotObservable, [SubscriptionLoggable]);\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,YAAY;AAEpC,SAASC,YAAY,QAAQ,iBAAiB;AAI9C,SAASC,oBAAoB,QAAQ,wBAAwB;AAC7D,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,mBAAmB,QAAQ,iBAAiB;AAErD,IAAAC,aAAA,aAAAC,MAAA;EAAsCC,SAAA,CAAAF,aAAA,EAAAC,MAAA;EAQpC,SAAAD,cAAmBG,QAAuB,EAAEC,SAAoB;IAAhE,IAAAC,KAAA,GACEJ,MAAA,CAAAK,IAAA,MAAO;IADUD,KAAA,CAAAF,QAAQ,GAARA,QAAQ;IAPpBE,KAAA,CAAAE,aAAa,GAAsB,EAAE;IAS1CF,KAAI,CAACD,SAAS,GAAGA,SAAS;;EAC5B;EAGUJ,aAAA,CAAAQ,SAAA,CAAAC,UAAU,GAApB,UAAqBC,UAA2B;IAC9C,IAAMC,OAAO,GAAqB,IAAI;IACtC,IAAMC,KAAK,GAAGD,OAAO,CAACE,kBAAkB,EAAE;IAC1C,IAAMC,YAAY,GAAG,IAAIlB,YAAY,EAAE;IACvCkB,YAAY,CAACC,GAAG,CACd,IAAInB,YAAY,CAAC;MACfe,OAAO,CAACK,oBAAoB,CAACJ,KAAK,CAAC;IACrC,CAAC,CAAC,CACH;IACDE,YAAY,CAACC,GAAG,CAACd,MAAA,CAAAO,SAAA,CAAMC,UAAU,CAAAH,IAAA,OAACI,UAAU,CAAC,CAAC;IAC9C,OAAOI,YAAY;EACrB,CAAC;EAEDd,aAAA,CAAAQ,SAAA,CAAAS,KAAK,GAAL;IACE,IAAMN,OAAO,GAAG,IAAI;IACpB,IAAMO,cAAc,GAAGP,OAAO,CAACR,QAAQ,CAACgB,MAAM;4BAErCC,CAAC;MACR,CAAC;QACO,IAAAC,EAAA,GAA0BV,OAAO,CAACR,QAAQ,CAACiB,CAAC,CAAC;UAA3CE,YAAY,GAAAD,EAAA,CAAAC,YAAA;UAAEC,KAAK,GAAAF,EAAA,CAAAE,KAAwB;QAEnDZ,OAAO,CAACP,SAAS,CAACoB,QAAQ,CAAC;UACzBzB,mBAAmB,CAACuB,YAAY,EAAEX,OAAO,CAAC;QAC5C,CAAC,EAAEY,KAAK,CAAC;MACX,CAAC,EAAC,CAAE;;IAPN,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,cAAc,EAAEE,CAAC,EAAE;cAA9BA,CAAC;;EASZ,CAAC;EACH,OAAApB,aAAC;AAAD,CAAC,CAzCqCL,OAAO;;AA0C7CG,WAAW,CAACE,aAAa,EAAE,CAACH,oBAAoB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}