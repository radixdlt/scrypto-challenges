{"ast":null,"code":"var _jsxFileName = \"/Users/mdabdurrazzak/RadInsu/src/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { RadixDappToolkit, RadixNetwork, DataRequestBuilder } from '@radixdlt/radix-dapp-toolkit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [rdt, setRdt] = useState(null);\n  const [loading, setLoading] = useState(true); // Add loading state\n\n  const loadAccount = async () => {\n    try {\n      const newAccount = await rdt.keyManager.createAccount();\n      if (newAccount) {\n        setAccount(newAccount);\n      }\n    } catch (error) {\n      console.error(\"Error loading account:\", error);\n    }\n  };\n  useEffect(() => {\n    const initializeToolkit = async () => {\n      try {\n        const newRdt = new RadixDappToolkit({\n          dAppDefinitionAddress: 'account_tdx_2_12xxk4dqhg9dz53p745qhpr5tr2k2al4mpx3296tr8k78kna6rkcgsz',\n          // Use your dApp definition address\n          networkId: RadixNetwork.Stokenet,\n          // Replace with the appropriate network ID\n          applicationName: 'Infix',\n          applicationVersion: '1.0.0'\n        });\n        setRdt(newRdt);\n        setLoading(false); // Update loading state when toolkit is initialized\n        console.log(\"Radix Dapp Toolkit initialized successfully\");\n      } catch (error) {\n        console.error('Error initializing Radix Dapp Toolkit:', error);\n      }\n    };\n    initializeToolkit();\n    return () => {\n      // Clean up if necessary\n    };\n  }, []);\n  useEffect(() => {\n    if (rdt) {\n      // Fetch the user's account address\n      rdt.walletApi.setRequestData(DataRequestBuilder.accounts().atLeast(1));\n      rdt.walletApi.walletData$.subscribe(walletData => {\n        console.log(\"subscription wallet data: \", walletData);\n        if (walletData.accounts.length > 0) {\n          setAccount(walletData.accounts[0].address);\n        }\n      });\n    }\n  }, [rdt]);\n  const handleConnectWallet = async () => {\n    try {\n      if (rdt) {\n        await rdt.account.connect();\n        loadAccount();\n      } else {\n        console.error(\"Radix Dapp Toolkit is not initialized.\");\n      }\n    } catch (error) {\n      console.error(\"Error connecting to Radix Wallet Connector:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aboutUs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome Back, Alex!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Wow! You spent 725 minutes with your favorite artist this year!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [!loading && !account && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"wallet-button\",\n          onClick: handleConnectWallet,\n          children: \"Connect Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 36\n        }, this), account && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Account Address: \", account]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Hello\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"f5+XxwCVc8TlZbQqaKLwPXxQGBk=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","RadixDappToolkit","RadixNetwork","DataRequestBuilder","jsxDEV","_jsxDEV","Profile","_s","account","setAccount","rdt","setRdt","loading","setLoading","loadAccount","newAccount","keyManager","createAccount","error","console","initializeToolkit","newRdt","dAppDefinitionAddress","networkId","Stokenet","applicationName","applicationVersion","log","walletApi","setRequestData","accounts","atLeast","walletData$","subscribe","walletData","length","address","handleConnectWallet","connect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/mdabdurrazzak/RadInsu/src/Profile.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { RadixDappToolkit, RadixNetwork, DataRequestBuilder } from '@radixdlt/radix-dapp-toolkit';\n\nconst Profile = () => {\n  const [account, setAccount] = useState(null);\n  const [rdt, setRdt] = useState(null);\n  const [loading, setLoading] = useState(true); // Add loading state\n\n  const loadAccount = async () => {\n    try {\n      const newAccount = await rdt.keyManager.createAccount();\n      if (newAccount) {\n        setAccount(newAccount);\n      }\n    } catch (error) {\n      console.error(\"Error loading account:\", error);\n    }\n  };\n\n  useEffect(() => {\n    const initializeToolkit = async () => {\n      try {\n        const newRdt = new RadixDappToolkit({\n          dAppDefinitionAddress: 'account_tdx_2_12xxk4dqhg9dz53p745qhpr5tr2k2al4mpx3296tr8k78kna6rkcgsz', // Use your dApp definition address\n          networkId: RadixNetwork.Stokenet, // Replace with the appropriate network ID\n          applicationName: 'Infix',\n          applicationVersion: '1.0.0',\n        });\n        setRdt(newRdt);\n        setLoading(false); // Update loading state when toolkit is initialized\n        console.log(\"Radix Dapp Toolkit initialized successfully\");\n      } catch (error) {\n        console.error('Error initializing Radix Dapp Toolkit:', error);\n      }\n    };\n\n    initializeToolkit();\n\n    return () => {\n      // Clean up if necessary\n    };\n  }, []);\n\n  useEffect(() => {\n    if (rdt) {\n      // Fetch the user's account address\n      rdt.walletApi.setRequestData(DataRequestBuilder.accounts().atLeast(1));\n      rdt.walletApi.walletData$.subscribe((walletData) => {\n        console.log(\"subscription wallet data: \", walletData);\n        if (walletData.accounts.length > 0) {\n          setAccount(walletData.accounts[0].address);\n        }\n      });\n    }\n  }, [rdt]);\n\n  const handleConnectWallet = async () => {\n    try {\n      if (rdt) {\n        await rdt.account.connect();\n        loadAccount();\n      } else {\n        console.error(\"Radix Dapp Toolkit is not initialized.\");\n      }\n    } catch (error) {\n      console.error(\"Error connecting to Radix Wallet Connector:\", error);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"aboutUs\">\n        <div className=\"welcome\">\n          <h2>Welcome Back, Alex!</h2>\n          <p>Wow! You spent 725 minutes with your favorite artist this year!</p>\n        </div>\n        <div className=\"button-container\">\n          {!loading && !account && <button className=\"wallet-button\" onClick={handleConnectWallet}>Connect Wallet</button>}\n          {account && (\n            <div>\n              <p>Account Address: {account}</p>\n              <p>Hello</p>\n            </div>\n           \n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}