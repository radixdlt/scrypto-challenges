{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar long_1 = tslib_1.__importDefault(require(\"long\"));\nvar bn_js_1 = tslib_1.__importDefault(require(\"bn.js\"));\nvar crypto_1 = tslib_1.__importDefault(require(\"crypto\"));\nfunction radixHash(data, offset, len) {\n  if (offset) {\n    data = data.slice(offset, len);\n  }\n  if (!Buffer.isBuffer(data)) {\n    data = Buffer.from(data);\n  }\n  // Double hash to protect against length extension attacks\n  var hash1 = crypto_1.default.createHash('sha256');\n  hash1.update(data);\n  var hash2 = crypto_1.default.createHash('sha256');\n  hash2.update(hash1.digest());\n  return hash2.digest();\n}\nexports.radixHash = radixHash;\nfunction bigIntFromByteArray(bytes) {\n  return new bn_js_1.default(bytes).fromTwos(bytes.length * 8);\n}\nexports.bigIntFromByteArray = bigIntFromByteArray;\nfunction byteArrayFromBigInt(num) {\n  // Compatibility with Java BigInteger.toByteArray() https://stackoverflow.com/a/24158695\n  var byteLength = Math.ceil((num.bitLength() + 1) / 8);\n  var result = num.toTwos(8 * byteLength).toArrayLike(Buffer);\n  if (result.length !== byteLength) {\n    var newResult = Buffer.alloc(byteLength, 0);\n    result.copy(newResult, byteLength - result.length);\n    return newResult;\n  }\n  return result;\n}\nexports.byteArrayFromBigInt = byteArrayFromBigInt;\nfunction longFromBigInt(num) {\n  // Emulate Java BigInteger.longValue(), following the spec at 5.1.3 https://docs.oracle.com/javase/specs/jls/se7/html/jls-5.html\n  var byteLength = Math.max(8, num.byteLength());\n  var bytes = num.toTwos(8 * byteLength).toArray('be', byteLength);\n  var truncatedBytes = bytes.slice(bytes.length - 8, bytes.length);\n  return long_1.default.fromBytesBE(truncatedBytes);\n}\nexports.longFromBigInt = longFromBigInt;\nfunction bigIntFromLong(num) {\n  return new bn_js_1.default(num.toBytesBE(), 'be').fromTwos(64);\n}\nexports.bigIntFromLong = bigIntFromLong;\nfunction powTargetFromAtomSize(size) {\n  var target = Buffer.alloc(32, 0xff);\n  var leadingBits = Math.ceil(Math.log(size * 8));\n  var leadingBytes = Math.floor(leadingBits / 8);\n  var leftOverBits = leadingBits % 8;\n  target.fill(0, 0, leadingBytes);\n  var middleByte = ~(0xff << 8 - leftOverBits) & 0xff;\n  target.writeUInt8(middleByte, leadingBytes);\n  return target;\n}\nexports.powTargetFromAtomSize = powTargetFromAtomSize;\nfunction shuffleArray(arr) {\n  return arr.map(function (a) {\n    return [Math.random(), a];\n  }).sort(function (a, b) {\n    return a[0] - b[0];\n  }).map(function (a) {\n    return a[1];\n  });\n}\nexports.shuffleArray = shuffleArray;\nfunction isEmpty(val) {\n  return val === undefined || val === null || val.length === 0 || Object.keys(val).length === 0 && val.constructor === Object;\n}\nexports.isEmpty = isEmpty;","map":{"version":3,"names":["long_1","tslib_1","__importDefault","require","bn_js_1","crypto_1","radixHash","data","offset","len","slice","Buffer","isBuffer","from","hash1","default","createHash","update","hash2","digest","exports","bigIntFromByteArray","bytes","fromTwos","length","byteArrayFromBigInt","num","byteLength","Math","ceil","bitLength","result","toTwos","toArrayLike","newResult","alloc","copy","longFromBigInt","max","toArray","truncatedBytes","fromBytesBE","bigIntFromLong","toBytesBE","powTargetFromAtomSize","size","target","leadingBits","log","leadingBytes","floor","leftOverBits","fill","middleByte","writeUInt8","shuffleArray","arr","map","a","random","sort","b","isEmpty","val","undefined","Object","keys","constructor"],"sources":["../../../../src/modules/common/RadixUtil.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}