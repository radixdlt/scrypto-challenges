{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AddressTypeT = void 0;\nvar AddressTypeT;\n(function (AddressTypeT) {\n  AddressTypeT[\"VALIDATOR\"] = \"VALIDATOR_ADDRESS\";\n  AddressTypeT[\"ACCOUNT\"] = \"ACCOUNT_ADDRESS\";\n})(AddressTypeT = exports.AddressTypeT || (exports.AddressTypeT = {}));","map":{"version":3,"names":["AddressTypeT","exports"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/@radixdlt/account/src/addresses/_types.ts"],"sourcesContent":["import { PublicKeyT } from '@radixdlt/crypto'\nimport { Network } from '@radixdlt/primitives'\n\nexport type ResourceIdentifierT = Readonly<{\n\thash: Buffer\n\t__witness: 'isRRI'\n\tnetwork: Network\n\tname: string\n\ttoString: () => string\n\tequals: (other: ResourceIdentifierT) => boolean\n}>\n\nexport enum AddressTypeT {\n\tVALIDATOR = 'VALIDATOR_ADDRESS',\n\tACCOUNT = 'ACCOUNT_ADDRESS',\n}\n\nexport type AbstractAddressT = Readonly<{\n\taddressType: AddressTypeT\n\tnetwork: Network\n\tpublicKey: PublicKeyT\n\ttoString: () => string\n\tequals: (other: AbstractAddressT) => boolean\n}>\n\nexport type AccountAddressT = AbstractAddressT &\n\tReadonly<{\n\t\taddressType: AddressTypeT.ACCOUNT\n\t\tequals: (other: AccountAddressT) => boolean\n\t}>\n\nexport type ValidatorAddressT = AbstractAddressT &\n\tReadonly<{\n\t\taddressType: AddressTypeT.VALIDATOR\n\t\tequals: (other: ValidatorAddressT) => boolean\n\t}>\n"],"mappings":";;;;;;AAYA,IAAYA,YAGX;AAHD,WAAYA,YAAY;EACvBA,YAAA,mCAA+B;EAC/BA,YAAA,+BAA2B;AAC5B,CAAC,EAHWA,YAAY,GAAZC,OAAA,CAAAD,YAAY,KAAZC,OAAA,CAAAD,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}