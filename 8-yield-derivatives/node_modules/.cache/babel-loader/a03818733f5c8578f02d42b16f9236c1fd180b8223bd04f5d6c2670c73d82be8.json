{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n/**\n * @hidden\n */\nexports.inspect = Symbol[\"for\"](\"nodejs.util.inspect.custom\");","map":{"version":3,"names":["exports","inspect","Symbol"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/prelude-ts/src/Value.ts"],"sourcesContent":["import { WithEquality } from \"./Comparison\";\n\nimport * as util from 'util';\n\n/**\n * @hidden\n */\nexport const inspect = Symbol.for(\"nodejs.util.inspect.custom\");\n\nexport interface Value {\n\n    /**\n     * Two objects are equal if they represent the same value,\n     * regardless of whether they are the same object physically\n     * in memory.\n     */\n    equals(other: any&WithEquality /*TODO*/): boolean; // I experimented with 'this' for the other type but had issues with interfaces\n\n    /**\n     * Get a number for that object. Two different values\n     * may get the same number, but one value must always get\n     * the same number. The formula can impact performance.\n     */\n    hashCode(): number;\n\n    /**\n     * Get a human-friendly string representation of that value.\n     */\n    toString(): string;\n\n    /**\n     * Used by the node REPL to display values.\n     * Most of the time should be the same as toString()\n     */\n    [inspect](): string;\n}\n"],"mappings":";;;AAIA;;;AAGaA,OAAA,CAAAC,OAAO,GAAGC,MAAM,CAAC,KAAG,EAAC,4BAA4B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}