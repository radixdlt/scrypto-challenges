{"ast":null,"code":"'use strict';\n\nvar metaSchema = require('./refs/json-schema-draft-07.json');\nmodule.exports = {\n  $id: 'https://github.com/ajv-validator/ajv/blob/master/lib/definition_schema.js',\n  definitions: {\n    simpleTypes: metaSchema.definitions.simpleTypes\n  },\n  type: 'object',\n  dependencies: {\n    schema: ['validate'],\n    $data: ['validate'],\n    statements: ['inline'],\n    valid: {\n      not: {\n        required: ['macro']\n      }\n    }\n  },\n  properties: {\n    type: metaSchema.properties.type,\n    schema: {\n      type: 'boolean'\n    },\n    statements: {\n      type: 'boolean'\n    },\n    dependencies: {\n      type: 'array',\n      items: {\n        type: 'string'\n      }\n    },\n    metaSchema: {\n      type: 'object'\n    },\n    modifying: {\n      type: 'boolean'\n    },\n    valid: {\n      type: 'boolean'\n    },\n    $data: {\n      type: 'boolean'\n    },\n    async: {\n      type: 'boolean'\n    },\n    errors: {\n      anyOf: [{\n        type: 'boolean'\n      }, {\n        const: 'full'\n      }]\n    }\n  }\n};","map":{"version":3,"names":["metaSchema","require","module","exports","$id","definitions","simpleTypes","type","dependencies","schema","$data","statements","valid","not","required","properties","items","modifying","async","errors","anyOf","const"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/ajv/lib/definition_schema.js"],"sourcesContent":["'use strict';\n\nvar metaSchema = require('./refs/json-schema-draft-07.json');\n\nmodule.exports = {\n  $id: 'https://github.com/ajv-validator/ajv/blob/master/lib/definition_schema.js',\n  definitions: {\n    simpleTypes: metaSchema.definitions.simpleTypes\n  },\n  type: 'object',\n  dependencies: {\n    schema: ['validate'],\n    $data: ['validate'],\n    statements: ['inline'],\n    valid: {not: {required: ['macro']}}\n  },\n  properties: {\n    type: metaSchema.properties.type,\n    schema: {type: 'boolean'},\n    statements: {type: 'boolean'},\n    dependencies: {\n      type: 'array',\n      items: {type: 'string'}\n    },\n    metaSchema: {type: 'object'},\n    modifying: {type: 'boolean'},\n    valid: {type: 'boolean'},\n    $data: {type: 'boolean'},\n    async: {type: 'boolean'},\n    errors: {\n      anyOf: [\n        {type: 'boolean'},\n        {const: 'full'}\n      ]\n    }\n  }\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,kCAAkC,CAAC;AAE5DC,MAAM,CAACC,OAAO,GAAG;EACfC,GAAG,EAAE,2EAA2E;EAChFC,WAAW,EAAE;IACXC,WAAW,EAAEN,UAAU,CAACK,WAAW,CAACC;EACtC,CAAC;EACDC,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,MAAM,EAAE,CAAC,UAAU,CAAC;IACpBC,KAAK,EAAE,CAAC,UAAU,CAAC;IACnBC,UAAU,EAAE,CAAC,QAAQ,CAAC;IACtBC,KAAK,EAAE;MAACC,GAAG,EAAE;QAACC,QAAQ,EAAE,CAAC,OAAO;MAAC;IAAC;EACpC,CAAC;EACDC,UAAU,EAAE;IACVR,IAAI,EAAEP,UAAU,CAACe,UAAU,CAACR,IAAI;IAChCE,MAAM,EAAE;MAACF,IAAI,EAAE;IAAS,CAAC;IACzBI,UAAU,EAAE;MAACJ,IAAI,EAAE;IAAS,CAAC;IAC7BC,YAAY,EAAE;MACZD,IAAI,EAAE,OAAO;MACbS,KAAK,EAAE;QAACT,IAAI,EAAE;MAAQ;IACxB,CAAC;IACDP,UAAU,EAAE;MAACO,IAAI,EAAE;IAAQ,CAAC;IAC5BU,SAAS,EAAE;MAACV,IAAI,EAAE;IAAS,CAAC;IAC5BK,KAAK,EAAE;MAACL,IAAI,EAAE;IAAS,CAAC;IACxBG,KAAK,EAAE;MAACH,IAAI,EAAE;IAAS,CAAC;IACxBW,KAAK,EAAE;MAACX,IAAI,EAAE;IAAS,CAAC;IACxBY,MAAM,EAAE;MACNC,KAAK,EAAE,CACL;QAACb,IAAI,EAAE;MAAS,CAAC,EACjB;QAACc,KAAK,EAAE;MAAM,CAAC;IAEnB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}