{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sha256Twice = exports.sha256 = void 0;\nconst hash_js_1 = require(\"hash.js\");\nconst toBuffer = input => typeof input === 'string' ? Buffer.from(input, 'utf-8') : input;\nconst sha256 = input => Buffer.from((0, hash_js_1.sha256)().update(toBuffer(input)).digest());\nexports.sha256 = sha256;\nconst sha256Twice = input => (0, exports.sha256)((0, exports.sha256)(toBuffer(input)));\nexports.sha256Twice = sha256Twice;","map":{"version":3,"names":["Object","defineProperty","exports","value","sha256Twice","sha256","hash_js_1","require","toBuffer","input","Buffer","from","update","digest"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/@radixdlt/crypto/dist/hash/sha.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha256Twice = exports.sha256 = void 0;\nconst hash_js_1 = require(\"hash.js\");\nconst toBuffer = (input) => typeof input === 'string' ? Buffer.from(input, 'utf-8') : input;\nconst sha256 = (input) => Buffer.from((0, hash_js_1.sha256)().update(toBuffer(input)).digest());\nexports.sha256 = sha256;\nconst sha256Twice = (input) => (0, exports.sha256)((0, exports.sha256)(toBuffer(input)));\nexports.sha256Twice = sha256Twice;\n//# sourceMappingURL=sha.js.map"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,WAAW,GAAGF,OAAO,CAACG,MAAM,GAAG,KAAK,CAAC;AAC7C,MAAMC,SAAS,GAAGC,OAAO,CAAC,SAAS,CAAC;AACpC,MAAMC,QAAQ,GAAIC,KAAK,IAAK,OAAOA,KAAK,KAAK,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACF,KAAK,EAAE,OAAO,CAAC,GAAGA,KAAK;AAC3F,MAAMJ,MAAM,GAAII,KAAK,IAAKC,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,EAAEL,SAAS,CAACD,MAAM,EAAE,CAAC,CAACO,MAAM,CAACJ,QAAQ,CAACC,KAAK,CAAC,CAAC,CAACI,MAAM,CAAC,CAAC,CAAC;AAC/FX,OAAO,CAACG,MAAM,GAAGA,MAAM;AACvB,MAAMD,WAAW,GAAIK,KAAK,IAAK,CAAC,CAAC,EAAEP,OAAO,CAACG,MAAM,EAAE,CAAC,CAAC,EAAEH,OAAO,CAACG,MAAM,EAAEG,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC;AACxFP,OAAO,CAACE,WAAW,GAAGA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}