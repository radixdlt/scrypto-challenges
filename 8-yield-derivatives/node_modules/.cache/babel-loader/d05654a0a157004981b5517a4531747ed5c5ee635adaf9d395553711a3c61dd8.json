{"ast":null,"code":"/**\n * @module 101/not\n */\n\nvar isFunction = require('./is-function');\n\n/**\n * Functional version of !\n * @function module:101/not\n * @param {*} val - value to inverse\n * @return {function} - function whose arguments and context are applied to fn and result is inversed\n */\nmodule.exports = not;\nfunction not(val) {\n  if (isFunction(val)) {\n    return function /* args */\n    () {\n      return not(val.apply(this, arguments));\n    };\n  } else {\n    return !val;\n  }\n}","map":{"version":3,"names":["isFunction","require","module","exports","not","val","apply","arguments"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/101/not.js"],"sourcesContent":["/**\n * @module 101/not\n */\n\nvar isFunction = require('./is-function');\n\n/**\n * Functional version of !\n * @function module:101/not\n * @param {*} val - value to inverse\n * @return {function} - function whose arguments and context are applied to fn and result is inversed\n */\nmodule.exports = not;\n\nfunction not (val) {\n  if (isFunction(val)) {\n    return function (/* args */) {\n      return not(val.apply(this, arguments));\n    };\n  }\n  else {\n    return !val;\n  }\n}"],"mappings":"AAAA;AACA;AACA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,eAAe,CAAC;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAGC,GAAG;AAEpB,SAASA,GAAGA,CAAEC,GAAG,EAAE;EACjB,IAAIL,UAAU,CAACK,GAAG,CAAC,EAAE;IACnB,OAAO,SAAU;IAAA,GAAY;MAC3B,OAAOD,GAAG,CAACC,GAAG,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,CAAC;IACxC,CAAC;EACH,CAAC,MACI;IACH,OAAO,CAACF,GAAG;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}