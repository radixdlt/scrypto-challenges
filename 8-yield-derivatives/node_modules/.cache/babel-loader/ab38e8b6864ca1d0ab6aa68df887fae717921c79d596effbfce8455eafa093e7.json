{"ast":null,"code":"var _jsxFileName = \"/Users/mdabdurrazzak/RadInsu/src/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { SmartContract } from 'your-smart-contract-library'; // Import your smart contract library\nimport { RadixDappToolkit, RadixNetwork } from '@radixdlt/radix-dapp-toolkit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // State variables for insurance contract parameters and interaction\n  const [insuredDomain, setInsuredDomain] = useState('');\n  const [premiumAmount, setPremiumAmount] = useState('');\n  const [payoutAmount, setPayoutAmount] = useState('');\n  const [riskLevel, setRiskLevel] = useState('');\n  const [contractInstance, setContractInstance] = useState(null);\n  const [claimStatus, setClaimStatus] = useState('');\n\n  // State variables for Radix Dapp Toolkit\n  const [rdt, setRdt] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Function to create a new insurance contract\n  const createInsuranceContract = async () => {\n    try {\n      const newContractInstance = await SmartContract.createInsuranceContract(insuredDomain, premiumAmount, payoutAmount, riskLevel);\n      setContractInstance(newContractInstance);\n    } catch (error) {\n      console.error('Error creating insurance contract:', error);\n    }\n  };\n\n  // Function to check if the contract has been claimed\n  const checkClaimStatus = async () => {\n    try {\n      const isClaimed = await contractInstance.isClaimed();\n      setClaimStatus(isClaimed ? 'Claim has been made' : 'No claim has been made');\n    } catch (error) {\n      console.error('Error checking claim status:', error);\n    }\n  };\n\n  // Function to initiate a claim on the contract\n  const initiateClaim = async () => {\n    try {\n      const payout = await contractInstance.makeClaim();\n      console.log('Claim successful. Payout:', payout);\n    } catch (error) {\n      console.error('Error initiating claim:', error);\n    }\n  };\n\n  // Function to connect to Radix Wallet\n  const handleConnectWallet = async () => {\n    try {\n      const dAppId = 'account_tdx_2_12xxk4dqhg9dz53p745qhpr5tr2k2al4mpx3296tr8k78kna6rkcgsz';\n      const newRdt = RadixDappToolkit({\n        dAppDefinitionAddress: dAppId,\n        networkId: RadixNetwork.Stokenet,\n        applicationName: 'Infinx',\n        applicationVersion: '1.0.0'\n      });\n      setRdt(newRdt);\n      setLoading(false);\n      console.log('Connected to wallet successfully');\n    } catch (error) {\n      console.error('Error connecting to Radix Wallet Connector:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Parametric Insurance Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Insured Domain:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: insuredDomain,\n        onChange: e => setInsuredDomain(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Premium Amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: premiumAmount,\n        onChange: e => setPremiumAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Payout Amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: payoutAmount,\n        onChange: e => setPayoutAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Risk Level:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: riskLevel,\n        onChange: e => setRiskLevel(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createInsuranceContract,\n      children: \"Create Insurance Contract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: checkClaimStatus,\n      children: \"Check Claim Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: initiateClaim,\n      children: \"Initiate Claim\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: claimStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConnectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"H6zr0aJYnfUPQSDO+uKhOEmNsL4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SmartContract","RadixDappToolkit","RadixNetwork","jsxDEV","_jsxDEV","App","_s","insuredDomain","setInsuredDomain","premiumAmount","setPremiumAmount","payoutAmount","setPayoutAmount","riskLevel","setRiskLevel","contractInstance","setContractInstance","claimStatus","setClaimStatus","rdt","setRdt","loading","setLoading","createInsuranceContract","newContractInstance","error","console","checkClaimStatus","isClaimed","initiateClaim","payout","makeClaim","log","handleConnectWallet","dAppId","newRdt","dAppDefinitionAddress","networkId","Stokenet","applicationName","applicationVersion","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/mdabdurrazzak/RadInsu/src/Profile.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { SmartContract } from 'your-smart-contract-library'; // Import your smart contract library\nimport { RadixDappToolkit, RadixNetwork } from '@radixdlt/radix-dapp-toolkit';\n\nconst App = () => {\n  // State variables for insurance contract parameters and interaction\n  const [insuredDomain, setInsuredDomain] = useState('');\n  const [premiumAmount, setPremiumAmount] = useState('');\n  const [payoutAmount, setPayoutAmount] = useState('');\n  const [riskLevel, setRiskLevel] = useState('');\n  const [contractInstance, setContractInstance] = useState(null);\n  const [claimStatus, setClaimStatus] = useState('');\n\n  // State variables for Radix Dapp Toolkit\n  const [rdt, setRdt] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Function to create a new insurance contract\n  const createInsuranceContract = async () => {\n    try {\n      const newContractInstance = await SmartContract.createInsuranceContract(insuredDomain, premiumAmount, payoutAmount, riskLevel);\n      setContractInstance(newContractInstance);\n    } catch (error) {\n      console.error('Error creating insurance contract:', error);\n    }\n  };\n\n  // Function to check if the contract has been claimed\n  const checkClaimStatus = async () => {\n    try {\n      const isClaimed = await contractInstance.isClaimed();\n      setClaimStatus(isClaimed ? 'Claim has been made' : 'No claim has been made');\n    } catch (error) {\n      console.error('Error checking claim status:', error);\n    }\n  };\n\n  // Function to initiate a claim on the contract\n  const initiateClaim = async () => {\n    try {\n      const payout = await contractInstance.makeClaim();\n      console.log('Claim successful. Payout:', payout);\n    } catch (error) {\n      console.error('Error initiating claim:', error);\n    }\n  };\n\n  // Function to connect to Radix Wallet\n  const handleConnectWallet = async () => {\n    try {\n      const dAppId = 'account_tdx_2_12xxk4dqhg9dz53p745qhpr5tr2k2al4mpx3296tr8k78kna6rkcgsz';\n      const newRdt = RadixDappToolkit({\n        dAppDefinitionAddress: dAppId,\n        networkId: RadixNetwork.Stokenet,\n        applicationName: 'Infinx',\n        applicationVersion: '1.0.0',\n      });\n      setRdt(newRdt);\n      setLoading(false);\n      console.log('Connected to wallet successfully');\n    } catch (error) {\n      console.error('Error connecting to Radix Wallet Connector:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Parametric Insurance Application</h1>\n      <div>\n        <label>Insured Domain:</label>\n        <input type=\"text\" value={insuredDomain} onChange={(e) => setInsuredDomain(e.target.value)} />\n      </div>\n      <div>\n        <label>Premium Amount:</label>\n        <input type=\"number\" value={premiumAmount} onChange={(e) => setPremiumAmount(e.target.value)} />\n      </div>\n      <div>\n        <label>Payout Amount:</label>\n        <input type=\"number\" value={payoutAmount} onChange={(e) => setPayoutAmount(e.target.value)} />\n      </div>\n      <div>\n        <label>Risk Level:</label>\n        <input type=\"number\" value={riskLevel} onChange={(e) => setRiskLevel(e.target.value)} />\n      </div>\n      <button onClick={createInsuranceContract}>Create Insurance Contract</button>\n      <button onClick={checkClaimStatus}>Check Claim Status</button>\n      <button onClick={initiateClaim}>Initiate Claim</button>\n      <div>{claimStatus}</div>\n\n      <hr />\n\n      <button onClick={handleConnectWallet}>Connect Wallet</button>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}