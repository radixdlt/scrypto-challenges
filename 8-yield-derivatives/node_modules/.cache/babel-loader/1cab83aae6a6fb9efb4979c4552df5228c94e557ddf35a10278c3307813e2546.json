{"ast":null,"code":"'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\nvar defaults = {\n  adapter: getDefaultAdapter(),\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) {/* Ignore */}\n    }\n    return data;\n  }],\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n  maxContentLength: -1,\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\nmodule.exports = defaults;","map":{"version":3,"names":["utils","require","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","headers","value","isUndefined","getDefaultAdapter","adapter","XMLHttpRequest","process","defaults","transformRequest","data","isFormData","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","toString","isObject","JSON","stringify","transformResponse","parse","e","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","common","forEach","forEachMethodNoData","method","forEachMethodWithData","merge","module","exports"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/radixdlt/node_modules/axios/lib/defaults.js"],"sourcesContent":["'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}