{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Signature = void 0;\nconst tslib_1 = require(\"tslib\");\nconst neverthrow_1 = require(\"neverthrow\");\nconst uint256_1 = require(\"@radixdlt/uint256\");\nconst primitives_1 = require(\"@radixdlt/primitives\");\nconst bn_js_1 = (0, tslib_1.__importDefault)(require(\"bn.js\"));\n// @ts-ignore\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst __js_DER = require('./indutnyEllipticImportDER');\nconst __fromRSAndDER = input => {\n  const {\n    r,\n    s,\n    der\n  } = input;\n  return {\n    r,\n    s,\n    toDER: () => der,\n    equals: other => other.toDER() === der\n  };\n};\nconst fromIndutnyElliptic = ellipticSignature => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const derUnknown = ellipticSignature.toDER('hex');\n  if (!derUnknown || typeof derUnknown !== 'string') {\n    throw new Error('Incorrect implementation, should always be able to format DER from signature.');\n  }\n  const der = derUnknown;\n  return (0, neverthrow_1.combine)([(0, primitives_1.uint256FromBN)(ellipticSignature.r), (0, primitives_1.uint256FromBN)(ellipticSignature.s)]).map(resultList => {\n    const r = resultList[0];\n    const s = resultList[1];\n    return __fromRSAndDER({\n      r,\n      s,\n      der\n    });\n  });\n};\nconst fromRSBuffer = buffer => {\n  const expectedLength = 64;\n  if (buffer.length !== expectedLength) {\n    return (0, neverthrow_1.err)(new Error(\"Incorrect length of signature buffer (R||S), expected #\".concat(expectedLength, \" bytes, but got #\").concat(buffer.length, \".\")));\n  }\n  const rHex = buffer.slice(0, 32).toString('hex');\n  const r = new uint256_1.UInt256(rHex, 16);\n  const sHex = buffer.slice(32, 64).toString('hex');\n  const s = new uint256_1.UInt256(sHex, 16);\n  /* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access */\n  const der = __js_DER.__js_toDER(new bn_js_1.default(rHex, 16), new bn_js_1.default(sHex, 16), 'hex');\n  return (0, neverthrow_1.ok)(__fromRSAndDER({\n    r,\n    s,\n    der\n  }));\n  /* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access */\n};\nconst fromDER = buffer => {\n  const dataHex = typeof buffer === 'string' ? buffer : buffer.toString('hex');\n  /* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access */\n  const importedDER = __js_DER.__js_importDER(dataHex, 'hex');\n  if (!importedDER) {\n    return (0, neverthrow_1.err)(new Error('Failed to import DER'));\n  }\n  return (0, neverthrow_1.ok)(__fromRSAndDER({\n    r: importedDER.r,\n    s: importedDER.s,\n    der: buffer.toString('hex')\n  }));\n  /* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access */\n};\nexports.Signature = {\n  fromDER,\n  fromRSBuffer,\n  fromIndutnyElliptic\n};","map":{"version":3,"names":["neverthrow_1","require","uint256_1","primitives_1","bn_js_1","tslib_1","__importDefault","__js_DER","__fromRSAndDER","input","r","s","der","toDER","equals","other","fromIndutnyElliptic","ellipticSignature","derUnknown","Error","combine","uint256FromBN","map","resultList","fromRSBuffer","buffer","expectedLength","length","err","concat","rHex","slice","toString","UInt256","sHex","__js_toDER","default","ok","fromDER","dataHex","importedDER","__js_importDER","exports","Signature"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/@radixdlt/crypto/src/elliptic-curve/signature.ts"],"sourcesContent":["import { SignatureT } from './_types'\nimport { combine, err, ok, Result } from 'neverthrow'\nimport { UInt256 } from '@radixdlt/uint256'\nimport { ec } from 'elliptic'\nimport { uint256FromBN } from '@radixdlt/primitives'\nimport BN from 'bn.js'\n\n// @ts-ignore\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst __js_DER = require('./indutnyEllipticImportDER')\n\nconst __fromRSAndDER = (\n\tinput: Readonly<{\n\t\tr: UInt256\n\t\ts: UInt256\n\t\tder: string\n\t}>,\n): SignatureT => {\n\tconst { r, s, der } = input\n\treturn {\n\t\tr,\n\t\ts,\n\t\ttoDER: () => der,\n\t\tequals: (other: SignatureT): boolean => other.toDER() === der,\n\t}\n}\n\nconst fromIndutnyElliptic = (\n\tellipticSignature: ec.Signature,\n): Result<SignatureT, Error> => {\n\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\tconst derUnknown = ellipticSignature.toDER('hex')\n\tif (!derUnknown || typeof derUnknown !== 'string') {\n\t\tthrow new Error(\n\t\t\t'Incorrect implementation, should always be able to format DER from signature.',\n\t\t)\n\t}\n\tconst der: string = derUnknown\n\n\treturn combine([\n\t\tuint256FromBN(ellipticSignature.r),\n\t\tuint256FromBN(ellipticSignature.s),\n\t]).map(resultList => {\n\t\tconst r = resultList[0]\n\t\tconst s = resultList[1]\n\t\treturn __fromRSAndDER({ r, s, der })\n\t})\n}\n\nconst fromRSBuffer = (buffer: Buffer): Result<SignatureT, Error> => {\n\tconst expectedLength = 64\n\tif (buffer.length !== expectedLength) {\n\t\treturn err(\n\t\t\tnew Error(\n\t\t\t\t`Incorrect length of signature buffer (R||S), expected #${expectedLength} bytes, but got #${buffer.length}.`,\n\t\t\t),\n\t\t)\n\t}\n\n\tconst rHex = buffer.slice(0, 32).toString('hex')\n\tconst r = new UInt256(rHex, 16)\n\tconst sHex = buffer.slice(32, 64).toString('hex')\n\tconst s = new UInt256(sHex, 16)\n\t/* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access */\n\tconst der = __js_DER.__js_toDER(new BN(rHex, 16), new BN(sHex, 16), 'hex')\n\treturn ok(\n\t\t__fromRSAndDER({\n\t\t\tr,\n\t\t\ts,\n\t\t\tder,\n\t\t}),\n\t)\n\t/* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access */\n}\n\nconst fromDER = (buffer: Buffer | string): Result<SignatureT, Error> => {\n\tconst dataHex = typeof buffer === 'string' ? buffer : buffer.toString('hex')\n\t/* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access */\n\tconst importedDER = __js_DER.__js_importDER(dataHex, 'hex')\n\tif (!importedDER) {\n\t\treturn err(new Error('Failed to import DER'))\n\t}\n\treturn ok(\n\t\t__fromRSAndDER({\n\t\t\tr: importedDER.r,\n\t\t\ts: importedDER.s,\n\t\t\tder: buffer.toString('hex'),\n\t\t}),\n\t)\n\t/* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access */\n}\n\nexport const Signature = {\n\tfromDER,\n\tfromRSBuffer,\n\tfromIndutnyElliptic,\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}