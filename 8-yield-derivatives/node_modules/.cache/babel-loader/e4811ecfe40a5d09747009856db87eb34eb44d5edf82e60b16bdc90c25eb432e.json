{"ast":null,"code":"var _jsxFileName = \"/Users/mdabdurrazzak/RadInsu/src/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { RadixDappToolkit, RadixNetwork } from '@radixdlt/radix-dapp-toolkit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [rdt, setRdt] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const handleConnectWallet = async () => {\n    try {\n      const dAppId = 'account_tdx_2_12xxk4dqhg9dz53p745qhpr5tr2k2al4mpx3296tr8k78kna6rkcgsz';\n      const newRdt = RadixDappToolkit({\n        dAppDefinitionAddress: dAppId,\n        networkId: RadixNetwork.Stokenet,\n        applicationName: 'Infinx',\n        applicationVersion: '1.0.0'\n      });\n      setRdt(newRdt);\n      setLoading(false);\n      console.log('Connected to wallet successfully');\n    } catch (error) {\n      console.error('Error connecting to Radix Wallet Connector:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aboutUs\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: !loading && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"wallet-button\",\n          onClick: handleConnectWallet,\n          children: \"Connect Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"fkqJf8RJJsOZowQ0xKYdIlL4BpE=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","RadixDappToolkit","RadixNetwork","jsxDEV","_jsxDEV","Profile","_s","rdt","setRdt","loading","setLoading","handleConnectWallet","dAppId","newRdt","dAppDefinitionAddress","networkId","Stokenet","applicationName","applicationVersion","console","log","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mdabdurrazzak/RadInsu/src/Profile.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { RadixDappToolkit, RadixNetwork } from '@radixdlt/radix-dapp-toolkit';\n\nconst Profile = () => {\n  const [rdt, setRdt] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const handleConnectWallet = async () => {\n    try {\n      const dAppId = 'account_tdx_2_12xxk4dqhg9dz53p745qhpr5tr2k2al4mpx3296tr8k78kna6rkcgsz';\n      const newRdt = RadixDappToolkit({\n        dAppDefinitionAddress: dAppId,\n        networkId: RadixNetwork.Stokenet,\n        applicationName: 'Infinx',\n        applicationVersion: '1.0.0',\n      });\n      setRdt(newRdt);\n      setLoading(false);\n      console.log('Connected to wallet successfully');\n    } catch (error) {\n      console.error('Error connecting to Radix Wallet Connector:', error);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"aboutUs\">\n        <div className=\"button-container\">\n          {!loading && (\n            <button className=\"wallet-button\" onClick={handleConnectWallet}>Connect Wallet</button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,gBAAgB,EAAEC,YAAY,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMW,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAMC,MAAM,GAAG,uEAAuE;MACtF,MAAMC,MAAM,GAAGZ,gBAAgB,CAAC;QAC9Ba,qBAAqB,EAAEF,MAAM;QAC7BG,SAAS,EAAEb,YAAY,CAACc,QAAQ;QAChCC,eAAe,EAAE,QAAQ;QACzBC,kBAAkB,EAAE;MACtB,CAAC,CAAC;MACFV,MAAM,CAACK,MAAM,CAAC;MACdH,UAAU,CAAC,KAAK,CAAC;MACjBS,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IACjD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;IACrE;EACF,CAAC;EAED,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBnB,OAAA;MAAKkB,SAAS,EAAC,SAAS;MAAAC,QAAA,eACtBnB,OAAA;QAAKkB,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAC9B,CAACd,OAAO,iBACPL,OAAA;UAAQkB,SAAS,EAAC,eAAe;UAACE,OAAO,EAAEb,mBAAoB;UAAAY,QAAA,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MACvF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CAhCID,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AAkCb,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}