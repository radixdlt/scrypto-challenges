{"ast":null,"code":"/** PURE_IMPORTS_START _InnerSubscriber,_subscribeTo,_Observable PURE_IMPORTS_END */\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeTo } from './subscribeTo';\nimport { Observable } from '../Observable';\nexport function subscribeToResult(outerSubscriber, result, outerValue, outerIndex, innerSubscriber) {\n  if (innerSubscriber === void 0) {\n    innerSubscriber = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n  }\n  if (innerSubscriber.closed) {\n    return undefined;\n  }\n  if (result instanceof Observable) {\n    return result.subscribe(innerSubscriber);\n  }\n  return subscribeTo(result)(innerSubscriber);\n}","map":{"version":3,"names":["InnerSubscriber","subscribeTo","Observable","subscribeToResult","outerSubscriber","result","outerValue","outerIndex","innerSubscriber","closed","undefined","subscribe"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/radixdlt/node_modules/rxjs/src/internal/util/subscribeToResult.ts"],"sourcesContent":["import { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Subscriber } from '../Subscriber';\nimport { subscribeTo } from './subscribeTo';\nimport { Observable } from '../Observable';\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue: undefined,\n  outerIndex: undefined,\n  innerSubscriber: InnerSubscriber<T, R>\n): Subscription | undefined;\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number\n): Subscription | undefined;\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number,\n  innerSubscriber: Subscriber<R> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex)\n): Subscription | undefined {\n  if (innerSubscriber.closed) {\n    return undefined;\n  }\n  if (result instanceof Observable) {\n    return result.subscribe(innerSubscriber);\n  }\n  return subscribeTo(result)(innerSubscriber) as Subscription;\n}\n"],"mappings":"AACA;AAGA,SAASA,eAAa,QAAM,oBAAgB;AAC5C,SAASC,WAAU,QAAQ,eAAgB;AAiB3C,SAAMC,UAAU,uBACd;OAIA,SAAAC,kBAAAC,eAAA,EAAAC,MAAA,EAAAC,UAAqC,EAAAC,UAAgB,EAAAC,eAAiB;EAEtE,IAAIA,eAAe,KAAC,KAAQ;IAC1BA,eAAO,GAAU,IAAAR,eAAA,CAAAI,eAAA,EAAAE,UAAA,EAAAC,UAAA;;EAEnB,IAAIC,eAAM,CAAAC,MAAY;IACpB,OAAOC,SAAO;;EAEhB,IAAAL,MAAO,YAAYH,UAAQ;IAC5B,OAAAG,MAAA,CAAAM,SAAA,CAAAH,eAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}