{"ast":null,"code":"'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : undefined;\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};","map":{"version":3,"names":["utils","require","settle","buildURL","parseHeaders","isURLSameOrigin","createError","module","exports","xhrAdapter","config","Promise","dispatchXhrRequest","resolve","reject","requestData","data","requestHeaders","headers","isFormData","request","XMLHttpRequest","auth","username","password","Authorization","btoa","open","method","toUpperCase","url","params","paramsSerializer","timeout","onreadystatechange","handleLoad","readyState","status","responseURL","indexOf","responseHeaders","getAllResponseHeaders","responseData","responseType","responseText","response","statusText","onerror","handleError","ontimeout","handleTimeout","isStandardBrowserEnv","cookies","xsrfValue","withCredentials","xsrfCookieName","read","undefined","xsrfHeaderName","forEach","setRequestHeader","val","key","toLowerCase","e","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","onCanceled","cancel","abort","send"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/radixdlt/node_modules/axios/lib/adapters/xhr.js"],"sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}