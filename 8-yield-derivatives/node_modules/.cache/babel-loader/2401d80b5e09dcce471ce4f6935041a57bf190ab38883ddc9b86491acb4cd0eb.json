{"ast":null,"code":"var _jsxFileName = \"/Users/mdabdurrazzak/RadInsu/src/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { RadixDappToolkit, DataRequestBuilder, RadixNetwork } from '@radixdlt/radix-dapp-toolkit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [rdt, setRdt] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [accountAddress, setAccountAddress] = useState('');\n  const [componentAddress, setComponentAddress] = useState('');\n  const [adminBadge, setAdminBadge] = useState('');\n  const [ownerBadge, setOwnerBadge] = useState('');\n  const [gumResourceAddress, setGumResourceAddress] = useState('');\n  useEffect(() => {\n    const connectWallet = async () => {\n      try {\n        const dAppId = 'account_tdx_2_12xxk4dqhg9dz53p745qhpr5tr2k2al4mpx3296tr8k78kna6rkcgsz';\n        const newRdt = RadixDappToolkit({\n          dAppDefinitionAddress: dAppId,\n          networkId: RadixNetwork.Stokenet,\n          applicationName: 'Infinx',\n          applicationVersion: '1.0.0'\n        });\n        setRdt(newRdt);\n        setLoading(false);\n        console.log('Connected to wallet successfully');\n\n        // Fetch user's account address\n        newRdt.walletApi.setRequestData(DataRequestBuilder.accounts().atLeast(1));\n        newRdt.walletApi.walletData$.subscribe(walletData => {\n          console.log(\"Subscription wallet data: \", walletData);\n          setAccountAddress(walletData.accounts[0].address);\n        });\n      } catch (error) {\n        console.error('Error connecting to Radix Wallet Connector:', error);\n      }\n    };\n    connectWallet();\n  }, []);\n  const instantiateComponent = async () => {\n    try {\n      // Your instantiation logic here\n    } catch (error) {\n      console.error('Error instantiating component:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: instantiateComponent,\n      children: \"Instantiate Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), accountAddress && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Account Address: \", accountAddress]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 26\n    }, this), accountAddress && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Component Address: \", componentAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Admin Badge: \", adminBadge]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Owner Badge: \", ownerBadge]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Gumball Resource Address: \", gumResourceAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"Q/9hyu0Owo9eLK86YKtfsQySwd8=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","RadixDappToolkit","DataRequestBuilder","RadixNetwork","jsxDEV","_jsxDEV","Profile","_s","rdt","setRdt","loading","setLoading","accountAddress","setAccountAddress","componentAddress","setComponentAddress","adminBadge","setAdminBadge","ownerBadge","setOwnerBadge","gumResourceAddress","setGumResourceAddress","connectWallet","dAppId","newRdt","dAppDefinitionAddress","networkId","Stokenet","applicationName","applicationVersion","console","log","walletApi","setRequestData","accounts","atLeast","walletData$","subscribe","walletData","address","error","instantiateComponent","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mdabdurrazzak/RadInsu/src/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { RadixDappToolkit, DataRequestBuilder, RadixNetwork } from '@radixdlt/radix-dapp-toolkit';\n\nconst Profile = () => {\n  const [rdt, setRdt] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [accountAddress, setAccountAddress] = useState('');\n  const [componentAddress, setComponentAddress] = useState('');\n  const [adminBadge, setAdminBadge] = useState('');\n  const [ownerBadge, setOwnerBadge] = useState('');\n  const [gumResourceAddress, setGumResourceAddress] = useState('');\n\n  useEffect(() => {\n    const connectWallet = async () => {\n      try {\n        const dAppId = 'account_tdx_2_12xxk4dqhg9dz53p745qhpr5tr2k2al4mpx3296tr8k78kna6rkcgsz';\n        const newRdt = RadixDappToolkit({\n          dAppDefinitionAddress: dAppId,\n          networkId: RadixNetwork.Stokenet,\n          applicationName: 'Infinx',\n          applicationVersion: '1.0.0',\n        });\n        setRdt(newRdt);\n        setLoading(false);\n        console.log('Connected to wallet successfully');\n\n        // Fetch user's account address\n        newRdt.walletApi.setRequestData(DataRequestBuilder.accounts().atLeast(1));\n        newRdt.walletApi.walletData$.subscribe((walletData) => {\n          console.log(\"Subscription wallet data: \", walletData);\n          setAccountAddress(walletData.accounts[0].address);\n        });\n      } catch (error) {\n        console.error('Error connecting to Radix Wallet Connector:', error);\n      }\n    };\n\n    connectWallet();\n  }, []);\n\n  const instantiateComponent = async () => {\n    try {\n      // Your instantiation logic here\n    } catch (error) {\n      console.error('Error instantiating component:', error);\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={instantiateComponent}>Instantiate Component</button>\n  \n      {/* Display account address if available */}\n      {accountAddress && <div>Account Address: {accountAddress}</div>}\n      {accountAddress && (\n        <div>\n          {/* Display other details only when account address is available */}\n          <div>Component Address: {componentAddress}</div>\n          <div>Admin Badge: {adminBadge}</div>\n          <div>Owner Badge: {ownerBadge}</div>\n          <div>Gumball Resource Address: {gumResourceAddress}</div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Profile;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,gBAAgB,EAAEC,kBAAkB,EAAEC,YAAY,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElG,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACqB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAEhEC,SAAS,CAAC,MAAM;IACd,MAAMsB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,MAAM,GAAG,uEAAuE;QACtF,MAAMC,MAAM,GAAGvB,gBAAgB,CAAC;UAC9BwB,qBAAqB,EAAEF,MAAM;UAC7BG,SAAS,EAAEvB,YAAY,CAACwB,QAAQ;UAChCC,eAAe,EAAE,QAAQ;UACzBC,kBAAkB,EAAE;QACtB,CAAC,CAAC;QACFpB,MAAM,CAACe,MAAM,CAAC;QACdb,UAAU,CAAC,KAAK,CAAC;QACjBmB,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;;QAE/C;QACAP,MAAM,CAACQ,SAAS,CAACC,cAAc,CAAC/B,kBAAkB,CAACgC,QAAQ,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;QACzEX,MAAM,CAACQ,SAAS,CAACI,WAAW,CAACC,SAAS,CAAEC,UAAU,IAAK;UACrDR,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEO,UAAU,CAAC;UACrDzB,iBAAiB,CAACyB,UAAU,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAACK,OAAO,CAAC;QACnD,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdV,OAAO,CAACU,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;MACrE;IACF,CAAC;IAEDlB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMmB,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF;IAAA,CACD,CAAC,OAAOD,KAAK,EAAE;MACdV,OAAO,CAACU,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,oBACEnC,OAAA;IAAAqC,QAAA,gBACErC,OAAA;MAAQsC,OAAO,EAAEF,oBAAqB;MAAAC,QAAA,EAAC;IAAqB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAGpEnC,cAAc,iBAAIP,OAAA;MAAAqC,QAAA,GAAK,mBAAiB,EAAC9B,cAAc;IAAA;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC9DnC,cAAc,iBACbP,OAAA;MAAAqC,QAAA,gBAEErC,OAAA;QAAAqC,QAAA,GAAK,qBAAmB,EAAC5B,gBAAgB;MAAA;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAChD1C,OAAA;QAAAqC,QAAA,GAAK,eAAa,EAAC1B,UAAU;MAAA;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACpC1C,OAAA;QAAAqC,QAAA,GAAK,eAAa,EAACxB,UAAU;MAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACpC1C,OAAA;QAAAqC,QAAA,GAAK,4BAA0B,EAACtB,kBAAkB;MAAA;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxC,EAAA,CA9DID,OAAO;AAAA0C,EAAA,GAAP1C,OAAO;AAgEb,eAAeA,OAAO;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}