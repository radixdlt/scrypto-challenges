{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nvar m = require(\"./arithmetic\");\nvar UInt256 = /** @class */function () {\n  function UInt256(param, radix) {\n    if (radix === void 0) {\n      radix = 10;\n    }\n    this.compareTo = this.cmp;\n    this.subtract = this.sub;\n    this.divideAndRemainder = this.divmod;\n    this.divide = this.div;\n    this.multiply = this.mul;\n    this.remainder = this.mod;\n    this.shiftRight = this.shr;\n    this.shiftLeft = this.shl;\n    this.isMutable = false;\n    if (!param) {\n      return this;\n    }\n    if (param instanceof ArrayBuffer) {\n      if (param.byteLength === m.BYTES && !m.eq(param, 0)) {\n        this.buffer = param;\n      } else {\n        throw new TypeError('NAN');\n      }\n      return this.optimize();\n    }\n    if (param instanceof UInt256) {\n      if (param.buffer) {\n        this.buffer = param.buffer.slice(0);\n      }\n      return this;\n    }\n    if (typeof param === 'number') {\n      if (param < 0 || param > m.JSNUMBER_MAX_INTEGER) {\n        throw new TypeError('NAN');\n      }\n      if (param !== 0) {\n        this.buffer = m.numberToBuffer(param);\n      }\n      return this;\n    }\n    var prefixed = 'xX'.indexOf(param[1]) !== -1;\n    if (radix === 16 || prefixed) {\n      this.buffer = new ArrayBuffer(m.BYTES);\n      if (m.fromHex(this.buffer, param, prefixed)) {\n        throw new TypeError('NAN');\n      }\n      return this.optimize();\n    }\n    if (radix > m.RADIX_MAX || radix < m.RADIX_MIN) {\n      throw new TypeError('NAN');\n    }\n    for (var i = 0; i < param.length; i += 1) {\n      var chr = parseInt(param.charAt(i), radix);\n      if (isNaN(chr)) {\n        throw new TypeError('NAN');\n      }\n      this.mul(radix, true).add(chr, true);\n    }\n    return this;\n  }\n  UInt256.valueOf = function (val) {\n    return new UInt256(val);\n  };\n  UInt256.prototype.mutable = function (mutable) {\n    if (mutable === void 0) {\n      mutable = true;\n    }\n    this.isMutable = mutable;\n    return this;\n  };\n  UInt256.prototype.pow = function (rval, mutate) {\n    if (rval < 0) {\n      throw new Error('NAN');\n    }\n    var lval = mutate && this || this.copy();\n    if (rval === 0) {\n      lval.buffer = new UInt256(1).buffer;\n      return lval;\n    }\n    if (!lval.buffer) {\n      return lval;\n    }\n    var rv = mutate && this.copy() || this;\n    // tslint:disable-next-line:no-increment-decrement\n    while (--rval) {\n      m.mul(lval.buffer, rv.buffer);\n    }\n    return lval.optimize();\n  };\n  UInt256.prototype.add = function (rval, mutate) {\n    if (mutate === void 0) {\n      mutate = this.isMutable;\n    }\n    var lval = mutate && this || this.copy();\n    if (typeof rval === 'number') {\n      if (rval < 0 || rval > m.JSNUMBER_MAX_INTEGER) {\n        throw new TypeError('NAN');\n      }\n      if (rval !== 0) {\n        if (!lval.buffer) {\n          lval.buffer = m.numberToBuffer(rval);\n          return lval;\n        }\n        m.add(lval.buffer, rval);\n        lval.optimize();\n      }\n      return lval;\n    }\n    if (!rval.buffer) {\n      return lval;\n    }\n    if (!lval.buffer) {\n      lval.buffer = rval.buffer.slice(0);\n      return lval;\n    }\n    m.add(lval.buffer, rval.buffer);\n    return lval.optimize();\n  };\n  UInt256.prototype.safeAdd = function (rval, mutate) {\n    if (mutate === void 0) {\n      mutate = this.isMutable;\n    }\n    var res = this.add(rval);\n    if (this.gt(res)) {\n      throw new TypeError('OF');\n    }\n    if (mutate) {\n      this.buffer = res.buffer;\n      return this;\n    }\n    return res;\n  };\n  UInt256.prototype.gcd = function (rval, mutate) {\n    if (mutate === void 0) {\n      mutate = this.isMutable;\n    }\n    var t = this.mod(rval);\n    var num = rval.copy();\n    var denom = t;\n    while (denom.neq(0)) {\n      t = num.mod(denom, true);\n      num = denom;\n      denom = t;\n    }\n    if (!mutate) {\n      return num;\n    }\n    this.buffer = num.buffer;\n    return this;\n  };\n  UInt256.prototype.sub = function (rval, mutate) {\n    if (mutate === void 0) {\n      mutate = this.isMutable;\n    }\n    var lval = mutate && this || this.copy();\n    if (typeof rval === 'number') {\n      if (rval < 0 || rval > m.JSNUMBER_MAX_INTEGER) {\n        throw new TypeError('NAN');\n      }\n      if (rval !== 0) {\n        if (!lval.buffer) {\n          lval.buffer = m.numberToBuffer(rval);\n          m.comp(lval.buffer);\n          return lval;\n        }\n        m.sub(lval.buffer, rval);\n        lval.optimize();\n      }\n      return lval;\n    }\n    if (!rval.buffer) {\n      return lval;\n    }\n    if (!lval.buffer) {\n      lval.buffer = rval.buffer.slice(0);\n      m.comp(lval.buffer);\n      return lval;\n    }\n    m.sub(lval.buffer, rval.buffer);\n    return lval.optimize();\n  };\n  UInt256.prototype.safeSub = function (rval, mutate) {\n    if (mutate === void 0) {\n      mutate = this.isMutable;\n    }\n    if (this.lt(rval)) {\n      throw new TypeError('OF');\n    }\n    return this.sub(rval, mutate);\n  };\n  UInt256.prototype.divmod = function (rval) {\n    var lval = this.copy();\n    rval = new UInt256(rval);\n    if (!lval.buffer) {\n      return [lval, lval.copy()];\n    }\n    if (m.divmod(lval.buffer, rval.buffer)) {\n      throw new TypeError('DBZ');\n    }\n    return [rval.optimize(), lval.optimize()];\n  };\n  UInt256.prototype.div = function (rval, mutate) {\n    if (mutate === void 0) {\n      mutate = this.isMutable;\n    }\n    var lval = mutate && this || this.copy();\n    if (!lval.buffer) {\n      return lval;\n    }\n    rval = new UInt256(rval);\n    if (m.divmod(lval.buffer, rval.buffer)) {\n      throw new TypeError('DBZ');\n    }\n    lval.buffer = rval.buffer;\n    return lval.optimize();\n  };\n  UInt256.prototype.mod = function (rval, mutate) {\n    if (mutate === void 0) {\n      mutate = this.isMutable;\n    }\n    var lval = mutate && this || this.copy();\n    if (!lval.buffer) {\n      return lval;\n    }\n    rval = new UInt256(rval);\n    if (m.divmod(lval.buffer, rval.buffer)) {\n      throw new TypeError('DBZ');\n    }\n    return lval.optimize();\n  };\n  UInt256.prototype.mul = function (rval, mutate) {\n    if (mutate === void 0) {\n      mutate = this.isMutable;\n    }\n    var lval = mutate && this || this.copy();\n    if (!lval.buffer) {\n      return lval;\n    }\n    if (typeof rval === 'number') {\n      if (rval < 0 || rval > m.JSNUMBER_MAX_INTEGER) {\n        throw new TypeError('NAN');\n      }\n      if (rval === 0) {\n        delete lval.buffer;\n        return lval;\n      }\n      m.mul(lval.buffer, rval);\n      return lval.optimize();\n    }\n    if (!rval.buffer) {\n      delete lval.buffer;\n      return lval;\n    }\n    m.mul(lval.buffer, rval.buffer);\n    return lval.optimize();\n  };\n  UInt256.prototype.safeMul = function (rval, mutate) {\n    if (mutate === void 0) {\n      mutate = this.isMutable;\n    }\n    if (this.eq(0)) {\n      return mutate && this || this.copy();\n    }\n    var res = this.mul(rval);\n    if (res.div(this).neq(rval)) {\n      throw new TypeError('OF');\n    }\n    if (mutate) {\n      this.buffer = res.buffer;\n      return this;\n    }\n    return res;\n  };\n  UInt256.prototype.and = function (rval, mutate) {\n    if (mutate === void 0) {\n      mutate = this.isMutable;\n    }\n    var lval = mutate && this || this.copy();\n    if (!lval.buffer) {\n      return lval;\n    }\n    if (typeof rval === 'number') {\n      if (rval < 0 || rval > m.JSNUMBER_MAX_INTEGER) {\n        throw new TypeError('NAN');\n      }\n      if (rval === 0) {\n        delete lval.buffer;\n        return lval;\n      }\n      m.and(lval.buffer, rval);\n      return lval;\n    }\n    if (!rval.buffer) {\n      delete lval.buffer;\n      return lval;\n    }\n    m.and(lval.buffer, rval.buffer);\n    return lval;\n  };\n  UInt256.prototype.andNot = function (rval, mutate) {\n    if (mutate === void 0) {\n      mutate = this.isMutable;\n    }\n    var lval = mutate && this || this.copy();\n    if (!lval.buffer) {\n      return lval;\n    }\n    if (typeof rval === 'number') {\n      if (rval < 0 || rval > m.JSNUMBER_MAX_INTEGER) {\n        throw new TypeError('NAN');\n      }\n      if (rval === 0) {\n        return lval;\n      }\n      m.andNot(lval.buffer, rval);\n      return lval.optimize();\n    }\n    if (!rval.buffer) {\n      return lval;\n    }\n    m.andNot(lval.buffer, rval.buffer);\n    return lval.optimize();\n  };\n  UInt256.prototype.or = function (rval, mutate) {\n    if (mutate === void 0) {\n      mutate = this.isMutable;\n    }\n    var lval = mutate && this || this.copy();\n    if (!lval.buffer) {\n      lval.buffer = new UInt256(rval).buffer;\n      return lval;\n    }\n    if (typeof rval === 'number') {\n      if (rval < 0 || rval > m.JSNUMBER_MAX_INTEGER) {\n        throw new TypeError('NAN');\n      }\n      if (rval === 0) {\n        return lval;\n      }\n      m.or(lval.buffer, rval);\n      return lval;\n    }\n    if (!rval.buffer) {\n      return lval;\n    }\n    m.or(lval.buffer, rval.buffer);\n    return lval;\n  };\n  UInt256.prototype.xor = function (rval, mutate) {\n    if (mutate === void 0) {\n      mutate = this.isMutable;\n    }\n    var lval = mutate && this || this.copy();\n    if (!lval.buffer) {\n      lval.buffer = new UInt256(rval).buffer;\n      return lval;\n    }\n    if (typeof rval === 'number') {\n      if (rval < 0 || rval > m.JSNUMBER_MAX_INTEGER) {\n        throw new TypeError('NAN');\n      }\n      if (rval === 0) {\n        return lval;\n      }\n      m.xor(lval.buffer, rval);\n      return lval.optimize();\n    }\n    if (!rval.buffer) {\n      return lval;\n    }\n    m.xor(lval.buffer, rval.buffer);\n    return lval.optimize();\n  };\n  UInt256.prototype.not = function (mutate) {\n    if (mutate === void 0) {\n      mutate = this.isMutable;\n    }\n    var lval = mutate && this || this.copy();\n    lval.buffer = lval.buffer || new ArrayBuffer(m.BYTES);\n    m.not(lval.buffer);\n    return lval.optimize();\n  };\n  UInt256.prototype.shl = function (shift, mutate) {\n    if (mutate === void 0) {\n      mutate = this.isMutable;\n    }\n    var lval = mutate && this || this.copy();\n    if (shift < 0 || shift > m.JSNUMBER_MAX_INTEGER) {\n      throw new TypeError('NAN');\n    }\n    if (!lval.buffer) {\n      return lval;\n    }\n    m.shl(lval.buffer, shift);\n    return lval.optimize();\n  };\n  UInt256.prototype.shr = function (shift, mutate) {\n    if (mutate === void 0) {\n      mutate = this.isMutable;\n    }\n    var lval = mutate && this || this.copy();\n    if (shift < 0 || shift > m.JSNUMBER_MAX_INTEGER) {\n      throw new TypeError('NAN');\n    }\n    if (!lval.buffer) {\n      return lval;\n    }\n    m.shr(lval.buffer, shift);\n    return lval.optimize();\n  };\n  UInt256.prototype.eq = function (rval) {\n    if (typeof rval === 'number') {\n      if (rval < 0 || rval > m.JSNUMBER_MAX_INTEGER) {\n        throw new TypeError('NAN');\n      }\n      if (!this.buffer) {\n        return rval === 0;\n      }\n      return m.eq(this.buffer, rval);\n    }\n    if (!this.buffer) {\n      return !rval.buffer || m.eq(rval.buffer, 0);\n    }\n    return m.eq(this.buffer, rval.buffer || 0);\n  };\n  UInt256.prototype.neq = function (rval) {\n    return !this.eq(rval);\n  };\n  UInt256.prototype.cmp = function (rval) {\n    if (typeof rval === 'number') {\n      if (rval < 0 || rval > m.JSNUMBER_MAX_INTEGER) {\n        throw new TypeError('NAN');\n      }\n      if (!this.buffer) {\n        return rval > 0 && -1 || rval < 0 && 1 || 0;\n      }\n      return m.cmp(this.buffer, rval);\n    }\n    if (!this.buffer) {\n      if (!rval.buffer) {\n        return 0;\n      }\n      return m.cmp(rval.buffer, 0) * -1;\n    }\n    return m.cmp(this.buffer, rval.buffer || 0);\n  };\n  UInt256.prototype.lte = function (rval) {\n    return this.cmp(rval) <= 0;\n  };\n  UInt256.prototype.lt = function (rval) {\n    return this.cmp(rval) < 0;\n  };\n  UInt256.prototype.gte = function (rval) {\n    return this.cmp(rval) >= 0;\n  };\n  UInt256.prototype.gt = function (rval) {\n    return this.cmp(rval) > 0;\n  };\n  UInt256.prototype.copy = function () {\n    if (!this.buffer) {\n      return new UInt256();\n    }\n    return new UInt256(this.buffer.slice(0));\n  };\n  UInt256.prototype.valueOf = function () {\n    if (!this.buffer) {\n      return 0;\n    }\n    return m.toNumber(this.buffer);\n  };\n  UInt256.prototype.toString = function (radix) {\n    if (radix === void 0) {\n      radix = 10;\n    }\n    if (!this.buffer) {\n      return '0';\n    }\n    if (radix === 16) {\n      return m.toHex(this.buffer);\n    }\n    if (radix > m.RADIX_MAX || radix < m.RADIX_MIN) {\n      radix = 10;\n    }\n    if (m.cmp(this.buffer, m.JSNUMBER_MAX_INTEGER) <= 0) {\n      return this.valueOf().toString(radix);\n    }\n    var out = '';\n    var divmod = [];\n    divmod[0] = this;\n    divmod[1] = new UInt256(0);\n    do {\n      divmod = divmod[0].divmod(radix);\n      out = m.ALPHABET.charAt(divmod[1].valueOf() & m.BYTE_MASK) + out;\n    } while (divmod[0].buffer);\n    return out;\n  };\n  UInt256.prototype.toJSON = function () {\n    return this.toString();\n  };\n  UInt256.prototype.toByteArray = function () {\n    if (!this.buffer) {\n      return new Uint8Array(new ArrayBuffer(m.BYTES));\n    }\n    return new Uint8Array(this.buffer.slice(0));\n  };\n  UInt256.prototype.testBit = function (n) {\n    if (!this.buffer) {\n      return false;\n    }\n    var buffer = this.buffer.slice(0);\n    m.shr(buffer, n);\n    m.and(buffer, 1);\n    return m.eq(buffer, 1);\n  };\n  UInt256.prototype.setBit = function (n, mutate) {\n    if (mutate === void 0) {\n      mutate = this.isMutable;\n    }\n    var lval = mutate && this || this.copy();\n    lval.buffer = lval.buffer || new ArrayBuffer(m.BYTES);\n    var nbuffer = new ArrayBuffer(m.BYTES);\n    m.add(nbuffer, 1);\n    m.shl(nbuffer, n);\n    m.or(lval.buffer, nbuffer);\n    return lval;\n  };\n  UInt256.prototype.flipBit = function (n, mutate) {\n    if (mutate === void 0) {\n      mutate = this.isMutable;\n    }\n    var lval = mutate && this || this.copy();\n    lval.buffer = lval.buffer || new ArrayBuffer(m.BYTES);\n    var nbuffer = new ArrayBuffer(m.BYTES);\n    m.add(nbuffer, 1);\n    m.shl(nbuffer, n);\n    m.xor(lval.buffer, nbuffer);\n    return lval.optimize();\n  };\n  UInt256.prototype.clearBit = function (n, mutate) {\n    if (mutate === void 0) {\n      mutate = this.isMutable;\n    }\n    var lval = mutate && this || this.copy();\n    if (!lval.buffer) {\n      return lval;\n    }\n    var nbuffer = new ArrayBuffer(m.BYTES);\n    m.add(nbuffer, 1);\n    m.shl(nbuffer, n);\n    m.not(nbuffer);\n    m.and(lval.buffer, nbuffer);\n    return lval.optimize();\n  };\n  UInt256.prototype.bitCount = function () {\n    if (!this.buffer) {\n      return 0;\n    }\n    return m.pop(this.buffer);\n  };\n  UInt256.prototype.negate = function (mutate) {\n    if (mutate === void 0) {\n      mutate = this.isMutable;\n    }\n    var lval = mutate && this || this.copy();\n    lval.buffer = lval.buffer || new ArrayBuffer(m.BYTES);\n    m.comp(lval.buffer);\n    return lval.optimize();\n  };\n  UInt256.prototype.min = function (rval, mutate) {\n    if (mutate === void 0) {\n      mutate = this.isMutable;\n    }\n    var lval = mutate && this || this.copy();\n    rval = new UInt256(rval);\n    if (rval.lt(lval)) {\n      lval.buffer = rval.buffer;\n    }\n    return lval;\n  };\n  UInt256.prototype.max = function (rval, mutate) {\n    if (mutate === void 0) {\n      mutate = this.isMutable;\n    }\n    var lval = mutate && this || this.copy();\n    rval = new UInt256(rval);\n    if (rval.gt(lval)) {\n      lval.buffer = rval.buffer;\n    }\n    return lval;\n  };\n  UInt256.prototype.optimize = function () {\n    if (!this.buffer) {\n      return this;\n    }\n    if (m.eq(this.buffer, 0)) {\n      delete this.buffer;\n    }\n    return this;\n  };\n  return UInt256;\n}();\nexports.UInt256 = UInt256;\nfunction U256(param, param2) {\n  if (typeof param === 'string') {\n    return new UInt256(param, param2);\n  }\n  return new UInt256(param);\n}\nexports.U256 = U256;\n/* tslint:enable:function-name */","map":{"version":3,"names":["exports","__esModule","m","require","UInt256","param","radix","compareTo","cmp","subtract","sub","divideAndRemainder","divmod","divide","div","multiply","mul","remainder","mod","shiftRight","shr","shiftLeft","shl","isMutable","ArrayBuffer","byteLength","BYTES","eq","buffer","TypeError","optimize","slice","JSNUMBER_MAX_INTEGER","numberToBuffer","prefixed","indexOf","fromHex","RADIX_MAX","RADIX_MIN","i","length","chr","parseInt","charAt","isNaN","add","valueOf","val","prototype","mutable","pow","rval","mutate","Error","lval","copy","rv","safeAdd","res","gt","gcd","t","num","denom","neq","comp","safeSub","lt","safeMul","and","andNot","or","xor","not","shift","lte","gte","toNumber","toString","toHex","out","ALPHABET","BYTE_MASK","toJSON","toByteArray","Uint8Array","testBit","n","setBit","nbuffer","flipBit","clearBit","bitCount","pop","negate","min","max","U256","param2"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/@radixdlt/uint256/dist/UInt256.js"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar m = require(\"./arithmetic\");\nvar UInt256 = /** @class */ (function () {\n    function UInt256(param, radix) {\n        if (radix === void 0) { radix = 10; }\n        this.compareTo = this.cmp;\n        this.subtract = this.sub;\n        this.divideAndRemainder = this.divmod;\n        this.divide = this.div;\n        this.multiply = this.mul;\n        this.remainder = this.mod;\n        this.shiftRight = this.shr;\n        this.shiftLeft = this.shl;\n        this.isMutable = false;\n        if (!param) {\n            return this;\n        }\n        if (param instanceof ArrayBuffer) {\n            if (param.byteLength === m.BYTES && !m.eq(param, 0)) {\n                this.buffer = param;\n            }\n            else {\n                throw new TypeError('NAN');\n            }\n            return this.optimize();\n        }\n        if (param instanceof UInt256) {\n            if (param.buffer) {\n                this.buffer = param.buffer.slice(0);\n            }\n            return this;\n        }\n        if (typeof param === 'number') {\n            if (param < 0 || param > m.JSNUMBER_MAX_INTEGER) {\n                throw new TypeError('NAN');\n            }\n            if (param !== 0) {\n                this.buffer = m.numberToBuffer(param);\n            }\n            return this;\n        }\n        var prefixed = 'xX'.indexOf(param[1]) !== -1;\n        if (radix === 16 || prefixed) {\n            this.buffer = new ArrayBuffer(m.BYTES);\n            if (m.fromHex(this.buffer, param, prefixed)) {\n                throw new TypeError('NAN');\n            }\n            return this.optimize();\n        }\n        if (radix > m.RADIX_MAX || radix < m.RADIX_MIN) {\n            throw new TypeError('NAN');\n        }\n        for (var i = 0; i < param.length; i += 1) {\n            var chr = parseInt(param.charAt(i), radix);\n            if (isNaN(chr)) {\n                throw new TypeError('NAN');\n            }\n            this.mul(radix, true).add(chr, true);\n        }\n        return this;\n    }\n    UInt256.valueOf = function (val) {\n        return new UInt256(val);\n    };\n    UInt256.prototype.mutable = function (mutable) {\n        if (mutable === void 0) { mutable = true; }\n        this.isMutable = mutable;\n        return this;\n    };\n    UInt256.prototype.pow = function (rval, mutate) {\n        if (rval < 0) {\n            throw new Error('NAN');\n        }\n        var lval = (mutate && this) || this.copy();\n        if (rval === 0) {\n            lval.buffer = new UInt256(1).buffer;\n            return lval;\n        }\n        if (!lval.buffer) {\n            return lval;\n        }\n        var rv = (mutate && this.copy()) || this;\n        // tslint:disable-next-line:no-increment-decrement\n        while (--rval) {\n            m.mul(lval.buffer, rv.buffer);\n        }\n        return lval.optimize();\n    };\n    UInt256.prototype.add = function (rval, mutate) {\n        if (mutate === void 0) { mutate = this.isMutable; }\n        var lval = (mutate && this) || this.copy();\n        if (typeof rval === 'number') {\n            if (rval < 0 || rval > m.JSNUMBER_MAX_INTEGER) {\n                throw new TypeError('NAN');\n            }\n            if (rval !== 0) {\n                if (!lval.buffer) {\n                    lval.buffer = m.numberToBuffer(rval);\n                    return lval;\n                }\n                m.add(lval.buffer, rval);\n                lval.optimize();\n            }\n            return lval;\n        }\n        if (!rval.buffer) {\n            return lval;\n        }\n        if (!lval.buffer) {\n            lval.buffer = rval.buffer.slice(0);\n            return lval;\n        }\n        m.add(lval.buffer, rval.buffer);\n        return lval.optimize();\n    };\n    UInt256.prototype.safeAdd = function (rval, mutate) {\n        if (mutate === void 0) { mutate = this.isMutable; }\n        var res = this.add(rval);\n        if (this.gt(res)) {\n            throw new TypeError('OF');\n        }\n        if (mutate) {\n            this.buffer = res.buffer;\n            return this;\n        }\n        return res;\n    };\n    UInt256.prototype.gcd = function (rval, mutate) {\n        if (mutate === void 0) { mutate = this.isMutable; }\n        var t = this.mod(rval);\n        var num = rval.copy();\n        var denom = t;\n        while (denom.neq(0)) {\n            t = num.mod(denom, true);\n            num = denom;\n            denom = t;\n        }\n        if (!mutate) {\n            return num;\n        }\n        this.buffer = num.buffer;\n        return this;\n    };\n    UInt256.prototype.sub = function (rval, mutate) {\n        if (mutate === void 0) { mutate = this.isMutable; }\n        var lval = (mutate && this) || this.copy();\n        if (typeof rval === 'number') {\n            if (rval < 0 || rval > m.JSNUMBER_MAX_INTEGER) {\n                throw new TypeError('NAN');\n            }\n            if (rval !== 0) {\n                if (!lval.buffer) {\n                    lval.buffer = m.numberToBuffer(rval);\n                    m.comp(lval.buffer);\n                    return lval;\n                }\n                m.sub(lval.buffer, rval);\n                lval.optimize();\n            }\n            return lval;\n        }\n        if (!rval.buffer) {\n            return lval;\n        }\n        if (!lval.buffer) {\n            lval.buffer = rval.buffer.slice(0);\n            m.comp(lval.buffer);\n            return lval;\n        }\n        m.sub(lval.buffer, rval.buffer);\n        return lval.optimize();\n    };\n    UInt256.prototype.safeSub = function (rval, mutate) {\n        if (mutate === void 0) { mutate = this.isMutable; }\n        if (this.lt(rval)) {\n            throw new TypeError('OF');\n        }\n        return this.sub(rval, mutate);\n    };\n    UInt256.prototype.divmod = function (rval) {\n        var lval = this.copy();\n        rval = new UInt256(rval);\n        if (!lval.buffer) {\n            return [lval, lval.copy()];\n        }\n        if (m.divmod(lval.buffer, rval.buffer)) {\n            throw new TypeError('DBZ');\n        }\n        return [rval.optimize(), lval.optimize()];\n    };\n    UInt256.prototype.div = function (rval, mutate) {\n        if (mutate === void 0) { mutate = this.isMutable; }\n        var lval = (mutate && this) || this.copy();\n        if (!lval.buffer) {\n            return lval;\n        }\n        rval = new UInt256(rval);\n        if (m.divmod(lval.buffer, rval.buffer)) {\n            throw new TypeError('DBZ');\n        }\n        lval.buffer = rval.buffer;\n        return lval.optimize();\n    };\n    UInt256.prototype.mod = function (rval, mutate) {\n        if (mutate === void 0) { mutate = this.isMutable; }\n        var lval = (mutate && this) || this.copy();\n        if (!lval.buffer) {\n            return lval;\n        }\n        rval = new UInt256(rval);\n        if (m.divmod(lval.buffer, rval.buffer)) {\n            throw new TypeError('DBZ');\n        }\n        return lval.optimize();\n    };\n    UInt256.prototype.mul = function (rval, mutate) {\n        if (mutate === void 0) { mutate = this.isMutable; }\n        var lval = (mutate && this) || this.copy();\n        if (!lval.buffer) {\n            return lval;\n        }\n        if (typeof rval === 'number') {\n            if (rval < 0 || rval > m.JSNUMBER_MAX_INTEGER) {\n                throw new TypeError('NAN');\n            }\n            if (rval === 0) {\n                delete lval.buffer;\n                return lval;\n            }\n            m.mul(lval.buffer, rval);\n            return lval.optimize();\n        }\n        if (!rval.buffer) {\n            delete lval.buffer;\n            return lval;\n        }\n        m.mul(lval.buffer, rval.buffer);\n        return lval.optimize();\n    };\n    UInt256.prototype.safeMul = function (rval, mutate) {\n        if (mutate === void 0) { mutate = this.isMutable; }\n        if (this.eq(0)) {\n            return (mutate && this) || this.copy();\n        }\n        var res = this.mul(rval);\n        if (res.div(this).neq(rval)) {\n            throw new TypeError('OF');\n        }\n        if (mutate) {\n            this.buffer = res.buffer;\n            return this;\n        }\n        return res;\n    };\n    UInt256.prototype.and = function (rval, mutate) {\n        if (mutate === void 0) { mutate = this.isMutable; }\n        var lval = (mutate && this) || this.copy();\n        if (!lval.buffer) {\n            return lval;\n        }\n        if (typeof rval === 'number') {\n            if (rval < 0 || rval > m.JSNUMBER_MAX_INTEGER) {\n                throw new TypeError('NAN');\n            }\n            if (rval === 0) {\n                delete lval.buffer;\n                return lval;\n            }\n            m.and(lval.buffer, rval);\n            return lval;\n        }\n        if (!rval.buffer) {\n            delete lval.buffer;\n            return lval;\n        }\n        m.and(lval.buffer, rval.buffer);\n        return lval;\n    };\n    UInt256.prototype.andNot = function (rval, mutate) {\n        if (mutate === void 0) { mutate = this.isMutable; }\n        var lval = (mutate && this) || this.copy();\n        if (!lval.buffer) {\n            return lval;\n        }\n        if (typeof rval === 'number') {\n            if (rval < 0 || rval > m.JSNUMBER_MAX_INTEGER) {\n                throw new TypeError('NAN');\n            }\n            if (rval === 0) {\n                return lval;\n            }\n            m.andNot(lval.buffer, rval);\n            return lval.optimize();\n        }\n        if (!rval.buffer) {\n            return lval;\n        }\n        m.andNot(lval.buffer, rval.buffer);\n        return lval.optimize();\n    };\n    UInt256.prototype.or = function (rval, mutate) {\n        if (mutate === void 0) { mutate = this.isMutable; }\n        var lval = (mutate && this) || this.copy();\n        if (!lval.buffer) {\n            lval.buffer = new UInt256(rval).buffer;\n            return lval;\n        }\n        if (typeof rval === 'number') {\n            if (rval < 0 || rval > m.JSNUMBER_MAX_INTEGER) {\n                throw new TypeError('NAN');\n            }\n            if (rval === 0) {\n                return lval;\n            }\n            m.or(lval.buffer, rval);\n            return lval;\n        }\n        if (!rval.buffer) {\n            return lval;\n        }\n        m.or(lval.buffer, rval.buffer);\n        return lval;\n    };\n    UInt256.prototype.xor = function (rval, mutate) {\n        if (mutate === void 0) { mutate = this.isMutable; }\n        var lval = (mutate && this) || this.copy();\n        if (!lval.buffer) {\n            lval.buffer = new UInt256(rval).buffer;\n            return lval;\n        }\n        if (typeof rval === 'number') {\n            if (rval < 0 || rval > m.JSNUMBER_MAX_INTEGER) {\n                throw new TypeError('NAN');\n            }\n            if (rval === 0) {\n                return lval;\n            }\n            m.xor(lval.buffer, rval);\n            return lval.optimize();\n        }\n        if (!rval.buffer) {\n            return lval;\n        }\n        m.xor(lval.buffer, rval.buffer);\n        return lval.optimize();\n    };\n    UInt256.prototype.not = function (mutate) {\n        if (mutate === void 0) { mutate = this.isMutable; }\n        var lval = (mutate && this) || this.copy();\n        lval.buffer = lval.buffer || new ArrayBuffer(m.BYTES);\n        m.not(lval.buffer);\n        return lval.optimize();\n    };\n    UInt256.prototype.shl = function (shift, mutate) {\n        if (mutate === void 0) { mutate = this.isMutable; }\n        var lval = (mutate && this) || this.copy();\n        if (shift < 0 || shift > m.JSNUMBER_MAX_INTEGER) {\n            throw new TypeError('NAN');\n        }\n        if (!lval.buffer) {\n            return lval;\n        }\n        m.shl(lval.buffer, shift);\n        return lval.optimize();\n    };\n    UInt256.prototype.shr = function (shift, mutate) {\n        if (mutate === void 0) { mutate = this.isMutable; }\n        var lval = (mutate && this) || this.copy();\n        if (shift < 0 || shift > m.JSNUMBER_MAX_INTEGER) {\n            throw new TypeError('NAN');\n        }\n        if (!lval.buffer) {\n            return lval;\n        }\n        m.shr(lval.buffer, shift);\n        return lval.optimize();\n    };\n    UInt256.prototype.eq = function (rval) {\n        if (typeof rval === 'number') {\n            if (rval < 0 || rval > m.JSNUMBER_MAX_INTEGER) {\n                throw new TypeError('NAN');\n            }\n            if (!this.buffer) {\n                return rval === 0;\n            }\n            return m.eq(this.buffer, rval);\n        }\n        if (!this.buffer) {\n            return !rval.buffer || m.eq(rval.buffer, 0);\n        }\n        return m.eq(this.buffer, rval.buffer || 0);\n    };\n    UInt256.prototype.neq = function (rval) {\n        return !this.eq(rval);\n    };\n    UInt256.prototype.cmp = function (rval) {\n        if (typeof rval === 'number') {\n            if (rval < 0 || rval > m.JSNUMBER_MAX_INTEGER) {\n                throw new TypeError('NAN');\n            }\n            if (!this.buffer) {\n                return (rval > 0 && -1) || (rval < 0 && 1) || 0;\n            }\n            return m.cmp(this.buffer, rval);\n        }\n        if (!this.buffer) {\n            if (!rval.buffer) {\n                return 0;\n            }\n            return m.cmp(rval.buffer, 0) * -1;\n        }\n        return m.cmp(this.buffer, rval.buffer || 0);\n    };\n    UInt256.prototype.lte = function (rval) {\n        return this.cmp(rval) <= 0;\n    };\n    UInt256.prototype.lt = function (rval) {\n        return this.cmp(rval) < 0;\n    };\n    UInt256.prototype.gte = function (rval) {\n        return this.cmp(rval) >= 0;\n    };\n    UInt256.prototype.gt = function (rval) {\n        return this.cmp(rval) > 0;\n    };\n    UInt256.prototype.copy = function () {\n        if (!this.buffer) {\n            return new UInt256();\n        }\n        return new UInt256(this.buffer.slice(0));\n    };\n    UInt256.prototype.valueOf = function () {\n        if (!this.buffer) {\n            return 0;\n        }\n        return m.toNumber(this.buffer);\n    };\n    UInt256.prototype.toString = function (radix) {\n        if (radix === void 0) { radix = 10; }\n        if (!this.buffer) {\n            return '0';\n        }\n        if (radix === 16) {\n            return m.toHex(this.buffer);\n        }\n        if (radix > m.RADIX_MAX || radix < m.RADIX_MIN) {\n            radix = 10;\n        }\n        if (m.cmp(this.buffer, m.JSNUMBER_MAX_INTEGER) <= 0) {\n            return this.valueOf().toString(radix);\n        }\n        var out = '';\n        var divmod = [];\n        divmod[0] = this;\n        divmod[1] = new UInt256(0);\n        do {\n            divmod = divmod[0].divmod(radix);\n            out = m.ALPHABET.charAt(divmod[1].valueOf() & m.BYTE_MASK) + out;\n        } while (divmod[0].buffer);\n        return out;\n    };\n    UInt256.prototype.toJSON = function () {\n        return this.toString();\n    };\n    UInt256.prototype.toByteArray = function () {\n        if (!this.buffer) {\n            return new Uint8Array(new ArrayBuffer(m.BYTES));\n        }\n        return new Uint8Array(this.buffer.slice(0));\n    };\n    UInt256.prototype.testBit = function (n) {\n        if (!this.buffer) {\n            return false;\n        }\n        var buffer = this.buffer.slice(0);\n        m.shr(buffer, n);\n        m.and(buffer, 1);\n        return m.eq(buffer, 1);\n    };\n    UInt256.prototype.setBit = function (n, mutate) {\n        if (mutate === void 0) { mutate = this.isMutable; }\n        var lval = (mutate && this) || this.copy();\n        lval.buffer = lval.buffer || new ArrayBuffer(m.BYTES);\n        var nbuffer = new ArrayBuffer(m.BYTES);\n        m.add(nbuffer, 1);\n        m.shl(nbuffer, n);\n        m.or(lval.buffer, nbuffer);\n        return lval;\n    };\n    UInt256.prototype.flipBit = function (n, mutate) {\n        if (mutate === void 0) { mutate = this.isMutable; }\n        var lval = (mutate && this) || this.copy();\n        lval.buffer = lval.buffer || new ArrayBuffer(m.BYTES);\n        var nbuffer = new ArrayBuffer(m.BYTES);\n        m.add(nbuffer, 1);\n        m.shl(nbuffer, n);\n        m.xor(lval.buffer, nbuffer);\n        return lval.optimize();\n    };\n    UInt256.prototype.clearBit = function (n, mutate) {\n        if (mutate === void 0) { mutate = this.isMutable; }\n        var lval = (mutate && this) || this.copy();\n        if (!lval.buffer) {\n            return lval;\n        }\n        var nbuffer = new ArrayBuffer(m.BYTES);\n        m.add(nbuffer, 1);\n        m.shl(nbuffer, n);\n        m.not(nbuffer);\n        m.and(lval.buffer, nbuffer);\n        return lval.optimize();\n    };\n    UInt256.prototype.bitCount = function () {\n        if (!this.buffer) {\n            return 0;\n        }\n        return m.pop(this.buffer);\n    };\n    UInt256.prototype.negate = function (mutate) {\n        if (mutate === void 0) { mutate = this.isMutable; }\n        var lval = (mutate && this) || this.copy();\n        lval.buffer = lval.buffer || new ArrayBuffer(m.BYTES);\n        m.comp(lval.buffer);\n        return lval.optimize();\n    };\n    UInt256.prototype.min = function (rval, mutate) {\n        if (mutate === void 0) { mutate = this.isMutable; }\n        var lval = (mutate && this) || this.copy();\n        rval = new UInt256(rval);\n        if (rval.lt(lval)) {\n            lval.buffer = rval.buffer;\n        }\n        return lval;\n    };\n    UInt256.prototype.max = function (rval, mutate) {\n        if (mutate === void 0) { mutate = this.isMutable; }\n        var lval = (mutate && this) || this.copy();\n        rval = new UInt256(rval);\n        if (rval.gt(lval)) {\n            lval.buffer = rval.buffer;\n        }\n        return lval;\n    };\n    UInt256.prototype.optimize = function () {\n        if (!this.buffer) {\n            return this;\n        }\n        if (m.eq(this.buffer, 0)) {\n            delete this.buffer;\n        }\n        return this;\n    };\n    return UInt256;\n}());\nexports.UInt256 = UInt256;\nfunction U256(param, param2) {\n    if (typeof param === 'string') {\n        return new UInt256(param, param2);\n    }\n    return new UInt256(param);\n}\nexports.U256 = U256;\n/* tslint:enable:function-name */\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}