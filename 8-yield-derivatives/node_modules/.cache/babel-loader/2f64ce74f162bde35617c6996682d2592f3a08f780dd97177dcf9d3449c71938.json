{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function skipWhile(predicate) {\n  return function (source) {\n    return source.lift(new SkipWhileOperator(predicate));\n  };\n}\nvar SkipWhileOperator = /*@__PURE__*/function () {\n  function SkipWhileOperator(predicate) {\n    this.predicate = predicate;\n  }\n  SkipWhileOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n  };\n  return SkipWhileOperator;\n}();\nvar SkipWhileSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SkipWhileSubscriber, _super);\n  function SkipWhileSubscriber(destination, predicate) {\n    var _this = _super.call(this, destination) || this;\n    _this.predicate = predicate;\n    _this.skipping = true;\n    _this.index = 0;\n    return _this;\n  }\n  SkipWhileSubscriber.prototype._next = function (value) {\n    var destination = this.destination;\n    if (this.skipping) {\n      this.tryCallPredicate(value);\n    }\n    if (!this.skipping) {\n      destination.next(value);\n    }\n  };\n  SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {\n    try {\n      var result = this.predicate(value, this.index++);\n      this.skipping = Boolean(result);\n    } catch (err) {\n      this.destination.error(err);\n    }\n  };\n  return SkipWhileSubscriber;\n}(Subscriber);","map":{"version":3,"names":["tslib_1","Subscriber","skipWhile","predicate","source","lift","SkipWhileOperator","prototype","call","subscriber","subscribe","SkipWhileSubscriber","_super","__extends","destination","_this","skipping","_next","value","tryCallPredicate","next","result","index","Boolean","err","error"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/radixdlt/node_modules/rxjs/src/internal/operators/skipWhile.ts"],"sourcesContent":["import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * ![](skipWhile.png)\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipWhileOperator(predicate));\n}\n\nclass SkipWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipWhileSubscriber<T> extends Subscriber<T> {\n  private skipping: boolean = true;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    if (this.skipping) {\n      this.tryCallPredicate(value);\n    }\n\n    if (!this.skipping) {\n      destination.next(value);\n    }\n  }\n\n  private tryCallPredicate(value: T): void {\n    try {\n      const result = this.predicate(value, this.index++);\n      this.skipping = Boolean(result);\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n}\n"],"mappings":";AAEA,OAAO,KAAEA,OAAU,MAAE,OAAM;AAe3B,SAAMC,UAAU,QAAa,eAA+C;OAC1E,SAAOC,SAACA,CAAAC,SAA0B;EACnC,iBAAAC,MAAA;IAAA,OAAAA,MAAA,CAAAC,IAAA,KAAAC,iBAAA,CAAAH,SAAA;EAAA;AAED;IACEG,iBAAA,gBAAoB,YAA+C;WAA/CA,kBAAAH,SAA+C;IAClE,KAAAA,SAAA,GAAAA,SAAA;EAED;mBACe,CAACI,SAAS,CAACC,IAAI,aAAAC,UAAoB,EAAAL,MAAU,EAAE;IAC7D,OAAAA,MAAA,CAAAM,SAAA,KAAAC,mBAAA,CAAAF,UAAA,OAAAN,SAAA;EACH;EAPA,OAOCG,iBAAA;AAOD;IAAqCK,mBAAA,0BAAaC,MAAA;EAIhDZ,OAAA,CAAAa,SAAA,CAAAF,mBAAY,EAAAC,MACQ;WADpBD,mBAEEA,CAAAG,WAAM,EAAAX,SAAY;IADA,IAAAY,KAAA,GAAAH,MAAA,CAAAJ,IAAA,KAA+C,EAAAM,WAAA;IAJ3DC,KAAA,CAAAZ,SAAQ,GAAYA,SAAK;IACzBY,KAAA,CAAAC,QAAgB,GAAE;;IAKzB,OAAAD,KAAA;EAES;qBACS,CAAAR,SAAQ,CAAAU,KAAA,GAAW,UAACC,KAAA;IACrC,IAAIJ,WAAK,GAAQ,IAAE,CAAAA,WAAA;QACjB,IAAI,CAACE,QAAA;MACN,KAAAG,gBAAA,CAAAD,KAAA;IAED;QACE,MAAAF,QAAY,EAAI;MACjBF,WAAA,CAAAM,IAAA,CAAAF,KAAA;IACF;EAEO;qBACF,CAAAX,SAAA,CAAAY,gBAAA,aAAAD,KAAA;QACF;MACA,IAAIG,MAAC,GAAQ,IAAG,CAAAlB,SAAQ,CAAAe,KAAQ,OAAAI,KAAA;MACjC,KAAAN,QAAA,GAAAO,OAAA,CAAAF,MAAA;IAAC,E,OACAG,GAAK;MACN,KAAAV,WAAA,CAAAW,KAAA,CAAAD,GAAA;IACF;EACH;EA5BqC,OAAAb,mBA4BpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}