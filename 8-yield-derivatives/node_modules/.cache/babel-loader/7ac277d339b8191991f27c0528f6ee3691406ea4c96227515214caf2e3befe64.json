{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * <img src=\"./img/findIndex.png\" width=\"100%\">\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * @example <caption>Emit the index of first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nfunction findIndex(predicate, thisArg) {\n  return operators_1.findIndex(predicate, thisArg)(this);\n}\nexports.findIndex = findIndex;","map":{"version":3,"names":["operators_1","require","findIndex","predicate","thisArg","exports"],"sources":["../src/compat/operator/findIndex.ts"],"sourcesContent":[null],"mappings":";;;;;AACA,IAAAA,WAAA,GAAAC,OAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,SAAgBC,SAASA,CAAyBC,SAAsE,EAC3FC,OAAa;EACxC,OAAOJ,WAAA,CAAAE,SAAW,CAACC,SAAS,EAAEC,OAAO,CAAC,CAAC,IAAI,CAAC;AAC9C;AAHAC,OAAA,CAAAH,SAAA,GAAAA,SAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}