{"ast":null,"code":"// Copyright (c) 2005  Tom Wu\n// All Rights Reserved.\n// See \"LICENSE\" for details.\n\n// Basic JavaScript BN library - subset useful for RSA encryption.\n\n/*\nLicensing (LICENSE)\n-------------------\n\nThis software is covered under the following copyright:\n*/\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n/*\nAddress all questions regarding this license to:\n\n  Tom Wu\n  tjw@cs.Stanford.EDU\n*/\nvar forge = require('./forge');\nmodule.exports = forge.jsbn = forge.jsbn || {};\n\n// Bits per digit\nvar dbits;\n\n// JavaScript engine analysis\nvar canary = 0xdeadbeefcafe;\nvar j_lm = (canary & 0xffffff) == 0xefcafe;\n\n// (public) Constructor\nfunction BigInteger(a, b, c) {\n  this.data = [];\n  if (a != null) if (\"number\" == typeof a) this.fromNumber(a, b, c);else if (b == null && \"string\" != typeof a) this.fromString(a, 256);else this.fromString(a, b);\n}\nforge.jsbn.BigInteger = BigInteger;\n\n// return new, unset BigInteger\nfunction nbi() {\n  return new BigInteger(null);\n}\n\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i, x, w, j, c, n) {\n  while (--n >= 0) {\n    var v = x * this.data[i++] + w.data[j] + c;\n    c = Math.floor(v / 0x4000000);\n    w.data[j++] = v & 0x3ffffff;\n  }\n  return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i, x, w, j, c, n) {\n  var xl = x & 0x7fff,\n    xh = x >> 15;\n  while (--n >= 0) {\n    var l = this.data[i] & 0x7fff;\n    var h = this.data[i++] >> 15;\n    var m = xh * l + h * xl;\n    l = xl * l + ((m & 0x7fff) << 15) + w.data[j] + (c & 0x3fffffff);\n    c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\n    w.data[j++] = l & 0x3fffffff;\n  }\n  return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i, x, w, j, c, n) {\n  var xl = x & 0x3fff,\n    xh = x >> 14;\n  while (--n >= 0) {\n    var l = this.data[i] & 0x3fff;\n    var h = this.data[i++] >> 14;\n    var m = xh * l + h * xl;\n    l = xl * l + ((m & 0x3fff) << 14) + w.data[j] + c;\n    c = (l >> 28) + (m >> 14) + xh * h;\n    w.data[j++] = l & 0xfffffff;\n  }\n  return c;\n}\n\n// node.js (no browser)\nif (typeof navigator === 'undefined') {\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n} else if (j_lm && navigator.appName == \"Microsoft Internet Explorer\") {\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n} else if (j_lm && navigator.appName != \"Netscape\") {\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n} else {\n  // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = (1 << dbits) - 1;\nBigInteger.prototype.DV = 1 << dbits;\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2, BI_FP);\nBigInteger.prototype.F1 = BI_FP - dbits;\nBigInteger.prototype.F2 = 2 * dbits - BI_FP;\n\n// Digit conversions\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nvar BI_RC = new Array();\nvar rr, vv;\nrr = \"0\".charCodeAt(0);\nfor (vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\nrr = \"a\".charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\nrr = \"A\".charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\nfunction int2char(n) {\n  return BI_RM.charAt(n);\n}\nfunction intAt(s, i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return c == null ? -1 : c;\n}\n\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n  for (var i = this.t - 1; i >= 0; --i) r.data[i] = this.data[i];\n  r.t = this.t;\n  r.s = this.s;\n}\n\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = x < 0 ? -1 : 0;\n  if (x > 0) this.data[0] = x;else if (x < -1) this.data[0] = x + this.DV;else this.t = 0;\n}\n\n// return bigint initialized to value\nfunction nbv(i) {\n  var r = nbi();\n  r.fromInt(i);\n  return r;\n}\n\n// (protected) set from string and radix\nfunction bnpFromString(s, b) {\n  var k;\n  if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 256) k = 8; // byte array\n  else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 4) k = 2;else {\n    this.fromRadix(s, b);\n    return;\n  }\n  this.t = 0;\n  this.s = 0;\n  var i = s.length,\n    mi = false,\n    sh = 0;\n  while (--i >= 0) {\n    var x = k == 8 ? s[i] & 0xff : intAt(s, i);\n    if (x < 0) {\n      if (s.charAt(i) == \"-\") mi = true;\n      continue;\n    }\n    mi = false;\n    if (sh == 0) this.data[this.t++] = x;else if (sh + k > this.DB) {\n      this.data[this.t - 1] |= (x & (1 << this.DB - sh) - 1) << sh;\n      this.data[this.t++] = x >> this.DB - sh;\n    } else this.data[this.t - 1] |= x << sh;\n    sh += k;\n    if (sh >= this.DB) sh -= this.DB;\n  }\n  if (k == 8 && (s[0] & 0x80) != 0) {\n    this.s = -1;\n    if (sh > 0) this.data[this.t - 1] |= (1 << this.DB - sh) - 1 << sh;\n  }\n  this.clamp();\n  if (mi) BigInteger.ZERO.subTo(this, this);\n}\n\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n  var c = this.s & this.DM;\n  while (this.t > 0 && this.data[this.t - 1] == c) --this.t;\n}\n\n// (public) return string representation in given radix\nfunction bnToString(b) {\n  if (this.s < 0) return \"-\" + this.negate().toString(b);\n  var k;\n  if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 4) k = 2;else return this.toRadix(b);\n  var km = (1 << k) - 1,\n    d,\n    m = false,\n    r = \"\",\n    i = this.t;\n  var p = this.DB - i * this.DB % k;\n  if (i-- > 0) {\n    if (p < this.DB && (d = this.data[i] >> p) > 0) {\n      m = true;\n      r = int2char(d);\n    }\n    while (i >= 0) {\n      if (p < k) {\n        d = (this.data[i] & (1 << p) - 1) << k - p;\n        d |= this.data[--i] >> (p += this.DB - k);\n      } else {\n        d = this.data[i] >> (p -= k) & km;\n        if (p <= 0) {\n          p += this.DB;\n          --i;\n        }\n      }\n      if (d > 0) m = true;\n      if (m) r += int2char(d);\n    }\n  }\n  return m ? r : \"0\";\n}\n\n// (public) -this\nfunction bnNegate() {\n  var r = nbi();\n  BigInteger.ZERO.subTo(this, r);\n  return r;\n}\n\n// (public) |this|\nfunction bnAbs() {\n  return this.s < 0 ? this.negate() : this;\n}\n\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n  var r = this.s - a.s;\n  if (r != 0) return r;\n  var i = this.t;\n  r = i - a.t;\n  if (r != 0) return this.s < 0 ? -r : r;\n  while (--i >= 0) if ((r = this.data[i] - a.data[i]) != 0) return r;\n  return 0;\n}\n\n// returns bit length of the integer x\nfunction nbits(x) {\n  var r = 1,\n    t;\n  if ((t = x >>> 16) != 0) {\n    x = t;\n    r += 16;\n  }\n  if ((t = x >> 8) != 0) {\n    x = t;\n    r += 8;\n  }\n  if ((t = x >> 4) != 0) {\n    x = t;\n    r += 4;\n  }\n  if ((t = x >> 2) != 0) {\n    x = t;\n    r += 2;\n  }\n  if ((t = x >> 1) != 0) {\n    x = t;\n    r += 1;\n  }\n  return r;\n}\n\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n  if (this.t <= 0) return 0;\n  return this.DB * (this.t - 1) + nbits(this.data[this.t - 1] ^ this.s & this.DM);\n}\n\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n, r) {\n  var i;\n  for (i = this.t - 1; i >= 0; --i) r.data[i + n] = this.data[i];\n  for (i = n - 1; i >= 0; --i) r.data[i] = 0;\n  r.t = this.t + n;\n  r.s = this.s;\n}\n\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n, r) {\n  for (var i = n; i < this.t; ++i) r.data[i - n] = this.data[i];\n  r.t = Math.max(this.t - n, 0);\n  r.s = this.s;\n}\n\n// (protected) r = this << n\nfunction bnpLShiftTo(n, r) {\n  var bs = n % this.DB;\n  var cbs = this.DB - bs;\n  var bm = (1 << cbs) - 1;\n  var ds = Math.floor(n / this.DB),\n    c = this.s << bs & this.DM,\n    i;\n  for (i = this.t - 1; i >= 0; --i) {\n    r.data[i + ds + 1] = this.data[i] >> cbs | c;\n    c = (this.data[i] & bm) << bs;\n  }\n  for (i = ds - 1; i >= 0; --i) r.data[i] = 0;\n  r.data[ds] = c;\n  r.t = this.t + ds + 1;\n  r.s = this.s;\n  r.clamp();\n}\n\n// (protected) r = this >> n\nfunction bnpRShiftTo(n, r) {\n  r.s = this.s;\n  var ds = Math.floor(n / this.DB);\n  if (ds >= this.t) {\n    r.t = 0;\n    return;\n  }\n  var bs = n % this.DB;\n  var cbs = this.DB - bs;\n  var bm = (1 << bs) - 1;\n  r.data[0] = this.data[ds] >> bs;\n  for (var i = ds + 1; i < this.t; ++i) {\n    r.data[i - ds - 1] |= (this.data[i] & bm) << cbs;\n    r.data[i - ds] = this.data[i] >> bs;\n  }\n  if (bs > 0) r.data[this.t - ds - 1] |= (this.s & bm) << cbs;\n  r.t = this.t - ds;\n  r.clamp();\n}\n\n// (protected) r = this - a\nfunction bnpSubTo(a, r) {\n  var i = 0,\n    c = 0,\n    m = Math.min(a.t, this.t);\n  while (i < m) {\n    c += this.data[i] - a.data[i];\n    r.data[i++] = c & this.DM;\n    c >>= this.DB;\n  }\n  if (a.t < this.t) {\n    c -= a.s;\n    while (i < this.t) {\n      c += this.data[i];\n      r.data[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  } else {\n    c += this.s;\n    while (i < a.t) {\n      c -= a.data[i];\n      r.data[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    c -= a.s;\n  }\n  r.s = c < 0 ? -1 : 0;\n  if (c < -1) r.data[i++] = this.DV + c;else if (c > 0) r.data[i++] = c;\n  r.t = i;\n  r.clamp();\n}\n\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a, r) {\n  var x = this.abs(),\n    y = a.abs();\n  var i = x.t;\n  r.t = i + y.t;\n  while (--i >= 0) r.data[i] = 0;\n  for (i = 0; i < y.t; ++i) r.data[i + x.t] = x.am(0, y.data[i], r, i, 0, x.t);\n  r.s = 0;\n  r.clamp();\n  if (this.s != a.s) BigInteger.ZERO.subTo(r, r);\n}\n\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2 * x.t;\n  while (--i >= 0) r.data[i] = 0;\n  for (i = 0; i < x.t - 1; ++i) {\n    var c = x.am(i, x.data[i], r, 2 * i, 0, 1);\n    if ((r.data[i + x.t] += x.am(i + 1, 2 * x.data[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {\n      r.data[i + x.t] -= x.DV;\n      r.data[i + x.t + 1] = 1;\n    }\n  }\n  if (r.t > 0) r.data[r.t - 1] += x.am(i, x.data[i], r, 2 * i, 0, 1);\n  r.s = 0;\n  r.clamp();\n}\n\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m, q, r) {\n  var pm = m.abs();\n  if (pm.t <= 0) return;\n  var pt = this.abs();\n  if (pt.t < pm.t) {\n    if (q != null) q.fromInt(0);\n    if (r != null) this.copyTo(r);\n    return;\n  }\n  if (r == null) r = nbi();\n  var y = nbi(),\n    ts = this.s,\n    ms = m.s;\n  var nsh = this.DB - nbits(pm.data[pm.t - 1]); // normalize modulus\n  if (nsh > 0) {\n    pm.lShiftTo(nsh, y);\n    pt.lShiftTo(nsh, r);\n  } else {\n    pm.copyTo(y);\n    pt.copyTo(r);\n  }\n  var ys = y.t;\n  var y0 = y.data[ys - 1];\n  if (y0 == 0) return;\n  var yt = y0 * (1 << this.F1) + (ys > 1 ? y.data[ys - 2] >> this.F2 : 0);\n  var d1 = this.FV / yt,\n    d2 = (1 << this.F1) / yt,\n    e = 1 << this.F2;\n  var i = r.t,\n    j = i - ys,\n    t = q == null ? nbi() : q;\n  y.dlShiftTo(j, t);\n  if (r.compareTo(t) >= 0) {\n    r.data[r.t++] = 1;\n    r.subTo(t, r);\n  }\n  BigInteger.ONE.dlShiftTo(ys, t);\n  t.subTo(y, y); // \"negative\" y so we can replace sub with am later\n  while (y.t < ys) y.data[y.t++] = 0;\n  while (--j >= 0) {\n    // Estimate quotient digit\n    var qd = r.data[--i] == y0 ? this.DM : Math.floor(r.data[i] * d1 + (r.data[i - 1] + e) * d2);\n    if ((r.data[i] += y.am(0, qd, r, j, 0, ys)) < qd) {\n      // Try it out\n      y.dlShiftTo(j, t);\n      r.subTo(t, r);\n      while (r.data[i] < --qd) r.subTo(t, r);\n    }\n  }\n  if (q != null) {\n    r.drShiftTo(ys, q);\n    if (ts != ms) BigInteger.ZERO.subTo(q, q);\n  }\n  r.t = ys;\n  r.clamp();\n  if (nsh > 0) r.rShiftTo(nsh, r); // Denormalize remainder\n  if (ts < 0) BigInteger.ZERO.subTo(r, r);\n}\n\n// (public) this mod a\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a, null, r);\n  if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r, r);\n  return r;\n}\n\n// Modular reduction using \"classic\" algorithm\nfunction Classic(m) {\n  this.m = m;\n}\nfunction cConvert(x) {\n  if (x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);else return x;\n}\nfunction cRevert(x) {\n  return x;\n}\nfunction cReduce(x) {\n  x.divRemTo(this.m, null, x);\n}\nfunction cMulTo(x, y, r) {\n  x.multiplyTo(y, r);\n  this.reduce(r);\n}\nfunction cSqrTo(x, r) {\n  x.squareTo(r);\n  this.reduce(r);\n}\nClassic.prototype.convert = cConvert;\nClassic.prototype.revert = cRevert;\nClassic.prototype.reduce = cReduce;\nClassic.prototype.mulTo = cMulTo;\nClassic.prototype.sqrTo = cSqrTo;\n\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n  if (this.t < 1) return 0;\n  var x = this.data[0];\n  if ((x & 1) == 0) return 0;\n  var y = x & 3; // y == 1/x mod 2^2\n  y = y * (2 - (x & 0xf) * y) & 0xf; // y == 1/x mod 2^4\n  y = y * (2 - (x & 0xff) * y) & 0xff; // y == 1/x mod 2^8\n  y = y * (2 - ((x & 0xffff) * y & 0xffff)) & 0xffff; // y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = y * (2 - x * y % this.DV) % this.DV; // y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return y > 0 ? this.DV - y : -y;\n}\n\n// Montgomery reduction\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp & 0x7fff;\n  this.mph = this.mp >> 15;\n  this.um = (1 << m.DB - 15) - 1;\n  this.mt2 = 2 * m.t;\n}\n\n// xR mod m\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t, r);\n  r.divRemTo(this.m, null, r);\n  if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r);\n  return r;\n}\n\n// x/R mod m\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n}\n\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n  while (x.t <= this.mt2)\n  // pad x so am has enough room later\n  x.data[x.t++] = 0;\n  for (var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x.data[i]*mp mod DV\n    var j = x.data[i] & 0x7fff;\n    var u0 = j * this.mpl + ((j * this.mph + (x.data[i] >> 15) * this.mpl & this.um) << 15) & x.DM;\n    // use am to combine the multiply-shift-add into one call\n    j = i + this.m.t;\n    x.data[j] += this.m.am(0, u0, x, i, 0, this.m.t);\n    // propagate carry\n    while (x.data[j] >= x.DV) {\n      x.data[j] -= x.DV;\n      x.data[++j]++;\n    }\n  }\n  x.clamp();\n  x.drShiftTo(this.m.t, x);\n  if (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\n}\n\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x, r) {\n  x.squareTo(r);\n  this.reduce(r);\n}\n\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x, y, r) {\n  x.multiplyTo(y, r);\n  this.reduce(r);\n}\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n\n// (protected) true iff this is even\nfunction bnpIsEven() {\n  return (this.t > 0 ? this.data[0] & 1 : this.s) == 0;\n}\n\n// (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\nfunction bnpExp(e, z) {\n  if (e > 0xffffffff || e < 1) return BigInteger.ONE;\n  var r = nbi(),\n    r2 = nbi(),\n    g = z.convert(this),\n    i = nbits(e) - 1;\n  g.copyTo(r);\n  while (--i >= 0) {\n    z.sqrTo(r, r2);\n    if ((e & 1 << i) > 0) z.mulTo(r2, g, r);else {\n      var t = r;\n      r = r2;\n      r2 = t;\n    }\n  }\n  return z.revert(r);\n}\n\n// (public) this^e % m, 0 <= e < 2^32\nfunction bnModPowInt(e, m) {\n  var z;\n  if (e < 256 || m.isEven()) z = new Classic(m);else z = new Montgomery(m);\n  return this.exp(e, z);\n}\n\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.isEven = bnpIsEven;\nBigInteger.prototype.exp = bnpExp;\n\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.modPowInt = bnModPowInt;\n\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n\n// jsbn2 lib\n\n//Copyright (c) 2005-2009  Tom Wu\n//All Rights Reserved.\n//See \"LICENSE\" for details (See jsbn.js for LICENSE).\n\n//Extended JavaScript BN functions, required for RSA private ops.\n\n//Version 1.1: new BigInteger(\"0\", 10) returns \"proper\" zero\n\n//(public)\nfunction bnClone() {\n  var r = nbi();\n  this.copyTo(r);\n  return r;\n}\n\n//(public) return value as integer\nfunction bnIntValue() {\n  if (this.s < 0) {\n    if (this.t == 1) return this.data[0] - this.DV;else if (this.t == 0) return -1;\n  } else if (this.t == 1) return this.data[0];else if (this.t == 0) return 0;\n  // assumes 16 < DB < 32\n  return (this.data[1] & (1 << 32 - this.DB) - 1) << this.DB | this.data[0];\n}\n\n//(public) return value as byte\nfunction bnByteValue() {\n  return this.t == 0 ? this.s : this.data[0] << 24 >> 24;\n}\n\n//(public) return value as short (assumes DB>=16)\nfunction bnShortValue() {\n  return this.t == 0 ? this.s : this.data[0] << 16 >> 16;\n}\n\n//(protected) return x s.t. r^x < DV\nfunction bnpChunkSize(r) {\n  return Math.floor(Math.LN2 * this.DB / Math.log(r));\n}\n\n//(public) 0 if this == 0, 1 if this > 0\nfunction bnSigNum() {\n  if (this.s < 0) return -1;else if (this.t <= 0 || this.t == 1 && this.data[0] <= 0) return 0;else return 1;\n}\n\n//(protected) convert to radix string\nfunction bnpToRadix(b) {\n  if (b == null) b = 10;\n  if (this.signum() == 0 || b < 2 || b > 36) return \"0\";\n  var cs = this.chunkSize(b);\n  var a = Math.pow(b, cs);\n  var d = nbv(a),\n    y = nbi(),\n    z = nbi(),\n    r = \"\";\n  this.divRemTo(d, y, z);\n  while (y.signum() > 0) {\n    r = (a + z.intValue()).toString(b).substr(1) + r;\n    y.divRemTo(d, y, z);\n  }\n  return z.intValue().toString(b) + r;\n}\n\n//(protected) convert from radix string\nfunction bnpFromRadix(s, b) {\n  this.fromInt(0);\n  if (b == null) b = 10;\n  var cs = this.chunkSize(b);\n  var d = Math.pow(b, cs),\n    mi = false,\n    j = 0,\n    w = 0;\n  for (var i = 0; i < s.length; ++i) {\n    var x = intAt(s, i);\n    if (x < 0) {\n      if (s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n      continue;\n    }\n    w = b * w + x;\n    if (++j >= cs) {\n      this.dMultiply(d);\n      this.dAddOffset(w, 0);\n      j = 0;\n      w = 0;\n    }\n  }\n  if (j > 0) {\n    this.dMultiply(Math.pow(b, j));\n    this.dAddOffset(w, 0);\n  }\n  if (mi) BigInteger.ZERO.subTo(this, this);\n}\n\n//(protected) alternate constructor\nfunction bnpFromNumber(a, b, c) {\n  if (\"number\" == typeof b) {\n    // new BigInteger(int,int,RNG)\n    if (a < 2) this.fromInt(1);else {\n      this.fromNumber(a, c);\n      if (!this.testBit(a - 1))\n        // force MSB set\n        this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, this);\n      if (this.isEven()) this.dAddOffset(1, 0); // force odd\n      while (!this.isProbablePrime(b)) {\n        this.dAddOffset(2, 0);\n        if (this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a - 1), this);\n      }\n    }\n  } else {\n    // new BigInteger(int,RNG)\n    var x = new Array(),\n      t = a & 7;\n    x.length = (a >> 3) + 1;\n    b.nextBytes(x);\n    if (t > 0) x[0] &= (1 << t) - 1;else x[0] = 0;\n    this.fromString(x, 256);\n  }\n}\n\n//(public) convert to bigendian byte array\nfunction bnToByteArray() {\n  var i = this.t,\n    r = new Array();\n  r[0] = this.s;\n  var p = this.DB - i * this.DB % 8,\n    d,\n    k = 0;\n  if (i-- > 0) {\n    if (p < this.DB && (d = this.data[i] >> p) != (this.s & this.DM) >> p) r[k++] = d | this.s << this.DB - p;\n    while (i >= 0) {\n      if (p < 8) {\n        d = (this.data[i] & (1 << p) - 1) << 8 - p;\n        d |= this.data[--i] >> (p += this.DB - 8);\n      } else {\n        d = this.data[i] >> (p -= 8) & 0xff;\n        if (p <= 0) {\n          p += this.DB;\n          --i;\n        }\n      }\n      if ((d & 0x80) != 0) d |= -256;\n      if (k == 0 && (this.s & 0x80) != (d & 0x80)) ++k;\n      if (k > 0 || d != this.s) r[k++] = d;\n    }\n  }\n  return r;\n}\nfunction bnEquals(a) {\n  return this.compareTo(a) == 0;\n}\nfunction bnMin(a) {\n  return this.compareTo(a) < 0 ? this : a;\n}\nfunction bnMax(a) {\n  return this.compareTo(a) > 0 ? this : a;\n}\n\n//(protected) r = this op a (bitwise)\nfunction bnpBitwiseTo(a, op, r) {\n  var i,\n    f,\n    m = Math.min(a.t, this.t);\n  for (i = 0; i < m; ++i) r.data[i] = op(this.data[i], a.data[i]);\n  if (a.t < this.t) {\n    f = a.s & this.DM;\n    for (i = m; i < this.t; ++i) r.data[i] = op(this.data[i], f);\n    r.t = this.t;\n  } else {\n    f = this.s & this.DM;\n    for (i = m; i < a.t; ++i) r.data[i] = op(f, a.data[i]);\n    r.t = a.t;\n  }\n  r.s = op(this.s, a.s);\n  r.clamp();\n}\n\n//(public) this & a\nfunction op_and(x, y) {\n  return x & y;\n}\nfunction bnAnd(a) {\n  var r = nbi();\n  this.bitwiseTo(a, op_and, r);\n  return r;\n}\n\n//(public) this | a\nfunction op_or(x, y) {\n  return x | y;\n}\nfunction bnOr(a) {\n  var r = nbi();\n  this.bitwiseTo(a, op_or, r);\n  return r;\n}\n\n//(public) this ^ a\nfunction op_xor(x, y) {\n  return x ^ y;\n}\nfunction bnXor(a) {\n  var r = nbi();\n  this.bitwiseTo(a, op_xor, r);\n  return r;\n}\n\n//(public) this & ~a\nfunction op_andnot(x, y) {\n  return x & ~y;\n}\nfunction bnAndNot(a) {\n  var r = nbi();\n  this.bitwiseTo(a, op_andnot, r);\n  return r;\n}\n\n//(public) ~this\nfunction bnNot() {\n  var r = nbi();\n  for (var i = 0; i < this.t; ++i) r.data[i] = this.DM & ~this.data[i];\n  r.t = this.t;\n  r.s = ~this.s;\n  return r;\n}\n\n//(public) this << n\nfunction bnShiftLeft(n) {\n  var r = nbi();\n  if (n < 0) this.rShiftTo(-n, r);else this.lShiftTo(n, r);\n  return r;\n}\n\n//(public) this >> n\nfunction bnShiftRight(n) {\n  var r = nbi();\n  if (n < 0) this.lShiftTo(-n, r);else this.rShiftTo(n, r);\n  return r;\n}\n\n//return index of lowest 1-bit in x, x < 2^31\nfunction lbit(x) {\n  if (x == 0) return -1;\n  var r = 0;\n  if ((x & 0xffff) == 0) {\n    x >>= 16;\n    r += 16;\n  }\n  if ((x & 0xff) == 0) {\n    x >>= 8;\n    r += 8;\n  }\n  if ((x & 0xf) == 0) {\n    x >>= 4;\n    r += 4;\n  }\n  if ((x & 3) == 0) {\n    x >>= 2;\n    r += 2;\n  }\n  if ((x & 1) == 0) ++r;\n  return r;\n}\n\n//(public) returns index of lowest 1-bit (or -1 if none)\nfunction bnGetLowestSetBit() {\n  for (var i = 0; i < this.t; ++i) if (this.data[i] != 0) return i * this.DB + lbit(this.data[i]);\n  if (this.s < 0) return this.t * this.DB;\n  return -1;\n}\n\n//return number of 1 bits in x\nfunction cbit(x) {\n  var r = 0;\n  while (x != 0) {\n    x &= x - 1;\n    ++r;\n  }\n  return r;\n}\n\n//(public) return number of set bits\nfunction bnBitCount() {\n  var r = 0,\n    x = this.s & this.DM;\n  for (var i = 0; i < this.t; ++i) r += cbit(this.data[i] ^ x);\n  return r;\n}\n\n//(public) true iff nth bit is set\nfunction bnTestBit(n) {\n  var j = Math.floor(n / this.DB);\n  if (j >= this.t) return this.s != 0;\n  return (this.data[j] & 1 << n % this.DB) != 0;\n}\n\n//(protected) this op (1<<n)\nfunction bnpChangeBit(n, op) {\n  var r = BigInteger.ONE.shiftLeft(n);\n  this.bitwiseTo(r, op, r);\n  return r;\n}\n\n//(public) this | (1<<n)\nfunction bnSetBit(n) {\n  return this.changeBit(n, op_or);\n}\n\n//(public) this & ~(1<<n)\nfunction bnClearBit(n) {\n  return this.changeBit(n, op_andnot);\n}\n\n//(public) this ^ (1<<n)\nfunction bnFlipBit(n) {\n  return this.changeBit(n, op_xor);\n}\n\n//(protected) r = this + a\nfunction bnpAddTo(a, r) {\n  var i = 0,\n    c = 0,\n    m = Math.min(a.t, this.t);\n  while (i < m) {\n    c += this.data[i] + a.data[i];\n    r.data[i++] = c & this.DM;\n    c >>= this.DB;\n  }\n  if (a.t < this.t) {\n    c += a.s;\n    while (i < this.t) {\n      c += this.data[i];\n      r.data[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  } else {\n    c += this.s;\n    while (i < a.t) {\n      c += a.data[i];\n      r.data[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    c += a.s;\n  }\n  r.s = c < 0 ? -1 : 0;\n  if (c > 0) r.data[i++] = c;else if (c < -1) r.data[i++] = this.DV + c;\n  r.t = i;\n  r.clamp();\n}\n\n//(public) this + a\nfunction bnAdd(a) {\n  var r = nbi();\n  this.addTo(a, r);\n  return r;\n}\n\n//(public) this - a\nfunction bnSubtract(a) {\n  var r = nbi();\n  this.subTo(a, r);\n  return r;\n}\n\n//(public) this * a\nfunction bnMultiply(a) {\n  var r = nbi();\n  this.multiplyTo(a, r);\n  return r;\n}\n\n//(public) this / a\nfunction bnDivide(a) {\n  var r = nbi();\n  this.divRemTo(a, r, null);\n  return r;\n}\n\n//(public) this % a\nfunction bnRemainder(a) {\n  var r = nbi();\n  this.divRemTo(a, null, r);\n  return r;\n}\n\n//(public) [this/a,this%a]\nfunction bnDivideAndRemainder(a) {\n  var q = nbi(),\n    r = nbi();\n  this.divRemTo(a, q, r);\n  return new Array(q, r);\n}\n\n//(protected) this *= n, this >= 0, 1 < n < DV\nfunction bnpDMultiply(n) {\n  this.data[this.t] = this.am(0, n - 1, this, 0, 0, this.t);\n  ++this.t;\n  this.clamp();\n}\n\n//(protected) this += n << w words, this >= 0\nfunction bnpDAddOffset(n, w) {\n  if (n == 0) return;\n  while (this.t <= w) this.data[this.t++] = 0;\n  this.data[w] += n;\n  while (this.data[w] >= this.DV) {\n    this.data[w] -= this.DV;\n    if (++w >= this.t) this.data[this.t++] = 0;\n    ++this.data[w];\n  }\n}\n\n//A \"null\" reducer\nfunction NullExp() {}\nfunction nNop(x) {\n  return x;\n}\nfunction nMulTo(x, y, r) {\n  x.multiplyTo(y, r);\n}\nfunction nSqrTo(x, r) {\n  x.squareTo(r);\n}\nNullExp.prototype.convert = nNop;\nNullExp.prototype.revert = nNop;\nNullExp.prototype.mulTo = nMulTo;\nNullExp.prototype.sqrTo = nSqrTo;\n\n//(public) this^e\nfunction bnPow(e) {\n  return this.exp(e, new NullExp());\n}\n\n//(protected) r = lower n words of \"this * a\", a.t <= n\n//\"this\" should be the larger one if appropriate.\nfunction bnpMultiplyLowerTo(a, n, r) {\n  var i = Math.min(this.t + a.t, n);\n  r.s = 0; // assumes a,this >= 0\n  r.t = i;\n  while (i > 0) r.data[--i] = 0;\n  var j;\n  for (j = r.t - this.t; i < j; ++i) r.data[i + this.t] = this.am(0, a.data[i], r, i, 0, this.t);\n  for (j = Math.min(a.t, n); i < j; ++i) this.am(0, a.data[i], r, i, 0, n - i);\n  r.clamp();\n}\n\n//(protected) r = \"this * a\" without lower n words, n > 0\n//\"this\" should be the larger one if appropriate.\nfunction bnpMultiplyUpperTo(a, n, r) {\n  --n;\n  var i = r.t = this.t + a.t - n;\n  r.s = 0; // assumes a,this >= 0\n  while (--i >= 0) r.data[i] = 0;\n  for (i = Math.max(n - this.t, 0); i < a.t; ++i) r.data[this.t + i - n] = this.am(n - i, a.data[i], r, 0, 0, this.t + i - n);\n  r.clamp();\n  r.drShiftTo(1, r);\n}\n\n//Barrett modular reduction\nfunction Barrett(m) {\n  // setup Barrett\n  this.r2 = nbi();\n  this.q3 = nbi();\n  BigInteger.ONE.dlShiftTo(2 * m.t, this.r2);\n  this.mu = this.r2.divide(m);\n  this.m = m;\n}\nfunction barrettConvert(x) {\n  if (x.s < 0 || x.t > 2 * this.m.t) return x.mod(this.m);else if (x.compareTo(this.m) < 0) return x;else {\n    var r = nbi();\n    x.copyTo(r);\n    this.reduce(r);\n    return r;\n  }\n}\nfunction barrettRevert(x) {\n  return x;\n}\n\n//x = x mod m (HAC 14.42)\nfunction barrettReduce(x) {\n  x.drShiftTo(this.m.t - 1, this.r2);\n  if (x.t > this.m.t + 1) {\n    x.t = this.m.t + 1;\n    x.clamp();\n  }\n  this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3);\n  this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2);\n  while (x.compareTo(this.r2) < 0) x.dAddOffset(1, this.m.t + 1);\n  x.subTo(this.r2, x);\n  while (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\n}\n\n//r = x^2 mod m; x != r\nfunction barrettSqrTo(x, r) {\n  x.squareTo(r);\n  this.reduce(r);\n}\n\n//r = x*y mod m; x,y != r\nfunction barrettMulTo(x, y, r) {\n  x.multiplyTo(y, r);\n  this.reduce(r);\n}\nBarrett.prototype.convert = barrettConvert;\nBarrett.prototype.revert = barrettRevert;\nBarrett.prototype.reduce = barrettReduce;\nBarrett.prototype.mulTo = barrettMulTo;\nBarrett.prototype.sqrTo = barrettSqrTo;\n\n//(public) this^e % m (HAC 14.85)\nfunction bnModPow(e, m) {\n  var i = e.bitLength(),\n    k,\n    r = nbv(1),\n    z;\n  if (i <= 0) return r;else if (i < 18) k = 1;else if (i < 48) k = 3;else if (i < 144) k = 4;else if (i < 768) k = 5;else k = 6;\n  if (i < 8) z = new Classic(m);else if (m.isEven()) z = new Barrett(m);else z = new Montgomery(m);\n\n  // precomputation\n  var g = new Array(),\n    n = 3,\n    k1 = k - 1,\n    km = (1 << k) - 1;\n  g[1] = z.convert(this);\n  if (k > 1) {\n    var g2 = nbi();\n    z.sqrTo(g[1], g2);\n    while (n <= km) {\n      g[n] = nbi();\n      z.mulTo(g2, g[n - 2], g[n]);\n      n += 2;\n    }\n  }\n  var j = e.t - 1,\n    w,\n    is1 = true,\n    r2 = nbi(),\n    t;\n  i = nbits(e.data[j]) - 1;\n  while (j >= 0) {\n    if (i >= k1) w = e.data[j] >> i - k1 & km;else {\n      w = (e.data[j] & (1 << i + 1) - 1) << k1 - i;\n      if (j > 0) w |= e.data[j - 1] >> this.DB + i - k1;\n    }\n    n = k;\n    while ((w & 1) == 0) {\n      w >>= 1;\n      --n;\n    }\n    if ((i -= n) < 0) {\n      i += this.DB;\n      --j;\n    }\n    if (is1) {\n      // ret == 1, don't bother squaring or multiplying it\n      g[w].copyTo(r);\n      is1 = false;\n    } else {\n      while (n > 1) {\n        z.sqrTo(r, r2);\n        z.sqrTo(r2, r);\n        n -= 2;\n      }\n      if (n > 0) z.sqrTo(r, r2);else {\n        t = r;\n        r = r2;\n        r2 = t;\n      }\n      z.mulTo(r2, g[w], r);\n    }\n    while (j >= 0 && (e.data[j] & 1 << i) == 0) {\n      z.sqrTo(r, r2);\n      t = r;\n      r = r2;\n      r2 = t;\n      if (--i < 0) {\n        i = this.DB - 1;\n        --j;\n      }\n    }\n  }\n  return z.revert(r);\n}\n\n//(public) gcd(this,a) (HAC 14.54)\nfunction bnGCD(a) {\n  var x = this.s < 0 ? this.negate() : this.clone();\n  var y = a.s < 0 ? a.negate() : a.clone();\n  if (x.compareTo(y) < 0) {\n    var t = x;\n    x = y;\n    y = t;\n  }\n  var i = x.getLowestSetBit(),\n    g = y.getLowestSetBit();\n  if (g < 0) return x;\n  if (i < g) g = i;\n  if (g > 0) {\n    x.rShiftTo(g, x);\n    y.rShiftTo(g, y);\n  }\n  while (x.signum() > 0) {\n    if ((i = x.getLowestSetBit()) > 0) x.rShiftTo(i, x);\n    if ((i = y.getLowestSetBit()) > 0) y.rShiftTo(i, y);\n    if (x.compareTo(y) >= 0) {\n      x.subTo(y, x);\n      x.rShiftTo(1, x);\n    } else {\n      y.subTo(x, y);\n      y.rShiftTo(1, y);\n    }\n  }\n  if (g > 0) y.lShiftTo(g, y);\n  return y;\n}\n\n//(protected) this % n, n < 2^26\nfunction bnpModInt(n) {\n  if (n <= 0) return 0;\n  var d = this.DV % n,\n    r = this.s < 0 ? n - 1 : 0;\n  if (this.t > 0) if (d == 0) r = this.data[0] % n;else for (var i = this.t - 1; i >= 0; --i) r = (d * r + this.data[i]) % n;\n  return r;\n}\n\n//(public) 1/this % m (HAC 14.61)\nfunction bnModInverse(m) {\n  var ac = m.isEven();\n  if (this.isEven() && ac || m.signum() == 0) return BigInteger.ZERO;\n  var u = m.clone(),\n    v = this.clone();\n  var a = nbv(1),\n    b = nbv(0),\n    c = nbv(0),\n    d = nbv(1);\n  while (u.signum() != 0) {\n    while (u.isEven()) {\n      u.rShiftTo(1, u);\n      if (ac) {\n        if (!a.isEven() || !b.isEven()) {\n          a.addTo(this, a);\n          b.subTo(m, b);\n        }\n        a.rShiftTo(1, a);\n      } else if (!b.isEven()) b.subTo(m, b);\n      b.rShiftTo(1, b);\n    }\n    while (v.isEven()) {\n      v.rShiftTo(1, v);\n      if (ac) {\n        if (!c.isEven() || !d.isEven()) {\n          c.addTo(this, c);\n          d.subTo(m, d);\n        }\n        c.rShiftTo(1, c);\n      } else if (!d.isEven()) d.subTo(m, d);\n      d.rShiftTo(1, d);\n    }\n    if (u.compareTo(v) >= 0) {\n      u.subTo(v, u);\n      if (ac) a.subTo(c, a);\n      b.subTo(d, b);\n    } else {\n      v.subTo(u, v);\n      if (ac) c.subTo(a, c);\n      d.subTo(b, d);\n    }\n  }\n  if (v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\n  if (d.compareTo(m) >= 0) return d.subtract(m);\n  if (d.signum() < 0) d.addTo(m, d);else return d;\n  if (d.signum() < 0) return d.add(m);else return d;\n}\nvar lowprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509];\nvar lplim = (1 << 26) / lowprimes[lowprimes.length - 1];\n\n//(public) test primality with certainty >= 1-.5^t\nfunction bnIsProbablePrime(t) {\n  var i,\n    x = this.abs();\n  if (x.t == 1 && x.data[0] <= lowprimes[lowprimes.length - 1]) {\n    for (i = 0; i < lowprimes.length; ++i) if (x.data[0] == lowprimes[i]) return true;\n    return false;\n  }\n  if (x.isEven()) return false;\n  i = 1;\n  while (i < lowprimes.length) {\n    var m = lowprimes[i],\n      j = i + 1;\n    while (j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n    m = x.modInt(m);\n    while (i < j) if (m % lowprimes[i++] == 0) return false;\n  }\n  return x.millerRabin(t);\n}\n\n//(protected) true if probably prime (HAC 4.24, Miller-Rabin)\nfunction bnpMillerRabin(t) {\n  var n1 = this.subtract(BigInteger.ONE);\n  var k = n1.getLowestSetBit();\n  if (k <= 0) return false;\n  var r = n1.shiftRight(k);\n  var prng = bnGetPrng();\n  var a;\n  for (var i = 0; i < t; ++i) {\n    // select witness 'a' at random from between 1 and n1\n    do {\n      a = new BigInteger(this.bitLength(), prng);\n    } while (a.compareTo(BigInteger.ONE) <= 0 || a.compareTo(n1) >= 0);\n    var y = a.modPow(r, this);\n    if (y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n      var j = 1;\n      while (j++ < k && y.compareTo(n1) != 0) {\n        y = y.modPowInt(2, this);\n        if (y.compareTo(BigInteger.ONE) == 0) return false;\n      }\n      if (y.compareTo(n1) != 0) return false;\n    }\n  }\n  return true;\n}\n\n// get pseudo random number generator\nfunction bnGetPrng() {\n  // create prng with api that matches BigInteger secure random\n  return {\n    // x is an array to fill with bytes\n    nextBytes: function (x) {\n      for (var i = 0; i < x.length; ++i) {\n        x[i] = Math.floor(Math.random() * 0x0100);\n      }\n    }\n  };\n}\n\n//protected\nBigInteger.prototype.chunkSize = bnpChunkSize;\nBigInteger.prototype.toRadix = bnpToRadix;\nBigInteger.prototype.fromRadix = bnpFromRadix;\nBigInteger.prototype.fromNumber = bnpFromNumber;\nBigInteger.prototype.bitwiseTo = bnpBitwiseTo;\nBigInteger.prototype.changeBit = bnpChangeBit;\nBigInteger.prototype.addTo = bnpAddTo;\nBigInteger.prototype.dMultiply = bnpDMultiply;\nBigInteger.prototype.dAddOffset = bnpDAddOffset;\nBigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\nBigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\nBigInteger.prototype.modInt = bnpModInt;\nBigInteger.prototype.millerRabin = bnpMillerRabin;\n\n//public\nBigInteger.prototype.clone = bnClone;\nBigInteger.prototype.intValue = bnIntValue;\nBigInteger.prototype.byteValue = bnByteValue;\nBigInteger.prototype.shortValue = bnShortValue;\nBigInteger.prototype.signum = bnSigNum;\nBigInteger.prototype.toByteArray = bnToByteArray;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.min = bnMin;\nBigInteger.prototype.max = bnMax;\nBigInteger.prototype.and = bnAnd;\nBigInteger.prototype.or = bnOr;\nBigInteger.prototype.xor = bnXor;\nBigInteger.prototype.andNot = bnAndNot;\nBigInteger.prototype.not = bnNot;\nBigInteger.prototype.shiftLeft = bnShiftLeft;\nBigInteger.prototype.shiftRight = bnShiftRight;\nBigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\nBigInteger.prototype.bitCount = bnBitCount;\nBigInteger.prototype.testBit = bnTestBit;\nBigInteger.prototype.setBit = bnSetBit;\nBigInteger.prototype.clearBit = bnClearBit;\nBigInteger.prototype.flipBit = bnFlipBit;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.remainder = bnRemainder;\nBigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\nBigInteger.prototype.modPow = bnModPow;\nBigInteger.prototype.modInverse = bnModInverse;\nBigInteger.prototype.pow = bnPow;\nBigInteger.prototype.gcd = bnGCD;\nBigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n\n//BigInteger interfaces not implemented in jsbn:\n\n//BigInteger(int signum, byte[] magnitude)\n//double doubleValue()\n//float floatValue()\n//int hashCode()\n//long longValue()\n//static BigInteger valueOf(long val)","map":{"version":3,"names":["forge","require","module","exports","jsbn","dbits","canary","j_lm","BigInteger","a","b","c","data","fromNumber","fromString","nbi","am1","i","x","w","j","n","v","Math","floor","am2","xl","xh","l","h","m","am3","navigator","prototype","am","appName","DB","DM","DV","BI_FP","FV","pow","F1","F2","BI_RM","BI_RC","Array","rr","vv","charCodeAt","int2char","charAt","intAt","s","bnpCopyTo","r","t","bnpFromInt","nbv","fromInt","bnpFromString","k","fromRadix","length","mi","sh","clamp","ZERO","subTo","bnpClamp","bnToString","negate","toString","toRadix","km","d","p","bnNegate","bnAbs","bnCompareTo","nbits","bnBitLength","bnpDLShiftTo","bnpDRShiftTo","max","bnpLShiftTo","bs","cbs","bm","ds","bnpRShiftTo","bnpSubTo","min","bnpMultiplyTo","abs","y","bnpSquareTo","bnpDivRemTo","q","pm","pt","copyTo","ts","ms","nsh","lShiftTo","ys","y0","yt","d1","d2","e","dlShiftTo","compareTo","ONE","qd","drShiftTo","rShiftTo","bnMod","divRemTo","Classic","cConvert","mod","cRevert","cReduce","cMulTo","multiplyTo","reduce","cSqrTo","squareTo","convert","revert","mulTo","sqrTo","bnpInvDigit","Montgomery","mp","invDigit","mpl","mph","um","mt2","montConvert","montRevert","montReduce","u0","montSqrTo","montMulTo","bnpIsEven","bnpExp","z","r2","g","bnModPowInt","isEven","exp","bitLength","modPowInt","bnClone","bnIntValue","bnByteValue","bnShortValue","bnpChunkSize","LN2","log","bnSigNum","bnpToRadix","signum","cs","chunkSize","intValue","substr","bnpFromRadix","dMultiply","dAddOffset","bnpFromNumber","testBit","bitwiseTo","shiftLeft","op_or","isProbablePrime","nextBytes","bnToByteArray","bnEquals","bnMin","bnMax","bnpBitwiseTo","op","f","op_and","bnAnd","bnOr","op_xor","bnXor","op_andnot","bnAndNot","bnNot","bnShiftLeft","bnShiftRight","lbit","bnGetLowestSetBit","cbit","bnBitCount","bnTestBit","bnpChangeBit","bnSetBit","changeBit","bnClearBit","bnFlipBit","bnpAddTo","bnAdd","addTo","bnSubtract","bnMultiply","bnDivide","bnRemainder","bnDivideAndRemainder","bnpDMultiply","bnpDAddOffset","NullExp","nNop","nMulTo","nSqrTo","bnPow","bnpMultiplyLowerTo","bnpMultiplyUpperTo","Barrett","q3","mu","divide","barrettConvert","barrettRevert","barrettReduce","multiplyUpperTo","multiplyLowerTo","barrettSqrTo","barrettMulTo","bnModPow","k1","g2","is1","bnGCD","clone","getLowestSetBit","bnpModInt","bnModInverse","ac","u","subtract","add","lowprimes","lplim","bnIsProbablePrime","modInt","millerRabin","bnpMillerRabin","n1","shiftRight","prng","bnGetPrng","modPow","random","byteValue","shortValue","toByteArray","equals","and","or","xor","andNot","not","bitCount","setBit","clearBit","flipBit","multiply","remainder","divideAndRemainder","modInverse","gcd"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/node-forge/lib/jsbn.js"],"sourcesContent":["// Copyright (c) 2005  Tom Wu\n// All Rights Reserved.\n// See \"LICENSE\" for details.\n\n// Basic JavaScript BN library - subset useful for RSA encryption.\n\n/*\nLicensing (LICENSE)\n-------------------\n\nThis software is covered under the following copyright:\n*/\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n/*\nAddress all questions regarding this license to:\n\n  Tom Wu\n  tjw@cs.Stanford.EDU\n*/\nvar forge = require('./forge');\n\nmodule.exports = forge.jsbn = forge.jsbn || {};\n\n// Bits per digit\nvar dbits;\n\n// JavaScript engine analysis\nvar canary = 0xdeadbeefcafe;\nvar j_lm = ((canary&0xffffff)==0xefcafe);\n\n// (public) Constructor\nfunction BigInteger(a,b,c) {\n  this.data = [];\n  if(a != null)\n    if(\"number\" == typeof a) this.fromNumber(a,b,c);\n    else if(b == null && \"string\" != typeof a) this.fromString(a,256);\n    else this.fromString(a,b);\n}\nforge.jsbn.BigInteger = BigInteger;\n\n// return new, unset BigInteger\nfunction nbi() { return new BigInteger(null); }\n\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i,x,w,j,c,n) {\n  while(--n >= 0) {\n    var v = x*this.data[i++]+w.data[j]+c;\n    c = Math.floor(v/0x4000000);\n    w.data[j++] = v&0x3ffffff;\n  }\n  return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i,x,w,j,c,n) {\n  var xl = x&0x7fff, xh = x>>15;\n  while(--n >= 0) {\n    var l = this.data[i]&0x7fff;\n    var h = this.data[i++]>>15;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x7fff)<<15)+w.data[j]+(c&0x3fffffff);\n    c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);\n    w.data[j++] = l&0x3fffffff;\n  }\n  return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i,x,w,j,c,n) {\n  var xl = x&0x3fff, xh = x>>14;\n  while(--n >= 0) {\n    var l = this.data[i]&0x3fff;\n    var h = this.data[i++]>>14;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x3fff)<<14)+w.data[j]+c;\n    c = (l>>28)+(m>>14)+xh*h;\n    w.data[j++] = l&0xfffffff;\n  }\n  return c;\n}\n\n// node.js (no browser)\nif(typeof(navigator) === 'undefined')\n{\n   BigInteger.prototype.am = am3;\n   dbits = 28;\n} else if(j_lm && (navigator.appName == \"Microsoft Internet Explorer\")) {\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n} else if(j_lm && (navigator.appName != \"Netscape\")) {\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n} else { // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\n\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = ((1<<dbits)-1);\nBigInteger.prototype.DV = (1<<dbits);\n\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2,BI_FP);\nBigInteger.prototype.F1 = BI_FP-dbits;\nBigInteger.prototype.F2 = 2*dbits-BI_FP;\n\n// Digit conversions\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nvar BI_RC = new Array();\nvar rr,vv;\nrr = \"0\".charCodeAt(0);\nfor(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\nrr = \"a\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\nrr = \"A\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\nfunction int2char(n) { return BI_RM.charAt(n); }\nfunction intAt(s,i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return (c==null)?-1:c;\n}\n\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n  for(var i = this.t-1; i >= 0; --i) r.data[i] = this.data[i];\n  r.t = this.t;\n  r.s = this.s;\n}\n\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = (x<0)?-1:0;\n  if(x > 0) this.data[0] = x;\n  else if(x < -1) this.data[0] = x+this.DV;\n  else this.t = 0;\n}\n\n// return bigint initialized to value\nfunction nbv(i) { var r = nbi(); r.fromInt(i); return r; }\n\n// (protected) set from string and radix\nfunction bnpFromString(s,b) {\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 256) k = 8; // byte array\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else { this.fromRadix(s,b); return; }\n  this.t = 0;\n  this.s = 0;\n  var i = s.length, mi = false, sh = 0;\n  while(--i >= 0) {\n    var x = (k==8)?s[i]&0xff:intAt(s,i);\n    if(x < 0) {\n      if(s.charAt(i) == \"-\") mi = true;\n      continue;\n    }\n    mi = false;\n    if(sh == 0)\n      this.data[this.t++] = x;\n    else if(sh+k > this.DB) {\n      this.data[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;\n      this.data[this.t++] = (x>>(this.DB-sh));\n    } else\n      this.data[this.t-1] |= x<<sh;\n    sh += k;\n    if(sh >= this.DB) sh -= this.DB;\n  }\n  if(k == 8 && (s[0]&0x80) != 0) {\n    this.s = -1;\n    if(sh > 0) this.data[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;\n  }\n  this.clamp();\n  if(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n  var c = this.s&this.DM;\n  while(this.t > 0 && this.data[this.t-1] == c) --this.t;\n}\n\n// (public) return string representation in given radix\nfunction bnToString(b) {\n  if(this.s < 0) return \"-\"+this.negate().toString(b);\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else return this.toRadix(b);\n  var km = (1<<k)-1, d, m = false, r = \"\", i = this.t;\n  var p = this.DB-(i*this.DB)%k;\n  if(i-- > 0) {\n    if(p < this.DB && (d = this.data[i]>>p) > 0) { m = true; r = int2char(d); }\n    while(i >= 0) {\n      if(p < k) {\n        d = (this.data[i]&((1<<p)-1))<<(k-p);\n        d |= this.data[--i]>>(p+=this.DB-k);\n      } else {\n        d = (this.data[i]>>(p-=k))&km;\n        if(p <= 0) { p += this.DB; --i; }\n      }\n      if(d > 0) m = true;\n      if(m) r += int2char(d);\n    }\n  }\n  return m?r:\"0\";\n}\n\n// (public) -this\nfunction bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }\n\n// (public) |this|\nfunction bnAbs() { return (this.s<0)?this.negate():this; }\n\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n  var r = this.s-a.s;\n  if(r != 0) return r;\n  var i = this.t;\n  r = i-a.t;\n  if(r != 0) return (this.s<0)?-r:r;\n  while(--i >= 0) if((r=this.data[i]-a.data[i]) != 0) return r;\n  return 0;\n}\n\n// returns bit length of the integer x\nfunction nbits(x) {\n  var r = 1, t;\n  if((t=x>>>16) != 0) { x = t; r += 16; }\n  if((t=x>>8) != 0) { x = t; r += 8; }\n  if((t=x>>4) != 0) { x = t; r += 4; }\n  if((t=x>>2) != 0) { x = t; r += 2; }\n  if((t=x>>1) != 0) { x = t; r += 1; }\n  return r;\n}\n\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n  if(this.t <= 0) return 0;\n  return this.DB*(this.t-1)+nbits(this.data[this.t-1]^(this.s&this.DM));\n}\n\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n,r) {\n  var i;\n  for(i = this.t-1; i >= 0; --i) r.data[i+n] = this.data[i];\n  for(i = n-1; i >= 0; --i) r.data[i] = 0;\n  r.t = this.t+n;\n  r.s = this.s;\n}\n\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n,r) {\n  for(var i = n; i < this.t; ++i) r.data[i-n] = this.data[i];\n  r.t = Math.max(this.t-n,0);\n  r.s = this.s;\n}\n\n// (protected) r = this << n\nfunction bnpLShiftTo(n,r) {\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<cbs)-1;\n  var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;\n  for(i = this.t-1; i >= 0; --i) {\n    r.data[i+ds+1] = (this.data[i]>>cbs)|c;\n    c = (this.data[i]&bm)<<bs;\n  }\n  for(i = ds-1; i >= 0; --i) r.data[i] = 0;\n  r.data[ds] = c;\n  r.t = this.t+ds+1;\n  r.s = this.s;\n  r.clamp();\n}\n\n// (protected) r = this >> n\nfunction bnpRShiftTo(n,r) {\n  r.s = this.s;\n  var ds = Math.floor(n/this.DB);\n  if(ds >= this.t) { r.t = 0; return; }\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<bs)-1;\n  r.data[0] = this.data[ds]>>bs;\n  for(var i = ds+1; i < this.t; ++i) {\n    r.data[i-ds-1] |= (this.data[i]&bm)<<cbs;\n    r.data[i-ds] = this.data[i]>>bs;\n  }\n  if(bs > 0) r.data[this.t-ds-1] |= (this.s&bm)<<cbs;\n  r.t = this.t-ds;\n  r.clamp();\n}\n\n// (protected) r = this - a\nfunction bnpSubTo(a,r) {\n  var i = 0, c = 0, m = Math.min(a.t,this.t);\n  while(i < m) {\n    c += this.data[i]-a.data[i];\n    r.data[i++] = c&this.DM;\n    c >>= this.DB;\n  }\n  if(a.t < this.t) {\n    c -= a.s;\n    while(i < this.t) {\n      c += this.data[i];\n      r.data[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  } else {\n    c += this.s;\n    while(i < a.t) {\n      c -= a.data[i];\n      r.data[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c -= a.s;\n  }\n  r.s = (c<0)?-1:0;\n  if(c < -1) r.data[i++] = this.DV+c;\n  else if(c > 0) r.data[i++] = c;\n  r.t = i;\n  r.clamp();\n}\n\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a,r) {\n  var x = this.abs(), y = a.abs();\n  var i = x.t;\n  r.t = i+y.t;\n  while(--i >= 0) r.data[i] = 0;\n  for(i = 0; i < y.t; ++i) r.data[i+x.t] = x.am(0,y.data[i],r,i,0,x.t);\n  r.s = 0;\n  r.clamp();\n  if(this.s != a.s) BigInteger.ZERO.subTo(r,r);\n}\n\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2*x.t;\n  while(--i >= 0) r.data[i] = 0;\n  for(i = 0; i < x.t-1; ++i) {\n    var c = x.am(i,x.data[i],r,2*i,0,1);\n    if((r.data[i+x.t]+=x.am(i+1,2*x.data[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {\n      r.data[i+x.t] -= x.DV;\n      r.data[i+x.t+1] = 1;\n    }\n  }\n  if(r.t > 0) r.data[r.t-1] += x.am(i,x.data[i],r,2*i,0,1);\n  r.s = 0;\n  r.clamp();\n}\n\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m,q,r) {\n  var pm = m.abs();\n  if(pm.t <= 0) return;\n  var pt = this.abs();\n  if(pt.t < pm.t) {\n    if(q != null) q.fromInt(0);\n    if(r != null) this.copyTo(r);\n    return;\n  }\n  if(r == null) r = nbi();\n  var y = nbi(), ts = this.s, ms = m.s;\n  var nsh = this.DB-nbits(pm.data[pm.t-1]);\t// normalize modulus\n  if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); } else { pm.copyTo(y); pt.copyTo(r); }\n  var ys = y.t;\n  var y0 = y.data[ys-1];\n  if(y0 == 0) return;\n  var yt = y0*(1<<this.F1)+((ys>1)?y.data[ys-2]>>this.F2:0);\n  var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;\n  var i = r.t, j = i-ys, t = (q==null)?nbi():q;\n  y.dlShiftTo(j,t);\n  if(r.compareTo(t) >= 0) {\n    r.data[r.t++] = 1;\n    r.subTo(t,r);\n  }\n  BigInteger.ONE.dlShiftTo(ys,t);\n  t.subTo(y,y);\t// \"negative\" y so we can replace sub with am later\n  while(y.t < ys) y.data[y.t++] = 0;\n  while(--j >= 0) {\n    // Estimate quotient digit\n    var qd = (r.data[--i]==y0)?this.DM:Math.floor(r.data[i]*d1+(r.data[i-1]+e)*d2);\n    if((r.data[i]+=y.am(0,qd,r,j,0,ys)) < qd) {\t// Try it out\n      y.dlShiftTo(j,t);\n      r.subTo(t,r);\n      while(r.data[i] < --qd) r.subTo(t,r);\n    }\n  }\n  if(q != null) {\n    r.drShiftTo(ys,q);\n    if(ts != ms) BigInteger.ZERO.subTo(q,q);\n  }\n  r.t = ys;\n  r.clamp();\n  if(nsh > 0) r.rShiftTo(nsh,r);\t// Denormalize remainder\n  if(ts < 0) BigInteger.ZERO.subTo(r,r);\n}\n\n// (public) this mod a\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a,null,r);\n  if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);\n  return r;\n}\n\n// Modular reduction using \"classic\" algorithm\nfunction Classic(m) { this.m = m; }\nfunction cConvert(x) {\n  if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n  else return x;\n}\nfunction cRevert(x) { return x; }\nfunction cReduce(x) { x.divRemTo(this.m,null,x); }\nfunction cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\nfunction cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\nClassic.prototype.convert = cConvert;\nClassic.prototype.revert = cRevert;\nClassic.prototype.reduce = cReduce;\nClassic.prototype.mulTo = cMulTo;\nClassic.prototype.sqrTo = cSqrTo;\n\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n  if(this.t < 1) return 0;\n  var x = this.data[0];\n  if((x&1) == 0) return 0;\n  var y = x&3;\t\t// y == 1/x mod 2^2\n  y = (y*(2-(x&0xf)*y))&0xf;\t// y == 1/x mod 2^4\n  y = (y*(2-(x&0xff)*y))&0xff;\t// y == 1/x mod 2^8\n  y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;\t// y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = (y*(2-x*y%this.DV))%this.DV;\t\t// y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return (y>0)?this.DV-y:-y;\n}\n\n// Montgomery reduction\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp&0x7fff;\n  this.mph = this.mp>>15;\n  this.um = (1<<(m.DB-15))-1;\n  this.mt2 = 2*m.t;\n}\n\n// xR mod m\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t,r);\n  r.divRemTo(this.m,null,r);\n  if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);\n  return r;\n}\n\n// x/R mod m\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n}\n\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n  while(x.t <= this.mt2)\t// pad x so am has enough room later\n    x.data[x.t++] = 0;\n  for(var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x.data[i]*mp mod DV\n    var j = x.data[i]&0x7fff;\n    var u0 = (j*this.mpl+(((j*this.mph+(x.data[i]>>15)*this.mpl)&this.um)<<15))&x.DM;\n    // use am to combine the multiply-shift-add into one call\n    j = i+this.m.t;\n    x.data[j] += this.m.am(0,u0,x,i,0,this.m.t);\n    // propagate carry\n    while(x.data[j] >= x.DV) { x.data[j] -= x.DV; x.data[++j]++; }\n  }\n  x.clamp();\n  x.drShiftTo(this.m.t,x);\n  if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n\n// (protected) true iff this is even\nfunction bnpIsEven() { return ((this.t>0)?(this.data[0]&1):this.s) == 0; }\n\n// (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\nfunction bnpExp(e,z) {\n  if(e > 0xffffffff || e < 1) return BigInteger.ONE;\n  var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;\n  g.copyTo(r);\n  while(--i >= 0) {\n    z.sqrTo(r,r2);\n    if((e&(1<<i)) > 0) z.mulTo(r2,g,r);\n    else { var t = r; r = r2; r2 = t; }\n  }\n  return z.revert(r);\n}\n\n// (public) this^e % m, 0 <= e < 2^32\nfunction bnModPowInt(e,m) {\n  var z;\n  if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);\n  return this.exp(e,z);\n}\n\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.isEven = bnpIsEven;\nBigInteger.prototype.exp = bnpExp;\n\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.modPowInt = bnModPowInt;\n\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n\n// jsbn2 lib\n\n//Copyright (c) 2005-2009  Tom Wu\n//All Rights Reserved.\n//See \"LICENSE\" for details (See jsbn.js for LICENSE).\n\n//Extended JavaScript BN functions, required for RSA private ops.\n\n//Version 1.1: new BigInteger(\"0\", 10) returns \"proper\" zero\n\n//(public)\nfunction bnClone() { var r = nbi(); this.copyTo(r); return r; }\n\n//(public) return value as integer\nfunction bnIntValue() {\nif(this.s < 0) {\n if(this.t == 1) return this.data[0]-this.DV;\n else if(this.t == 0) return -1;\n} else if(this.t == 1) return this.data[0];\nelse if(this.t == 0) return 0;\n// assumes 16 < DB < 32\nreturn ((this.data[1]&((1<<(32-this.DB))-1))<<this.DB)|this.data[0];\n}\n\n//(public) return value as byte\nfunction bnByteValue() { return (this.t==0)?this.s:(this.data[0]<<24)>>24; }\n\n//(public) return value as short (assumes DB>=16)\nfunction bnShortValue() { return (this.t==0)?this.s:(this.data[0]<<16)>>16; }\n\n//(protected) return x s.t. r^x < DV\nfunction bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }\n\n//(public) 0 if this == 0, 1 if this > 0\nfunction bnSigNum() {\nif(this.s < 0) return -1;\nelse if(this.t <= 0 || (this.t == 1 && this.data[0] <= 0)) return 0;\nelse return 1;\n}\n\n//(protected) convert to radix string\nfunction bnpToRadix(b) {\nif(b == null) b = 10;\nif(this.signum() == 0 || b < 2 || b > 36) return \"0\";\nvar cs = this.chunkSize(b);\nvar a = Math.pow(b,cs);\nvar d = nbv(a), y = nbi(), z = nbi(), r = \"\";\nthis.divRemTo(d,y,z);\nwhile(y.signum() > 0) {\n r = (a+z.intValue()).toString(b).substr(1) + r;\n y.divRemTo(d,y,z);\n}\nreturn z.intValue().toString(b) + r;\n}\n\n//(protected) convert from radix string\nfunction bnpFromRadix(s,b) {\nthis.fromInt(0);\nif(b == null) b = 10;\nvar cs = this.chunkSize(b);\nvar d = Math.pow(b,cs), mi = false, j = 0, w = 0;\nfor(var i = 0; i < s.length; ++i) {\n var x = intAt(s,i);\n if(x < 0) {\n   if(s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n   continue;\n }\n w = b*w+x;\n if(++j >= cs) {\n   this.dMultiply(d);\n   this.dAddOffset(w,0);\n   j = 0;\n   w = 0;\n }\n}\nif(j > 0) {\n this.dMultiply(Math.pow(b,j));\n this.dAddOffset(w,0);\n}\nif(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n//(protected) alternate constructor\nfunction bnpFromNumber(a,b,c) {\nif(\"number\" == typeof b) {\n // new BigInteger(int,int,RNG)\n if(a < 2) this.fromInt(1);\n else {\n   this.fromNumber(a,c);\n   if(!this.testBit(a-1))  // force MSB set\n     this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);\n   if(this.isEven()) this.dAddOffset(1,0); // force odd\n   while(!this.isProbablePrime(b)) {\n     this.dAddOffset(2,0);\n     if(this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a-1),this);\n   }\n }\n} else {\n // new BigInteger(int,RNG)\n var x = new Array(), t = a&7;\n x.length = (a>>3)+1;\n b.nextBytes(x);\n if(t > 0) x[0] &= ((1<<t)-1); else x[0] = 0;\n this.fromString(x,256);\n}\n}\n\n//(public) convert to bigendian byte array\nfunction bnToByteArray() {\nvar i = this.t, r = new Array();\nr[0] = this.s;\nvar p = this.DB-(i*this.DB)%8, d, k = 0;\nif(i-- > 0) {\n if(p < this.DB && (d = this.data[i]>>p) != (this.s&this.DM)>>p)\n   r[k++] = d|(this.s<<(this.DB-p));\n while(i >= 0) {\n   if(p < 8) {\n     d = (this.data[i]&((1<<p)-1))<<(8-p);\n     d |= this.data[--i]>>(p+=this.DB-8);\n   } else {\n     d = (this.data[i]>>(p-=8))&0xff;\n     if(p <= 0) { p += this.DB; --i; }\n   }\n   if((d&0x80) != 0) d |= -256;\n   if(k == 0 && (this.s&0x80) != (d&0x80)) ++k;\n   if(k > 0 || d != this.s) r[k++] = d;\n }\n}\nreturn r;\n}\n\nfunction bnEquals(a) { return(this.compareTo(a)==0); }\nfunction bnMin(a) { return(this.compareTo(a)<0)?this:a; }\nfunction bnMax(a) { return(this.compareTo(a)>0)?this:a; }\n\n//(protected) r = this op a (bitwise)\nfunction bnpBitwiseTo(a,op,r) {\nvar i, f, m = Math.min(a.t,this.t);\nfor(i = 0; i < m; ++i) r.data[i] = op(this.data[i],a.data[i]);\nif(a.t < this.t) {\n f = a.s&this.DM;\n for(i = m; i < this.t; ++i) r.data[i] = op(this.data[i],f);\n r.t = this.t;\n} else {\n f = this.s&this.DM;\n for(i = m; i < a.t; ++i) r.data[i] = op(f,a.data[i]);\n r.t = a.t;\n}\nr.s = op(this.s,a.s);\nr.clamp();\n}\n\n//(public) this & a\nfunction op_and(x,y) { return x&y; }\nfunction bnAnd(a) { var r = nbi(); this.bitwiseTo(a,op_and,r); return r; }\n\n//(public) this | a\nfunction op_or(x,y) { return x|y; }\nfunction bnOr(a) { var r = nbi(); this.bitwiseTo(a,op_or,r); return r; }\n\n//(public) this ^ a\nfunction op_xor(x,y) { return x^y; }\nfunction bnXor(a) { var r = nbi(); this.bitwiseTo(a,op_xor,r); return r; }\n\n//(public) this & ~a\nfunction op_andnot(x,y) { return x&~y; }\nfunction bnAndNot(a) { var r = nbi(); this.bitwiseTo(a,op_andnot,r); return r; }\n\n//(public) ~this\nfunction bnNot() {\nvar r = nbi();\nfor(var i = 0; i < this.t; ++i) r.data[i] = this.DM&~this.data[i];\nr.t = this.t;\nr.s = ~this.s;\nreturn r;\n}\n\n//(public) this << n\nfunction bnShiftLeft(n) {\nvar r = nbi();\nif(n < 0) this.rShiftTo(-n,r); else this.lShiftTo(n,r);\nreturn r;\n}\n\n//(public) this >> n\nfunction bnShiftRight(n) {\nvar r = nbi();\nif(n < 0) this.lShiftTo(-n,r); else this.rShiftTo(n,r);\nreturn r;\n}\n\n//return index of lowest 1-bit in x, x < 2^31\nfunction lbit(x) {\nif(x == 0) return -1;\nvar r = 0;\nif((x&0xffff) == 0) { x >>= 16; r += 16; }\nif((x&0xff) == 0) { x >>= 8; r += 8; }\nif((x&0xf) == 0) { x >>= 4; r += 4; }\nif((x&3) == 0) { x >>= 2; r += 2; }\nif((x&1) == 0) ++r;\nreturn r;\n}\n\n//(public) returns index of lowest 1-bit (or -1 if none)\nfunction bnGetLowestSetBit() {\nfor(var i = 0; i < this.t; ++i)\n if(this.data[i] != 0) return i*this.DB+lbit(this.data[i]);\nif(this.s < 0) return this.t*this.DB;\nreturn -1;\n}\n\n//return number of 1 bits in x\nfunction cbit(x) {\nvar r = 0;\nwhile(x != 0) { x &= x-1; ++r; }\nreturn r;\n}\n\n//(public) return number of set bits\nfunction bnBitCount() {\nvar r = 0, x = this.s&this.DM;\nfor(var i = 0; i < this.t; ++i) r += cbit(this.data[i]^x);\nreturn r;\n}\n\n//(public) true iff nth bit is set\nfunction bnTestBit(n) {\nvar j = Math.floor(n/this.DB);\nif(j >= this.t) return(this.s!=0);\nreturn((this.data[j]&(1<<(n%this.DB)))!=0);\n}\n\n//(protected) this op (1<<n)\nfunction bnpChangeBit(n,op) {\nvar r = BigInteger.ONE.shiftLeft(n);\nthis.bitwiseTo(r,op,r);\nreturn r;\n}\n\n//(public) this | (1<<n)\nfunction bnSetBit(n) { return this.changeBit(n,op_or); }\n\n//(public) this & ~(1<<n)\nfunction bnClearBit(n) { return this.changeBit(n,op_andnot); }\n\n//(public) this ^ (1<<n)\nfunction bnFlipBit(n) { return this.changeBit(n,op_xor); }\n\n//(protected) r = this + a\nfunction bnpAddTo(a,r) {\nvar i = 0, c = 0, m = Math.min(a.t,this.t);\nwhile(i < m) {\n c += this.data[i]+a.data[i];\n r.data[i++] = c&this.DM;\n c >>= this.DB;\n}\nif(a.t < this.t) {\n c += a.s;\n while(i < this.t) {\n   c += this.data[i];\n   r.data[i++] = c&this.DM;\n   c >>= this.DB;\n }\n c += this.s;\n} else {\n c += this.s;\n while(i < a.t) {\n   c += a.data[i];\n   r.data[i++] = c&this.DM;\n   c >>= this.DB;\n }\n c += a.s;\n}\nr.s = (c<0)?-1:0;\nif(c > 0) r.data[i++] = c;\nelse if(c < -1) r.data[i++] = this.DV+c;\nr.t = i;\nr.clamp();\n}\n\n//(public) this + a\nfunction bnAdd(a) { var r = nbi(); this.addTo(a,r); return r; }\n\n//(public) this - a\nfunction bnSubtract(a) { var r = nbi(); this.subTo(a,r); return r; }\n\n//(public) this * a\nfunction bnMultiply(a) { var r = nbi(); this.multiplyTo(a,r); return r; }\n\n//(public) this / a\nfunction bnDivide(a) { var r = nbi(); this.divRemTo(a,r,null); return r; }\n\n//(public) this % a\nfunction bnRemainder(a) { var r = nbi(); this.divRemTo(a,null,r); return r; }\n\n//(public) [this/a,this%a]\nfunction bnDivideAndRemainder(a) {\nvar q = nbi(), r = nbi();\nthis.divRemTo(a,q,r);\nreturn new Array(q,r);\n}\n\n//(protected) this *= n, this >= 0, 1 < n < DV\nfunction bnpDMultiply(n) {\nthis.data[this.t] = this.am(0,n-1,this,0,0,this.t);\n++this.t;\nthis.clamp();\n}\n\n//(protected) this += n << w words, this >= 0\nfunction bnpDAddOffset(n,w) {\nif(n == 0) return;\nwhile(this.t <= w) this.data[this.t++] = 0;\nthis.data[w] += n;\nwhile(this.data[w] >= this.DV) {\n this.data[w] -= this.DV;\n if(++w >= this.t) this.data[this.t++] = 0;\n ++this.data[w];\n}\n}\n\n//A \"null\" reducer\nfunction NullExp() {}\nfunction nNop(x) { return x; }\nfunction nMulTo(x,y,r) { x.multiplyTo(y,r); }\nfunction nSqrTo(x,r) { x.squareTo(r); }\n\nNullExp.prototype.convert = nNop;\nNullExp.prototype.revert = nNop;\nNullExp.prototype.mulTo = nMulTo;\nNullExp.prototype.sqrTo = nSqrTo;\n\n//(public) this^e\nfunction bnPow(e) { return this.exp(e,new NullExp()); }\n\n//(protected) r = lower n words of \"this * a\", a.t <= n\n//\"this\" should be the larger one if appropriate.\nfunction bnpMultiplyLowerTo(a,n,r) {\nvar i = Math.min(this.t+a.t,n);\nr.s = 0; // assumes a,this >= 0\nr.t = i;\nwhile(i > 0) r.data[--i] = 0;\nvar j;\nfor(j = r.t-this.t; i < j; ++i) r.data[i+this.t] = this.am(0,a.data[i],r,i,0,this.t);\nfor(j = Math.min(a.t,n); i < j; ++i) this.am(0,a.data[i],r,i,0,n-i);\nr.clamp();\n}\n\n//(protected) r = \"this * a\" without lower n words, n > 0\n//\"this\" should be the larger one if appropriate.\nfunction bnpMultiplyUpperTo(a,n,r) {\n--n;\nvar i = r.t = this.t+a.t-n;\nr.s = 0; // assumes a,this >= 0\nwhile(--i >= 0) r.data[i] = 0;\nfor(i = Math.max(n-this.t,0); i < a.t; ++i)\n r.data[this.t+i-n] = this.am(n-i,a.data[i],r,0,0,this.t+i-n);\nr.clamp();\nr.drShiftTo(1,r);\n}\n\n//Barrett modular reduction\nfunction Barrett(m) {\n// setup Barrett\nthis.r2 = nbi();\nthis.q3 = nbi();\nBigInteger.ONE.dlShiftTo(2*m.t,this.r2);\nthis.mu = this.r2.divide(m);\nthis.m = m;\n}\n\nfunction barrettConvert(x) {\nif(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);\nelse if(x.compareTo(this.m) < 0) return x;\nelse { var r = nbi(); x.copyTo(r); this.reduce(r); return r; }\n}\n\nfunction barrettRevert(x) { return x; }\n\n//x = x mod m (HAC 14.42)\nfunction barrettReduce(x) {\nx.drShiftTo(this.m.t-1,this.r2);\nif(x.t > this.m.t+1) { x.t = this.m.t+1; x.clamp(); }\nthis.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);\nthis.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);\nwhile(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t+1);\nx.subTo(this.r2,x);\nwhile(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n//r = x^2 mod m; x != r\nfunction barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n//r = x*y mod m; x,y != r\nfunction barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nBarrett.prototype.convert = barrettConvert;\nBarrett.prototype.revert = barrettRevert;\nBarrett.prototype.reduce = barrettReduce;\nBarrett.prototype.mulTo = barrettMulTo;\nBarrett.prototype.sqrTo = barrettSqrTo;\n\n//(public) this^e % m (HAC 14.85)\nfunction bnModPow(e,m) {\nvar i = e.bitLength(), k, r = nbv(1), z;\nif(i <= 0) return r;\nelse if(i < 18) k = 1;\nelse if(i < 48) k = 3;\nelse if(i < 144) k = 4;\nelse if(i < 768) k = 5;\nelse k = 6;\nif(i < 8)\n z = new Classic(m);\nelse if(m.isEven())\n z = new Barrett(m);\nelse\n z = new Montgomery(m);\n\n// precomputation\nvar g = new Array(), n = 3, k1 = k-1, km = (1<<k)-1;\ng[1] = z.convert(this);\nif(k > 1) {\n var g2 = nbi();\n z.sqrTo(g[1],g2);\n while(n <= km) {\n   g[n] = nbi();\n   z.mulTo(g2,g[n-2],g[n]);\n   n += 2;\n }\n}\n\nvar j = e.t-1, w, is1 = true, r2 = nbi(), t;\ni = nbits(e.data[j])-1;\nwhile(j >= 0) {\n if(i >= k1) w = (e.data[j]>>(i-k1))&km;\n else {\n   w = (e.data[j]&((1<<(i+1))-1))<<(k1-i);\n   if(j > 0) w |= e.data[j-1]>>(this.DB+i-k1);\n }\n\n n = k;\n while((w&1) == 0) { w >>= 1; --n; }\n if((i -= n) < 0) { i += this.DB; --j; }\n if(is1) {  // ret == 1, don't bother squaring or multiplying it\n   g[w].copyTo(r);\n   is1 = false;\n } else {\n   while(n > 1) { z.sqrTo(r,r2); z.sqrTo(r2,r); n -= 2; }\n   if(n > 0) z.sqrTo(r,r2); else { t = r; r = r2; r2 = t; }\n   z.mulTo(r2,g[w],r);\n }\n\n while(j >= 0 && (e.data[j]&(1<<i)) == 0) {\n   z.sqrTo(r,r2); t = r; r = r2; r2 = t;\n   if(--i < 0) { i = this.DB-1; --j; }\n }\n}\nreturn z.revert(r);\n}\n\n//(public) gcd(this,a) (HAC 14.54)\nfunction bnGCD(a) {\nvar x = (this.s<0)?this.negate():this.clone();\nvar y = (a.s<0)?a.negate():a.clone();\nif(x.compareTo(y) < 0) { var t = x; x = y; y = t; }\nvar i = x.getLowestSetBit(), g = y.getLowestSetBit();\nif(g < 0) return x;\nif(i < g) g = i;\nif(g > 0) {\n x.rShiftTo(g,x);\n y.rShiftTo(g,y);\n}\nwhile(x.signum() > 0) {\n if((i = x.getLowestSetBit()) > 0) x.rShiftTo(i,x);\n if((i = y.getLowestSetBit()) > 0) y.rShiftTo(i,y);\n if(x.compareTo(y) >= 0) {\n   x.subTo(y,x);\n   x.rShiftTo(1,x);\n } else {\n   y.subTo(x,y);\n   y.rShiftTo(1,y);\n }\n}\nif(g > 0) y.lShiftTo(g,y);\nreturn y;\n}\n\n//(protected) this % n, n < 2^26\nfunction bnpModInt(n) {\nif(n <= 0) return 0;\nvar d = this.DV%n, r = (this.s<0)?n-1:0;\nif(this.t > 0)\n if(d == 0) r = this.data[0]%n;\n else for(var i = this.t-1; i >= 0; --i) r = (d*r+this.data[i])%n;\nreturn r;\n}\n\n//(public) 1/this % m (HAC 14.61)\nfunction bnModInverse(m) {\nvar ac = m.isEven();\nif((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\nvar u = m.clone(), v = this.clone();\nvar a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\nwhile(u.signum() != 0) {\n while(u.isEven()) {\n   u.rShiftTo(1,u);\n   if(ac) {\n     if(!a.isEven() || !b.isEven()) { a.addTo(this,a); b.subTo(m,b); }\n     a.rShiftTo(1,a);\n   } else if(!b.isEven()) b.subTo(m,b);\n   b.rShiftTo(1,b);\n }\n while(v.isEven()) {\n   v.rShiftTo(1,v);\n   if(ac) {\n     if(!c.isEven() || !d.isEven()) { c.addTo(this,c); d.subTo(m,d); }\n     c.rShiftTo(1,c);\n   } else if(!d.isEven()) d.subTo(m,d);\n   d.rShiftTo(1,d);\n }\n if(u.compareTo(v) >= 0) {\n   u.subTo(v,u);\n   if(ac) a.subTo(c,a);\n   b.subTo(d,b);\n } else {\n   v.subTo(u,v);\n   if(ac) c.subTo(a,c);\n   d.subTo(b,d);\n }\n}\nif(v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\nif(d.compareTo(m) >= 0) return d.subtract(m);\nif(d.signum() < 0) d.addTo(m,d); else return d;\nif(d.signum() < 0) return d.add(m); else return d;\n}\n\nvar lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509];\nvar lplim = (1<<26)/lowprimes[lowprimes.length-1];\n\n//(public) test primality with certainty >= 1-.5^t\nfunction bnIsProbablePrime(t) {\nvar i, x = this.abs();\nif(x.t == 1 && x.data[0] <= lowprimes[lowprimes.length-1]) {\n for(i = 0; i < lowprimes.length; ++i)\n   if(x.data[0] == lowprimes[i]) return true;\n return false;\n}\nif(x.isEven()) return false;\ni = 1;\nwhile(i < lowprimes.length) {\n var m = lowprimes[i], j = i+1;\n while(j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n m = x.modInt(m);\n while(i < j) if(m%lowprimes[i++] == 0) return false;\n}\nreturn x.millerRabin(t);\n}\n\n//(protected) true if probably prime (HAC 4.24, Miller-Rabin)\nfunction bnpMillerRabin(t) {\nvar n1 = this.subtract(BigInteger.ONE);\nvar k = n1.getLowestSetBit();\nif(k <= 0) return false;\nvar r = n1.shiftRight(k);\nvar prng = bnGetPrng();\nvar a;\nfor(var i = 0; i < t; ++i) {\n // select witness 'a' at random from between 1 and n1\n do {\n   a = new BigInteger(this.bitLength(), prng);\n }\n while(a.compareTo(BigInteger.ONE) <= 0 || a.compareTo(n1) >= 0);\n var y = a.modPow(r,this);\n if(y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n   var j = 1;\n   while(j++ < k && y.compareTo(n1) != 0) {\n     y = y.modPowInt(2,this);\n     if(y.compareTo(BigInteger.ONE) == 0) return false;\n   }\n   if(y.compareTo(n1) != 0) return false;\n }\n}\nreturn true;\n}\n\n// get pseudo random number generator\nfunction bnGetPrng() {\n  // create prng with api that matches BigInteger secure random\n  return {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = Math.floor(Math.random() * 0x0100);\n      }\n    }\n  };\n}\n\n//protected\nBigInteger.prototype.chunkSize = bnpChunkSize;\nBigInteger.prototype.toRadix = bnpToRadix;\nBigInteger.prototype.fromRadix = bnpFromRadix;\nBigInteger.prototype.fromNumber = bnpFromNumber;\nBigInteger.prototype.bitwiseTo = bnpBitwiseTo;\nBigInteger.prototype.changeBit = bnpChangeBit;\nBigInteger.prototype.addTo = bnpAddTo;\nBigInteger.prototype.dMultiply = bnpDMultiply;\nBigInteger.prototype.dAddOffset = bnpDAddOffset;\nBigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\nBigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\nBigInteger.prototype.modInt = bnpModInt;\nBigInteger.prototype.millerRabin = bnpMillerRabin;\n\n//public\nBigInteger.prototype.clone = bnClone;\nBigInteger.prototype.intValue = bnIntValue;\nBigInteger.prototype.byteValue = bnByteValue;\nBigInteger.prototype.shortValue = bnShortValue;\nBigInteger.prototype.signum = bnSigNum;\nBigInteger.prototype.toByteArray = bnToByteArray;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.min = bnMin;\nBigInteger.prototype.max = bnMax;\nBigInteger.prototype.and = bnAnd;\nBigInteger.prototype.or = bnOr;\nBigInteger.prototype.xor = bnXor;\nBigInteger.prototype.andNot = bnAndNot;\nBigInteger.prototype.not = bnNot;\nBigInteger.prototype.shiftLeft = bnShiftLeft;\nBigInteger.prototype.shiftRight = bnShiftRight;\nBigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\nBigInteger.prototype.bitCount = bnBitCount;\nBigInteger.prototype.testBit = bnTestBit;\nBigInteger.prototype.setBit = bnSetBit;\nBigInteger.prototype.clearBit = bnClearBit;\nBigInteger.prototype.flipBit = bnFlipBit;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.remainder = bnRemainder;\nBigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\nBigInteger.prototype.modPow = bnModPow;\nBigInteger.prototype.modInverse = bnModInverse;\nBigInteger.prototype.pow = bnPow;\nBigInteger.prototype.gcd = bnGCD;\nBigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n\n//BigInteger interfaces not implemented in jsbn:\n\n//BigInteger(int signum, byte[] magnitude)\n//double doubleValue()\n//float floatValue()\n//int hashCode()\n//long longValue()\n//static BigInteger valueOf(long val)\n"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAS,CAAC;AAE9BC,MAAM,CAACC,OAAO,GAAGH,KAAK,CAACI,IAAI,GAAGJ,KAAK,CAACI,IAAI,IAAI,CAAC,CAAC;;AAE9C;AACA,IAAIC,KAAK;;AAET;AACA,IAAIC,MAAM,GAAG,cAAc;AAC3B,IAAIC,IAAI,GAAI,CAACD,MAAM,GAAC,QAAQ,KAAG,QAAS;;AAExC;AACA,SAASE,UAAUA,CAACC,CAAC,EAACC,CAAC,EAACC,CAAC,EAAE;EACzB,IAAI,CAACC,IAAI,GAAG,EAAE;EACd,IAAGH,CAAC,IAAI,IAAI,EACV,IAAG,QAAQ,IAAI,OAAOA,CAAC,EAAE,IAAI,CAACI,UAAU,CAACJ,CAAC,EAACC,CAAC,EAACC,CAAC,CAAC,CAAC,KAC3C,IAAGD,CAAC,IAAI,IAAI,IAAI,QAAQ,IAAI,OAAOD,CAAC,EAAE,IAAI,CAACK,UAAU,CAACL,CAAC,EAAC,GAAG,CAAC,CAAC,KAC7D,IAAI,CAACK,UAAU,CAACL,CAAC,EAACC,CAAC,CAAC;AAC7B;AACAV,KAAK,CAACI,IAAI,CAACI,UAAU,GAAGA,UAAU;;AAElC;AACA,SAASO,GAAGA,CAAA,EAAG;EAAE,OAAO,IAAIP,UAAU,CAAC,IAAI,CAAC;AAAE;;AAE9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAASQ,GAAGA,CAACC,CAAC,EAACC,CAAC,EAACC,CAAC,EAACC,CAAC,EAACT,CAAC,EAACU,CAAC,EAAE;EACxB,OAAM,EAAEA,CAAC,IAAI,CAAC,EAAE;IACd,IAAIC,CAAC,GAAGJ,CAAC,GAAC,IAAI,CAACN,IAAI,CAACK,CAAC,EAAE,CAAC,GAACE,CAAC,CAACP,IAAI,CAACQ,CAAC,CAAC,GAACT,CAAC;IACpCA,CAAC,GAAGY,IAAI,CAACC,KAAK,CAACF,CAAC,GAAC,SAAS,CAAC;IAC3BH,CAAC,CAACP,IAAI,CAACQ,CAAC,EAAE,CAAC,GAAGE,CAAC,GAAC,SAAS;EAC3B;EACA,OAAOX,CAAC;AACV;AACA;AACA;AACA;AACA,SAASc,GAAGA,CAACR,CAAC,EAACC,CAAC,EAACC,CAAC,EAACC,CAAC,EAACT,CAAC,EAACU,CAAC,EAAE;EACxB,IAAIK,EAAE,GAAGR,CAAC,GAAC,MAAM;IAAES,EAAE,GAAGT,CAAC,IAAE,EAAE;EAC7B,OAAM,EAAEG,CAAC,IAAI,CAAC,EAAE;IACd,IAAIO,CAAC,GAAG,IAAI,CAAChB,IAAI,CAACK,CAAC,CAAC,GAAC,MAAM;IAC3B,IAAIY,CAAC,GAAG,IAAI,CAACjB,IAAI,CAACK,CAAC,EAAE,CAAC,IAAE,EAAE;IAC1B,IAAIa,CAAC,GAAGH,EAAE,GAACC,CAAC,GAACC,CAAC,GAACH,EAAE;IACjBE,CAAC,GAAGF,EAAE,GAACE,CAAC,IAAE,CAACE,CAAC,GAAC,MAAM,KAAG,EAAE,CAAC,GAACX,CAAC,CAACP,IAAI,CAACQ,CAAC,CAAC,IAAET,CAAC,GAAC,UAAU,CAAC;IAClDA,CAAC,GAAG,CAACiB,CAAC,KAAG,EAAE,KAAGE,CAAC,KAAG,EAAE,CAAC,GAACH,EAAE,GAACE,CAAC,IAAElB,CAAC,KAAG,EAAE,CAAC;IACnCQ,CAAC,CAACP,IAAI,CAACQ,CAAC,EAAE,CAAC,GAAGQ,CAAC,GAAC,UAAU;EAC5B;EACA,OAAOjB,CAAC;AACV;AACA;AACA;AACA,SAASoB,GAAGA,CAACd,CAAC,EAACC,CAAC,EAACC,CAAC,EAACC,CAAC,EAACT,CAAC,EAACU,CAAC,EAAE;EACxB,IAAIK,EAAE,GAAGR,CAAC,GAAC,MAAM;IAAES,EAAE,GAAGT,CAAC,IAAE,EAAE;EAC7B,OAAM,EAAEG,CAAC,IAAI,CAAC,EAAE;IACd,IAAIO,CAAC,GAAG,IAAI,CAAChB,IAAI,CAACK,CAAC,CAAC,GAAC,MAAM;IAC3B,IAAIY,CAAC,GAAG,IAAI,CAACjB,IAAI,CAACK,CAAC,EAAE,CAAC,IAAE,EAAE;IAC1B,IAAIa,CAAC,GAAGH,EAAE,GAACC,CAAC,GAACC,CAAC,GAACH,EAAE;IACjBE,CAAC,GAAGF,EAAE,GAACE,CAAC,IAAE,CAACE,CAAC,GAAC,MAAM,KAAG,EAAE,CAAC,GAACX,CAAC,CAACP,IAAI,CAACQ,CAAC,CAAC,GAACT,CAAC;IACrCA,CAAC,GAAG,CAACiB,CAAC,IAAE,EAAE,KAAGE,CAAC,IAAE,EAAE,CAAC,GAACH,EAAE,GAACE,CAAC;IACxBV,CAAC,CAACP,IAAI,CAACQ,CAAC,EAAE,CAAC,GAAGQ,CAAC,GAAC,SAAS;EAC3B;EACA,OAAOjB,CAAC;AACV;;AAEA;AACA,IAAG,OAAOqB,SAAU,KAAK,WAAW,EACpC;EACGxB,UAAU,CAACyB,SAAS,CAACC,EAAE,GAAGH,GAAG;EAC7B1B,KAAK,GAAG,EAAE;AACb,CAAC,MAAM,IAAGE,IAAI,IAAKyB,SAAS,CAACG,OAAO,IAAI,6BAA8B,EAAE;EACtE3B,UAAU,CAACyB,SAAS,CAACC,EAAE,GAAGT,GAAG;EAC7BpB,KAAK,GAAG,EAAE;AACZ,CAAC,MAAM,IAAGE,IAAI,IAAKyB,SAAS,CAACG,OAAO,IAAI,UAAW,EAAE;EACnD3B,UAAU,CAACyB,SAAS,CAACC,EAAE,GAAGlB,GAAG;EAC7BX,KAAK,GAAG,EAAE;AACZ,CAAC,MAAM;EAAE;EACPG,UAAU,CAACyB,SAAS,CAACC,EAAE,GAAGH,GAAG;EAC7B1B,KAAK,GAAG,EAAE;AACZ;AAEAG,UAAU,CAACyB,SAAS,CAACG,EAAE,GAAG/B,KAAK;AAC/BG,UAAU,CAACyB,SAAS,CAACI,EAAE,GAAI,CAAC,CAAC,IAAEhC,KAAK,IAAE,CAAE;AACxCG,UAAU,CAACyB,SAAS,CAACK,EAAE,GAAI,CAAC,IAAEjC,KAAM;AAEpC,IAAIkC,KAAK,GAAG,EAAE;AACd/B,UAAU,CAACyB,SAAS,CAACO,EAAE,GAAGjB,IAAI,CAACkB,GAAG,CAAC,CAAC,EAACF,KAAK,CAAC;AAC3C/B,UAAU,CAACyB,SAAS,CAACS,EAAE,GAAGH,KAAK,GAAClC,KAAK;AACrCG,UAAU,CAACyB,SAAS,CAACU,EAAE,GAAG,CAAC,GAACtC,KAAK,GAACkC,KAAK;;AAEvC;AACA,IAAIK,KAAK,GAAG,sCAAsC;AAClD,IAAIC,KAAK,GAAG,IAAIC,KAAK,CAAC,CAAC;AACvB,IAAIC,EAAE,EAACC,EAAE;AACTD,EAAE,GAAG,GAAG,CAACE,UAAU,CAAC,CAAC,CAAC;AACtB,KAAID,EAAE,GAAG,CAAC,EAAEA,EAAE,IAAI,CAAC,EAAE,EAAEA,EAAE,EAAEH,KAAK,CAACE,EAAE,EAAE,CAAC,GAAGC,EAAE;AAC3CD,EAAE,GAAG,GAAG,CAACE,UAAU,CAAC,CAAC,CAAC;AACtB,KAAID,EAAE,GAAG,EAAE,EAAEA,EAAE,GAAG,EAAE,EAAE,EAAEA,EAAE,EAAEH,KAAK,CAACE,EAAE,EAAE,CAAC,GAAGC,EAAE;AAC5CD,EAAE,GAAG,GAAG,CAACE,UAAU,CAAC,CAAC,CAAC;AACtB,KAAID,EAAE,GAAG,EAAE,EAAEA,EAAE,GAAG,EAAE,EAAE,EAAEA,EAAE,EAAEH,KAAK,CAACE,EAAE,EAAE,CAAC,GAAGC,EAAE;AAE5C,SAASE,QAAQA,CAAC7B,CAAC,EAAE;EAAE,OAAOuB,KAAK,CAACO,MAAM,CAAC9B,CAAC,CAAC;AAAE;AAC/C,SAAS+B,KAAKA,CAACC,CAAC,EAACpC,CAAC,EAAE;EAClB,IAAIN,CAAC,GAAGkC,KAAK,CAACQ,CAAC,CAACJ,UAAU,CAAChC,CAAC,CAAC,CAAC;EAC9B,OAAQN,CAAC,IAAE,IAAI,GAAE,CAAC,CAAC,GAACA,CAAC;AACvB;;AAEA;AACA,SAAS2C,SAASA,CAACC,CAAC,EAAE;EACpB,KAAI,IAAItC,CAAC,GAAG,IAAI,CAACuC,CAAC,GAAC,CAAC,EAAEvC,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAEsC,CAAC,CAAC3C,IAAI,CAACK,CAAC,CAAC,GAAG,IAAI,CAACL,IAAI,CAACK,CAAC,CAAC;EAC3DsC,CAAC,CAACC,CAAC,GAAG,IAAI,CAACA,CAAC;EACZD,CAAC,CAACF,CAAC,GAAG,IAAI,CAACA,CAAC;AACd;;AAEA;AACA,SAASI,UAAUA,CAACvC,CAAC,EAAE;EACrB,IAAI,CAACsC,CAAC,GAAG,CAAC;EACV,IAAI,CAACH,CAAC,GAAInC,CAAC,GAAC,CAAC,GAAE,CAAC,CAAC,GAAC,CAAC;EACnB,IAAGA,CAAC,GAAG,CAAC,EAAE,IAAI,CAACN,IAAI,CAAC,CAAC,CAAC,GAAGM,CAAC,CAAC,KACtB,IAAGA,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAACN,IAAI,CAAC,CAAC,CAAC,GAAGM,CAAC,GAAC,IAAI,CAACoB,EAAE,CAAC,KACpC,IAAI,CAACkB,CAAC,GAAG,CAAC;AACjB;;AAEA;AACA,SAASE,GAAGA,CAACzC,CAAC,EAAE;EAAE,IAAIsC,CAAC,GAAGxC,GAAG,CAAC,CAAC;EAAEwC,CAAC,CAACI,OAAO,CAAC1C,CAAC,CAAC;EAAE,OAAOsC,CAAC;AAAE;;AAEzD;AACA,SAASK,aAAaA,CAACP,CAAC,EAAC3C,CAAC,EAAE;EAC1B,IAAImD,CAAC;EACL,IAAGnD,CAAC,IAAI,EAAE,EAAEmD,CAAC,GAAG,CAAC,CAAC,KACb,IAAGnD,CAAC,IAAI,CAAC,EAAEmD,CAAC,GAAG,CAAC,CAAC,KACjB,IAAGnD,CAAC,IAAI,GAAG,EAAEmD,CAAC,GAAG,CAAC,CAAC,CAAC;EAAA,KACpB,IAAGnD,CAAC,IAAI,CAAC,EAAEmD,CAAC,GAAG,CAAC,CAAC,KACjB,IAAGnD,CAAC,IAAI,EAAE,EAAEmD,CAAC,GAAG,CAAC,CAAC,KAClB,IAAGnD,CAAC,IAAI,CAAC,EAAEmD,CAAC,GAAG,CAAC,CAAC,KACjB;IAAE,IAAI,CAACC,SAAS,CAACT,CAAC,EAAC3C,CAAC,CAAC;IAAE;EAAQ;EACpC,IAAI,CAAC8C,CAAC,GAAG,CAAC;EACV,IAAI,CAACH,CAAC,GAAG,CAAC;EACV,IAAIpC,CAAC,GAAGoC,CAAC,CAACU,MAAM;IAAEC,EAAE,GAAG,KAAK;IAAEC,EAAE,GAAG,CAAC;EACpC,OAAM,EAAEhD,CAAC,IAAI,CAAC,EAAE;IACd,IAAIC,CAAC,GAAI2C,CAAC,IAAE,CAAC,GAAER,CAAC,CAACpC,CAAC,CAAC,GAAC,IAAI,GAACmC,KAAK,CAACC,CAAC,EAACpC,CAAC,CAAC;IACnC,IAAGC,CAAC,GAAG,CAAC,EAAE;MACR,IAAGmC,CAAC,CAACF,MAAM,CAAClC,CAAC,CAAC,IAAI,GAAG,EAAE+C,EAAE,GAAG,IAAI;MAChC;IACF;IACAA,EAAE,GAAG,KAAK;IACV,IAAGC,EAAE,IAAI,CAAC,EACR,IAAI,CAACrD,IAAI,CAAC,IAAI,CAAC4C,CAAC,EAAE,CAAC,GAAGtC,CAAC,CAAC,KACrB,IAAG+C,EAAE,GAACJ,CAAC,GAAG,IAAI,CAACzB,EAAE,EAAE;MACtB,IAAI,CAACxB,IAAI,CAAC,IAAI,CAAC4C,CAAC,GAAC,CAAC,CAAC,IAAI,CAACtC,CAAC,GAAE,CAAC,CAAC,IAAG,IAAI,CAACkB,EAAE,GAAC6B,EAAG,IAAE,CAAE,KAAGA,EAAE;MACpD,IAAI,CAACrD,IAAI,CAAC,IAAI,CAAC4C,CAAC,EAAE,CAAC,GAAItC,CAAC,IAAG,IAAI,CAACkB,EAAE,GAAC6B,EAAI;IACzC,CAAC,MACC,IAAI,CAACrD,IAAI,CAAC,IAAI,CAAC4C,CAAC,GAAC,CAAC,CAAC,IAAItC,CAAC,IAAE+C,EAAE;IAC9BA,EAAE,IAAIJ,CAAC;IACP,IAAGI,EAAE,IAAI,IAAI,CAAC7B,EAAE,EAAE6B,EAAE,IAAI,IAAI,CAAC7B,EAAE;EACjC;EACA,IAAGyB,CAAC,IAAI,CAAC,IAAI,CAACR,CAAC,CAAC,CAAC,CAAC,GAAC,IAAI,KAAK,CAAC,EAAE;IAC7B,IAAI,CAACA,CAAC,GAAG,CAAC,CAAC;IACX,IAAGY,EAAE,GAAG,CAAC,EAAE,IAAI,CAACrD,IAAI,CAAC,IAAI,CAAC4C,CAAC,GAAC,CAAC,CAAC,IAAK,CAAC,CAAC,IAAG,IAAI,CAACpB,EAAE,GAAC6B,EAAG,IAAE,CAAC,IAAGA,EAAE;EAC7D;EACA,IAAI,CAACC,KAAK,CAAC,CAAC;EACZ,IAAGF,EAAE,EAAExD,UAAU,CAAC2D,IAAI,CAACC,KAAK,CAAC,IAAI,EAAC,IAAI,CAAC;AACzC;;AAEA;AACA,SAASC,QAAQA,CAAA,EAAG;EAClB,IAAI1D,CAAC,GAAG,IAAI,CAAC0C,CAAC,GAAC,IAAI,CAAChB,EAAE;EACtB,OAAM,IAAI,CAACmB,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC5C,IAAI,CAAC,IAAI,CAAC4C,CAAC,GAAC,CAAC,CAAC,IAAI7C,CAAC,EAAE,EAAE,IAAI,CAAC6C,CAAC;AACxD;;AAEA;AACA,SAASc,UAAUA,CAAC5D,CAAC,EAAE;EACrB,IAAG,IAAI,CAAC2C,CAAC,GAAG,CAAC,EAAE,OAAO,GAAG,GAAC,IAAI,CAACkB,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC9D,CAAC,CAAC;EACnD,IAAImD,CAAC;EACL,IAAGnD,CAAC,IAAI,EAAE,EAAEmD,CAAC,GAAG,CAAC,CAAC,KACb,IAAGnD,CAAC,IAAI,CAAC,EAAEmD,CAAC,GAAG,CAAC,CAAC,KACjB,IAAGnD,CAAC,IAAI,CAAC,EAAEmD,CAAC,GAAG,CAAC,CAAC,KACjB,IAAGnD,CAAC,IAAI,EAAE,EAAEmD,CAAC,GAAG,CAAC,CAAC,KAClB,IAAGnD,CAAC,IAAI,CAAC,EAAEmD,CAAC,GAAG,CAAC,CAAC,KACjB,OAAO,IAAI,CAACY,OAAO,CAAC/D,CAAC,CAAC;EAC3B,IAAIgE,EAAE,GAAG,CAAC,CAAC,IAAEb,CAAC,IAAE,CAAC;IAAEc,CAAC;IAAE7C,CAAC,GAAG,KAAK;IAAEyB,CAAC,GAAG,EAAE;IAAEtC,CAAC,GAAG,IAAI,CAACuC,CAAC;EACnD,IAAIoB,CAAC,GAAG,IAAI,CAACxC,EAAE,GAAEnB,CAAC,GAAC,IAAI,CAACmB,EAAE,GAAEyB,CAAC;EAC7B,IAAG5C,CAAC,EAAE,GAAG,CAAC,EAAE;IACV,IAAG2D,CAAC,GAAG,IAAI,CAACxC,EAAE,IAAI,CAACuC,CAAC,GAAG,IAAI,CAAC/D,IAAI,CAACK,CAAC,CAAC,IAAE2D,CAAC,IAAI,CAAC,EAAE;MAAE9C,CAAC,GAAG,IAAI;MAAEyB,CAAC,GAAGL,QAAQ,CAACyB,CAAC,CAAC;IAAE;IAC1E,OAAM1D,CAAC,IAAI,CAAC,EAAE;MACZ,IAAG2D,CAAC,GAAGf,CAAC,EAAE;QACRc,CAAC,GAAG,CAAC,IAAI,CAAC/D,IAAI,CAACK,CAAC,CAAC,GAAE,CAAC,CAAC,IAAE2D,CAAC,IAAE,CAAE,KAAIf,CAAC,GAACe,CAAE;QACpCD,CAAC,IAAI,IAAI,CAAC/D,IAAI,CAAC,EAAEK,CAAC,CAAC,KAAG2D,CAAC,IAAE,IAAI,CAACxC,EAAE,GAACyB,CAAC,CAAC;MACrC,CAAC,MAAM;QACLc,CAAC,GAAI,IAAI,CAAC/D,IAAI,CAACK,CAAC,CAAC,KAAG2D,CAAC,IAAEf,CAAC,CAAC,GAAEa,EAAE;QAC7B,IAAGE,CAAC,IAAI,CAAC,EAAE;UAAEA,CAAC,IAAI,IAAI,CAACxC,EAAE;UAAE,EAAEnB,CAAC;QAAE;MAClC;MACA,IAAG0D,CAAC,GAAG,CAAC,EAAE7C,CAAC,GAAG,IAAI;MAClB,IAAGA,CAAC,EAAEyB,CAAC,IAAIL,QAAQ,CAACyB,CAAC,CAAC;IACxB;EACF;EACA,OAAO7C,CAAC,GAACyB,CAAC,GAAC,GAAG;AAChB;;AAEA;AACA,SAASsB,QAAQA,CAAA,EAAG;EAAE,IAAItB,CAAC,GAAGxC,GAAG,CAAC,CAAC;EAAEP,UAAU,CAAC2D,IAAI,CAACC,KAAK,CAAC,IAAI,EAACb,CAAC,CAAC;EAAE,OAAOA,CAAC;AAAE;;AAE9E;AACA,SAASuB,KAAKA,CAAA,EAAG;EAAE,OAAQ,IAAI,CAACzB,CAAC,GAAC,CAAC,GAAE,IAAI,CAACkB,MAAM,CAAC,CAAC,GAAC,IAAI;AAAE;;AAEzD;AACA,SAASQ,WAAWA,CAACtE,CAAC,EAAE;EACtB,IAAI8C,CAAC,GAAG,IAAI,CAACF,CAAC,GAAC5C,CAAC,CAAC4C,CAAC;EAClB,IAAGE,CAAC,IAAI,CAAC,EAAE,OAAOA,CAAC;EACnB,IAAItC,CAAC,GAAG,IAAI,CAACuC,CAAC;EACdD,CAAC,GAAGtC,CAAC,GAACR,CAAC,CAAC+C,CAAC;EACT,IAAGD,CAAC,IAAI,CAAC,EAAE,OAAQ,IAAI,CAACF,CAAC,GAAC,CAAC,GAAE,CAACE,CAAC,GAACA,CAAC;EACjC,OAAM,EAAEtC,CAAC,IAAI,CAAC,EAAE,IAAG,CAACsC,CAAC,GAAC,IAAI,CAAC3C,IAAI,CAACK,CAAC,CAAC,GAACR,CAAC,CAACG,IAAI,CAACK,CAAC,CAAC,KAAK,CAAC,EAAE,OAAOsC,CAAC;EAC5D,OAAO,CAAC;AACV;;AAEA;AACA,SAASyB,KAAKA,CAAC9D,CAAC,EAAE;EAChB,IAAIqC,CAAC,GAAG,CAAC;IAAEC,CAAC;EACZ,IAAG,CAACA,CAAC,GAACtC,CAAC,KAAG,EAAE,KAAK,CAAC,EAAE;IAAEA,CAAC,GAAGsC,CAAC;IAAED,CAAC,IAAI,EAAE;EAAE;EACtC,IAAG,CAACC,CAAC,GAACtC,CAAC,IAAE,CAAC,KAAK,CAAC,EAAE;IAAEA,CAAC,GAAGsC,CAAC;IAAED,CAAC,IAAI,CAAC;EAAE;EACnC,IAAG,CAACC,CAAC,GAACtC,CAAC,IAAE,CAAC,KAAK,CAAC,EAAE;IAAEA,CAAC,GAAGsC,CAAC;IAAED,CAAC,IAAI,CAAC;EAAE;EACnC,IAAG,CAACC,CAAC,GAACtC,CAAC,IAAE,CAAC,KAAK,CAAC,EAAE;IAAEA,CAAC,GAAGsC,CAAC;IAAED,CAAC,IAAI,CAAC;EAAE;EACnC,IAAG,CAACC,CAAC,GAACtC,CAAC,IAAE,CAAC,KAAK,CAAC,EAAE;IAAEA,CAAC,GAAGsC,CAAC;IAAED,CAAC,IAAI,CAAC;EAAE;EACnC,OAAOA,CAAC;AACV;;AAEA;AACA,SAAS0B,WAAWA,CAAA,EAAG;EACrB,IAAG,IAAI,CAACzB,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC;EACxB,OAAO,IAAI,CAACpB,EAAE,IAAE,IAAI,CAACoB,CAAC,GAAC,CAAC,CAAC,GAACwB,KAAK,CAAC,IAAI,CAACpE,IAAI,CAAC,IAAI,CAAC4C,CAAC,GAAC,CAAC,CAAC,GAAE,IAAI,CAACH,CAAC,GAAC,IAAI,CAAChB,EAAG,CAAC;AACvE;;AAEA;AACA,SAAS6C,YAAYA,CAAC7D,CAAC,EAACkC,CAAC,EAAE;EACzB,IAAItC,CAAC;EACL,KAAIA,CAAC,GAAG,IAAI,CAACuC,CAAC,GAAC,CAAC,EAAEvC,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAEsC,CAAC,CAAC3C,IAAI,CAACK,CAAC,GAACI,CAAC,CAAC,GAAG,IAAI,CAACT,IAAI,CAACK,CAAC,CAAC;EACzD,KAAIA,CAAC,GAAGI,CAAC,GAAC,CAAC,EAAEJ,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAEsC,CAAC,CAAC3C,IAAI,CAACK,CAAC,CAAC,GAAG,CAAC;EACvCsC,CAAC,CAACC,CAAC,GAAG,IAAI,CAACA,CAAC,GAACnC,CAAC;EACdkC,CAAC,CAACF,CAAC,GAAG,IAAI,CAACA,CAAC;AACd;;AAEA;AACA,SAAS8B,YAAYA,CAAC9D,CAAC,EAACkC,CAAC,EAAE;EACzB,KAAI,IAAItC,CAAC,GAAGI,CAAC,EAAEJ,CAAC,GAAG,IAAI,CAACuC,CAAC,EAAE,EAAEvC,CAAC,EAAEsC,CAAC,CAAC3C,IAAI,CAACK,CAAC,GAACI,CAAC,CAAC,GAAG,IAAI,CAACT,IAAI,CAACK,CAAC,CAAC;EAC1DsC,CAAC,CAACC,CAAC,GAAGjC,IAAI,CAAC6D,GAAG,CAAC,IAAI,CAAC5B,CAAC,GAACnC,CAAC,EAAC,CAAC,CAAC;EAC1BkC,CAAC,CAACF,CAAC,GAAG,IAAI,CAACA,CAAC;AACd;;AAEA;AACA,SAASgC,WAAWA,CAAChE,CAAC,EAACkC,CAAC,EAAE;EACxB,IAAI+B,EAAE,GAAGjE,CAAC,GAAC,IAAI,CAACe,EAAE;EAClB,IAAImD,GAAG,GAAG,IAAI,CAACnD,EAAE,GAACkD,EAAE;EACpB,IAAIE,EAAE,GAAG,CAAC,CAAC,IAAED,GAAG,IAAE,CAAC;EACnB,IAAIE,EAAE,GAAGlE,IAAI,CAACC,KAAK,CAACH,CAAC,GAAC,IAAI,CAACe,EAAE,CAAC;IAAEzB,CAAC,GAAI,IAAI,CAAC0C,CAAC,IAAEiC,EAAE,GAAE,IAAI,CAACjD,EAAE;IAAEpB,CAAC;EAC3D,KAAIA,CAAC,GAAG,IAAI,CAACuC,CAAC,GAAC,CAAC,EAAEvC,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;IAC7BsC,CAAC,CAAC3C,IAAI,CAACK,CAAC,GAACwE,EAAE,GAAC,CAAC,CAAC,GAAI,IAAI,CAAC7E,IAAI,CAACK,CAAC,CAAC,IAAEsE,GAAG,GAAE5E,CAAC;IACtCA,CAAC,GAAG,CAAC,IAAI,CAACC,IAAI,CAACK,CAAC,CAAC,GAACuE,EAAE,KAAGF,EAAE;EAC3B;EACA,KAAIrE,CAAC,GAAGwE,EAAE,GAAC,CAAC,EAAExE,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAEsC,CAAC,CAAC3C,IAAI,CAACK,CAAC,CAAC,GAAG,CAAC;EACxCsC,CAAC,CAAC3C,IAAI,CAAC6E,EAAE,CAAC,GAAG9E,CAAC;EACd4C,CAAC,CAACC,CAAC,GAAG,IAAI,CAACA,CAAC,GAACiC,EAAE,GAAC,CAAC;EACjBlC,CAAC,CAACF,CAAC,GAAG,IAAI,CAACA,CAAC;EACZE,CAAC,CAACW,KAAK,CAAC,CAAC;AACX;;AAEA;AACA,SAASwB,WAAWA,CAACrE,CAAC,EAACkC,CAAC,EAAE;EACxBA,CAAC,CAACF,CAAC,GAAG,IAAI,CAACA,CAAC;EACZ,IAAIoC,EAAE,GAAGlE,IAAI,CAACC,KAAK,CAACH,CAAC,GAAC,IAAI,CAACe,EAAE,CAAC;EAC9B,IAAGqD,EAAE,IAAI,IAAI,CAACjC,CAAC,EAAE;IAAED,CAAC,CAACC,CAAC,GAAG,CAAC;IAAE;EAAQ;EACpC,IAAI8B,EAAE,GAAGjE,CAAC,GAAC,IAAI,CAACe,EAAE;EAClB,IAAImD,GAAG,GAAG,IAAI,CAACnD,EAAE,GAACkD,EAAE;EACpB,IAAIE,EAAE,GAAG,CAAC,CAAC,IAAEF,EAAE,IAAE,CAAC;EAClB/B,CAAC,CAAC3C,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAACA,IAAI,CAAC6E,EAAE,CAAC,IAAEH,EAAE;EAC7B,KAAI,IAAIrE,CAAC,GAAGwE,EAAE,GAAC,CAAC,EAAExE,CAAC,GAAG,IAAI,CAACuC,CAAC,EAAE,EAAEvC,CAAC,EAAE;IACjCsC,CAAC,CAAC3C,IAAI,CAACK,CAAC,GAACwE,EAAE,GAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC7E,IAAI,CAACK,CAAC,CAAC,GAACuE,EAAE,KAAGD,GAAG;IACxChC,CAAC,CAAC3C,IAAI,CAACK,CAAC,GAACwE,EAAE,CAAC,GAAG,IAAI,CAAC7E,IAAI,CAACK,CAAC,CAAC,IAAEqE,EAAE;EACjC;EACA,IAAGA,EAAE,GAAG,CAAC,EAAE/B,CAAC,CAAC3C,IAAI,CAAC,IAAI,CAAC4C,CAAC,GAACiC,EAAE,GAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAACpC,CAAC,GAACmC,EAAE,KAAGD,GAAG;EAClDhC,CAAC,CAACC,CAAC,GAAG,IAAI,CAACA,CAAC,GAACiC,EAAE;EACflC,CAAC,CAACW,KAAK,CAAC,CAAC;AACX;;AAEA;AACA,SAASyB,QAAQA,CAAClF,CAAC,EAAC8C,CAAC,EAAE;EACrB,IAAItC,CAAC,GAAG,CAAC;IAAEN,CAAC,GAAG,CAAC;IAAEmB,CAAC,GAAGP,IAAI,CAACqE,GAAG,CAACnF,CAAC,CAAC+C,CAAC,EAAC,IAAI,CAACA,CAAC,CAAC;EAC1C,OAAMvC,CAAC,GAAGa,CAAC,EAAE;IACXnB,CAAC,IAAI,IAAI,CAACC,IAAI,CAACK,CAAC,CAAC,GAACR,CAAC,CAACG,IAAI,CAACK,CAAC,CAAC;IAC3BsC,CAAC,CAAC3C,IAAI,CAACK,CAAC,EAAE,CAAC,GAAGN,CAAC,GAAC,IAAI,CAAC0B,EAAE;IACvB1B,CAAC,KAAK,IAAI,CAACyB,EAAE;EACf;EACA,IAAG3B,CAAC,CAAC+C,CAAC,GAAG,IAAI,CAACA,CAAC,EAAE;IACf7C,CAAC,IAAIF,CAAC,CAAC4C,CAAC;IACR,OAAMpC,CAAC,GAAG,IAAI,CAACuC,CAAC,EAAE;MAChB7C,CAAC,IAAI,IAAI,CAACC,IAAI,CAACK,CAAC,CAAC;MACjBsC,CAAC,CAAC3C,IAAI,CAACK,CAAC,EAAE,CAAC,GAAGN,CAAC,GAAC,IAAI,CAAC0B,EAAE;MACvB1B,CAAC,KAAK,IAAI,CAACyB,EAAE;IACf;IACAzB,CAAC,IAAI,IAAI,CAAC0C,CAAC;EACb,CAAC,MAAM;IACL1C,CAAC,IAAI,IAAI,CAAC0C,CAAC;IACX,OAAMpC,CAAC,GAAGR,CAAC,CAAC+C,CAAC,EAAE;MACb7C,CAAC,IAAIF,CAAC,CAACG,IAAI,CAACK,CAAC,CAAC;MACdsC,CAAC,CAAC3C,IAAI,CAACK,CAAC,EAAE,CAAC,GAAGN,CAAC,GAAC,IAAI,CAAC0B,EAAE;MACvB1B,CAAC,KAAK,IAAI,CAACyB,EAAE;IACf;IACAzB,CAAC,IAAIF,CAAC,CAAC4C,CAAC;EACV;EACAE,CAAC,CAACF,CAAC,GAAI1C,CAAC,GAAC,CAAC,GAAE,CAAC,CAAC,GAAC,CAAC;EAChB,IAAGA,CAAC,GAAG,CAAC,CAAC,EAAE4C,CAAC,CAAC3C,IAAI,CAACK,CAAC,EAAE,CAAC,GAAG,IAAI,CAACqB,EAAE,GAAC3B,CAAC,CAAC,KAC9B,IAAGA,CAAC,GAAG,CAAC,EAAE4C,CAAC,CAAC3C,IAAI,CAACK,CAAC,EAAE,CAAC,GAAGN,CAAC;EAC9B4C,CAAC,CAACC,CAAC,GAAGvC,CAAC;EACPsC,CAAC,CAACW,KAAK,CAAC,CAAC;AACX;;AAEA;AACA;AACA,SAAS2B,aAAaA,CAACpF,CAAC,EAAC8C,CAAC,EAAE;EAC1B,IAAIrC,CAAC,GAAG,IAAI,CAAC4E,GAAG,CAAC,CAAC;IAAEC,CAAC,GAAGtF,CAAC,CAACqF,GAAG,CAAC,CAAC;EAC/B,IAAI7E,CAAC,GAAGC,CAAC,CAACsC,CAAC;EACXD,CAAC,CAACC,CAAC,GAAGvC,CAAC,GAAC8E,CAAC,CAACvC,CAAC;EACX,OAAM,EAAEvC,CAAC,IAAI,CAAC,EAAEsC,CAAC,CAAC3C,IAAI,CAACK,CAAC,CAAC,GAAG,CAAC;EAC7B,KAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8E,CAAC,CAACvC,CAAC,EAAE,EAAEvC,CAAC,EAAEsC,CAAC,CAAC3C,IAAI,CAACK,CAAC,GAACC,CAAC,CAACsC,CAAC,CAAC,GAAGtC,CAAC,CAACgB,EAAE,CAAC,CAAC,EAAC6D,CAAC,CAACnF,IAAI,CAACK,CAAC,CAAC,EAACsC,CAAC,EAACtC,CAAC,EAAC,CAAC,EAACC,CAAC,CAACsC,CAAC,CAAC;EACpED,CAAC,CAACF,CAAC,GAAG,CAAC;EACPE,CAAC,CAACW,KAAK,CAAC,CAAC;EACT,IAAG,IAAI,CAACb,CAAC,IAAI5C,CAAC,CAAC4C,CAAC,EAAE7C,UAAU,CAAC2D,IAAI,CAACC,KAAK,CAACb,CAAC,EAACA,CAAC,CAAC;AAC9C;;AAEA;AACA,SAASyC,WAAWA,CAACzC,CAAC,EAAE;EACtB,IAAIrC,CAAC,GAAG,IAAI,CAAC4E,GAAG,CAAC,CAAC;EAClB,IAAI7E,CAAC,GAAGsC,CAAC,CAACC,CAAC,GAAG,CAAC,GAACtC,CAAC,CAACsC,CAAC;EACnB,OAAM,EAAEvC,CAAC,IAAI,CAAC,EAAEsC,CAAC,CAAC3C,IAAI,CAACK,CAAC,CAAC,GAAG,CAAC;EAC7B,KAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,CAAC,CAACsC,CAAC,GAAC,CAAC,EAAE,EAAEvC,CAAC,EAAE;IACzB,IAAIN,CAAC,GAAGO,CAAC,CAACgB,EAAE,CAACjB,CAAC,EAACC,CAAC,CAACN,IAAI,CAACK,CAAC,CAAC,EAACsC,CAAC,EAAC,CAAC,GAACtC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;IACnC,IAAG,CAACsC,CAAC,CAAC3C,IAAI,CAACK,CAAC,GAACC,CAAC,CAACsC,CAAC,CAAC,IAAEtC,CAAC,CAACgB,EAAE,CAACjB,CAAC,GAAC,CAAC,EAAC,CAAC,GAACC,CAAC,CAACN,IAAI,CAACK,CAAC,CAAC,EAACsC,CAAC,EAAC,CAAC,GAACtC,CAAC,GAAC,CAAC,EAACN,CAAC,EAACO,CAAC,CAACsC,CAAC,GAACvC,CAAC,GAAC,CAAC,CAAC,KAAKC,CAAC,CAACoB,EAAE,EAAE;MACnEiB,CAAC,CAAC3C,IAAI,CAACK,CAAC,GAACC,CAAC,CAACsC,CAAC,CAAC,IAAItC,CAAC,CAACoB,EAAE;MACrBiB,CAAC,CAAC3C,IAAI,CAACK,CAAC,GAACC,CAAC,CAACsC,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC;IACrB;EACF;EACA,IAAGD,CAAC,CAACC,CAAC,GAAG,CAAC,EAAED,CAAC,CAAC3C,IAAI,CAAC2C,CAAC,CAACC,CAAC,GAAC,CAAC,CAAC,IAAItC,CAAC,CAACgB,EAAE,CAACjB,CAAC,EAACC,CAAC,CAACN,IAAI,CAACK,CAAC,CAAC,EAACsC,CAAC,EAAC,CAAC,GAACtC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EACxDsC,CAAC,CAACF,CAAC,GAAG,CAAC;EACPE,CAAC,CAACW,KAAK,CAAC,CAAC;AACX;;AAEA;AACA;AACA,SAAS+B,WAAWA,CAACnE,CAAC,EAACoE,CAAC,EAAC3C,CAAC,EAAE;EAC1B,IAAI4C,EAAE,GAAGrE,CAAC,CAACgE,GAAG,CAAC,CAAC;EAChB,IAAGK,EAAE,CAAC3C,CAAC,IAAI,CAAC,EAAE;EACd,IAAI4C,EAAE,GAAG,IAAI,CAACN,GAAG,CAAC,CAAC;EACnB,IAAGM,EAAE,CAAC5C,CAAC,GAAG2C,EAAE,CAAC3C,CAAC,EAAE;IACd,IAAG0C,CAAC,IAAI,IAAI,EAAEA,CAAC,CAACvC,OAAO,CAAC,CAAC,CAAC;IAC1B,IAAGJ,CAAC,IAAI,IAAI,EAAE,IAAI,CAAC8C,MAAM,CAAC9C,CAAC,CAAC;IAC5B;EACF;EACA,IAAGA,CAAC,IAAI,IAAI,EAAEA,CAAC,GAAGxC,GAAG,CAAC,CAAC;EACvB,IAAIgF,CAAC,GAAGhF,GAAG,CAAC,CAAC;IAAEuF,EAAE,GAAG,IAAI,CAACjD,CAAC;IAAEkD,EAAE,GAAGzE,CAAC,CAACuB,CAAC;EACpC,IAAImD,GAAG,GAAG,IAAI,CAACpE,EAAE,GAAC4C,KAAK,CAACmB,EAAE,CAACvF,IAAI,CAACuF,EAAE,CAAC3C,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1C,IAAGgD,GAAG,GAAG,CAAC,EAAE;IAAEL,EAAE,CAACM,QAAQ,CAACD,GAAG,EAACT,CAAC,CAAC;IAAEK,EAAE,CAACK,QAAQ,CAACD,GAAG,EAACjD,CAAC,CAAC;EAAE,CAAC,MAAM;IAAE4C,EAAE,CAACE,MAAM,CAACN,CAAC,CAAC;IAAEK,EAAE,CAACC,MAAM,CAAC9C,CAAC,CAAC;EAAE;EAC3F,IAAImD,EAAE,GAAGX,CAAC,CAACvC,CAAC;EACZ,IAAImD,EAAE,GAAGZ,CAAC,CAACnF,IAAI,CAAC8F,EAAE,GAAC,CAAC,CAAC;EACrB,IAAGC,EAAE,IAAI,CAAC,EAAE;EACZ,IAAIC,EAAE,GAAGD,EAAE,IAAE,CAAC,IAAE,IAAI,CAACjE,EAAE,CAAC,IAAGgE,EAAE,GAAC,CAAC,GAAEX,CAAC,CAACnF,IAAI,CAAC8F,EAAE,GAAC,CAAC,CAAC,IAAE,IAAI,CAAC/D,EAAE,GAAC,CAAC,CAAC;EACzD,IAAIkE,EAAE,GAAG,IAAI,CAACrE,EAAE,GAACoE,EAAE;IAAEE,EAAE,GAAG,CAAC,CAAC,IAAE,IAAI,CAACpE,EAAE,IAAEkE,EAAE;IAAEG,CAAC,GAAG,CAAC,IAAE,IAAI,CAACpE,EAAE;EACzD,IAAI1B,CAAC,GAAGsC,CAAC,CAACC,CAAC;IAAEpC,CAAC,GAAGH,CAAC,GAACyF,EAAE;IAAElD,CAAC,GAAI0C,CAAC,IAAE,IAAI,GAAEnF,GAAG,CAAC,CAAC,GAACmF,CAAC;EAC5CH,CAAC,CAACiB,SAAS,CAAC5F,CAAC,EAACoC,CAAC,CAAC;EAChB,IAAGD,CAAC,CAAC0D,SAAS,CAACzD,CAAC,CAAC,IAAI,CAAC,EAAE;IACtBD,CAAC,CAAC3C,IAAI,CAAC2C,CAAC,CAACC,CAAC,EAAE,CAAC,GAAG,CAAC;IACjBD,CAAC,CAACa,KAAK,CAACZ,CAAC,EAACD,CAAC,CAAC;EACd;EACA/C,UAAU,CAAC0G,GAAG,CAACF,SAAS,CAACN,EAAE,EAAClD,CAAC,CAAC;EAC9BA,CAAC,CAACY,KAAK,CAAC2B,CAAC,EAACA,CAAC,CAAC,CAAC,CAAC;EACd,OAAMA,CAAC,CAACvC,CAAC,GAAGkD,EAAE,EAAEX,CAAC,CAACnF,IAAI,CAACmF,CAAC,CAACvC,CAAC,EAAE,CAAC,GAAG,CAAC;EACjC,OAAM,EAAEpC,CAAC,IAAI,CAAC,EAAE;IACd;IACA,IAAI+F,EAAE,GAAI5D,CAAC,CAAC3C,IAAI,CAAC,EAAEK,CAAC,CAAC,IAAE0F,EAAE,GAAE,IAAI,CAACtE,EAAE,GAACd,IAAI,CAACC,KAAK,CAAC+B,CAAC,CAAC3C,IAAI,CAACK,CAAC,CAAC,GAAC4F,EAAE,GAAC,CAACtD,CAAC,CAAC3C,IAAI,CAACK,CAAC,GAAC,CAAC,CAAC,GAAC8F,CAAC,IAAED,EAAE,CAAC;IAC9E,IAAG,CAACvD,CAAC,CAAC3C,IAAI,CAACK,CAAC,CAAC,IAAE8E,CAAC,CAAC7D,EAAE,CAAC,CAAC,EAACiF,EAAE,EAAC5D,CAAC,EAACnC,CAAC,EAAC,CAAC,EAACsF,EAAE,CAAC,IAAIS,EAAE,EAAE;MAAE;MAC1CpB,CAAC,CAACiB,SAAS,CAAC5F,CAAC,EAACoC,CAAC,CAAC;MAChBD,CAAC,CAACa,KAAK,CAACZ,CAAC,EAACD,CAAC,CAAC;MACZ,OAAMA,CAAC,CAAC3C,IAAI,CAACK,CAAC,CAAC,GAAG,EAAEkG,EAAE,EAAE5D,CAAC,CAACa,KAAK,CAACZ,CAAC,EAACD,CAAC,CAAC;IACtC;EACF;EACA,IAAG2C,CAAC,IAAI,IAAI,EAAE;IACZ3C,CAAC,CAAC6D,SAAS,CAACV,EAAE,EAACR,CAAC,CAAC;IACjB,IAAGI,EAAE,IAAIC,EAAE,EAAE/F,UAAU,CAAC2D,IAAI,CAACC,KAAK,CAAC8B,CAAC,EAACA,CAAC,CAAC;EACzC;EACA3C,CAAC,CAACC,CAAC,GAAGkD,EAAE;EACRnD,CAAC,CAACW,KAAK,CAAC,CAAC;EACT,IAAGsC,GAAG,GAAG,CAAC,EAAEjD,CAAC,CAAC8D,QAAQ,CAACb,GAAG,EAACjD,CAAC,CAAC,CAAC,CAAC;EAC/B,IAAG+C,EAAE,GAAG,CAAC,EAAE9F,UAAU,CAAC2D,IAAI,CAACC,KAAK,CAACb,CAAC,EAACA,CAAC,CAAC;AACvC;;AAEA;AACA,SAAS+D,KAAKA,CAAC7G,CAAC,EAAE;EAChB,IAAI8C,CAAC,GAAGxC,GAAG,CAAC,CAAC;EACb,IAAI,CAAC+E,GAAG,CAAC,CAAC,CAACyB,QAAQ,CAAC9G,CAAC,EAAC,IAAI,EAAC8C,CAAC,CAAC;EAC7B,IAAG,IAAI,CAACF,CAAC,GAAG,CAAC,IAAIE,CAAC,CAAC0D,SAAS,CAACzG,UAAU,CAAC2D,IAAI,CAAC,GAAG,CAAC,EAAE1D,CAAC,CAAC2D,KAAK,CAACb,CAAC,EAACA,CAAC,CAAC;EAC/D,OAAOA,CAAC;AACV;;AAEA;AACA,SAASiE,OAAOA,CAAC1F,CAAC,EAAE;EAAE,IAAI,CAACA,CAAC,GAAGA,CAAC;AAAE;AAClC,SAAS2F,QAAQA,CAACvG,CAAC,EAAE;EACnB,IAAGA,CAAC,CAACmC,CAAC,GAAG,CAAC,IAAInC,CAAC,CAAC+F,SAAS,CAAC,IAAI,CAACnF,CAAC,CAAC,IAAI,CAAC,EAAE,OAAOZ,CAAC,CAACwG,GAAG,CAAC,IAAI,CAAC5F,CAAC,CAAC,CAAC,KACxD,OAAOZ,CAAC;AACf;AACA,SAASyG,OAAOA,CAACzG,CAAC,EAAE;EAAE,OAAOA,CAAC;AAAE;AAChC,SAAS0G,OAAOA,CAAC1G,CAAC,EAAE;EAAEA,CAAC,CAACqG,QAAQ,CAAC,IAAI,CAACzF,CAAC,EAAC,IAAI,EAACZ,CAAC,CAAC;AAAE;AACjD,SAAS2G,MAAMA,CAAC3G,CAAC,EAAC6E,CAAC,EAACxC,CAAC,EAAE;EAAErC,CAAC,CAAC4G,UAAU,CAAC/B,CAAC,EAACxC,CAAC,CAAC;EAAE,IAAI,CAACwE,MAAM,CAACxE,CAAC,CAAC;AAAE;AAC5D,SAASyE,MAAMA,CAAC9G,CAAC,EAACqC,CAAC,EAAE;EAAErC,CAAC,CAAC+G,QAAQ,CAAC1E,CAAC,CAAC;EAAE,IAAI,CAACwE,MAAM,CAACxE,CAAC,CAAC;AAAE;AAEtDiE,OAAO,CAACvF,SAAS,CAACiG,OAAO,GAAGT,QAAQ;AACpCD,OAAO,CAACvF,SAAS,CAACkG,MAAM,GAAGR,OAAO;AAClCH,OAAO,CAACvF,SAAS,CAAC8F,MAAM,GAAGH,OAAO;AAClCJ,OAAO,CAACvF,SAAS,CAACmG,KAAK,GAAGP,MAAM;AAChCL,OAAO,CAACvF,SAAS,CAACoG,KAAK,GAAGL,MAAM;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASM,WAAWA,CAAA,EAAG;EACrB,IAAG,IAAI,CAAC9E,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC;EACvB,IAAItC,CAAC,GAAG,IAAI,CAACN,IAAI,CAAC,CAAC,CAAC;EACpB,IAAG,CAACM,CAAC,GAAC,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;EACvB,IAAI6E,CAAC,GAAG7E,CAAC,GAAC,CAAC,CAAC,CAAE;EACd6E,CAAC,GAAIA,CAAC,IAAE,CAAC,GAAC,CAAC7E,CAAC,GAAC,GAAG,IAAE6E,CAAC,CAAC,GAAE,GAAG,CAAC,CAAC;EAC3BA,CAAC,GAAIA,CAAC,IAAE,CAAC,GAAC,CAAC7E,CAAC,GAAC,IAAI,IAAE6E,CAAC,CAAC,GAAE,IAAI,CAAC,CAAC;EAC7BA,CAAC,GAAIA,CAAC,IAAE,CAAC,IAAG,CAAC7E,CAAC,GAAC,MAAM,IAAE6E,CAAC,GAAE,MAAM,CAAC,CAAC,GAAE,MAAM,CAAC,CAAC;EAC5C;EACA;EACAA,CAAC,GAAIA,CAAC,IAAE,CAAC,GAAC7E,CAAC,GAAC6E,CAAC,GAAC,IAAI,CAACzD,EAAE,CAAC,GAAE,IAAI,CAACA,EAAE,CAAC,CAAE;EAClC;EACA,OAAQyD,CAAC,GAAC,CAAC,GAAE,IAAI,CAACzD,EAAE,GAACyD,CAAC,GAAC,CAACA,CAAC;AAC3B;;AAEA;AACA,SAASwC,UAAUA,CAACzG,CAAC,EAAE;EACrB,IAAI,CAACA,CAAC,GAAGA,CAAC;EACV,IAAI,CAAC0G,EAAE,GAAG1G,CAAC,CAAC2G,QAAQ,CAAC,CAAC;EACtB,IAAI,CAACC,GAAG,GAAG,IAAI,CAACF,EAAE,GAAC,MAAM;EACzB,IAAI,CAACG,GAAG,GAAG,IAAI,CAACH,EAAE,IAAE,EAAE;EACtB,IAAI,CAACI,EAAE,GAAG,CAAC,CAAC,IAAG9G,CAAC,CAACM,EAAE,GAAC,EAAG,IAAE,CAAC;EAC1B,IAAI,CAACyG,GAAG,GAAG,CAAC,GAAC/G,CAAC,CAAC0B,CAAC;AAClB;;AAEA;AACA,SAASsF,WAAWA,CAAC5H,CAAC,EAAE;EACtB,IAAIqC,CAAC,GAAGxC,GAAG,CAAC,CAAC;EACbG,CAAC,CAAC4E,GAAG,CAAC,CAAC,CAACkB,SAAS,CAAC,IAAI,CAAClF,CAAC,CAAC0B,CAAC,EAACD,CAAC,CAAC;EAC7BA,CAAC,CAACgE,QAAQ,CAAC,IAAI,CAACzF,CAAC,EAAC,IAAI,EAACyB,CAAC,CAAC;EACzB,IAAGrC,CAAC,CAACmC,CAAC,GAAG,CAAC,IAAIE,CAAC,CAAC0D,SAAS,CAACzG,UAAU,CAAC2D,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAACrC,CAAC,CAACsC,KAAK,CAACb,CAAC,EAACA,CAAC,CAAC;EACjE,OAAOA,CAAC;AACV;;AAEA;AACA,SAASwF,UAAUA,CAAC7H,CAAC,EAAE;EACrB,IAAIqC,CAAC,GAAGxC,GAAG,CAAC,CAAC;EACbG,CAAC,CAACmF,MAAM,CAAC9C,CAAC,CAAC;EACX,IAAI,CAACwE,MAAM,CAACxE,CAAC,CAAC;EACd,OAAOA,CAAC;AACV;;AAEA;AACA,SAASyF,UAAUA,CAAC9H,CAAC,EAAE;EACrB,OAAMA,CAAC,CAACsC,CAAC,IAAI,IAAI,CAACqF,GAAG;EAAE;EACrB3H,CAAC,CAACN,IAAI,CAACM,CAAC,CAACsC,CAAC,EAAE,CAAC,GAAG,CAAC;EACnB,KAAI,IAAIvC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACa,CAAC,CAAC0B,CAAC,EAAE,EAAEvC,CAAC,EAAE;IAChC;IACA,IAAIG,CAAC,GAAGF,CAAC,CAACN,IAAI,CAACK,CAAC,CAAC,GAAC,MAAM;IACxB,IAAIgI,EAAE,GAAI7H,CAAC,GAAC,IAAI,CAACsH,GAAG,IAAE,CAAEtH,CAAC,GAAC,IAAI,CAACuH,GAAG,GAAC,CAACzH,CAAC,CAACN,IAAI,CAACK,CAAC,CAAC,IAAE,EAAE,IAAE,IAAI,CAACyH,GAAG,GAAE,IAAI,CAACE,EAAE,KAAG,EAAE,CAAC,GAAE1H,CAAC,CAACmB,EAAE;IAChF;IACAjB,CAAC,GAAGH,CAAC,GAAC,IAAI,CAACa,CAAC,CAAC0B,CAAC;IACdtC,CAAC,CAACN,IAAI,CAACQ,CAAC,CAAC,IAAI,IAAI,CAACU,CAAC,CAACI,EAAE,CAAC,CAAC,EAAC+G,EAAE,EAAC/H,CAAC,EAACD,CAAC,EAAC,CAAC,EAAC,IAAI,CAACa,CAAC,CAAC0B,CAAC,CAAC;IAC3C;IACA,OAAMtC,CAAC,CAACN,IAAI,CAACQ,CAAC,CAAC,IAAIF,CAAC,CAACoB,EAAE,EAAE;MAAEpB,CAAC,CAACN,IAAI,CAACQ,CAAC,CAAC,IAAIF,CAAC,CAACoB,EAAE;MAAEpB,CAAC,CAACN,IAAI,CAAC,EAAEQ,CAAC,CAAC,EAAE;IAAE;EAC/D;EACAF,CAAC,CAACgD,KAAK,CAAC,CAAC;EACThD,CAAC,CAACkG,SAAS,CAAC,IAAI,CAACtF,CAAC,CAAC0B,CAAC,EAACtC,CAAC,CAAC;EACvB,IAAGA,CAAC,CAAC+F,SAAS,CAAC,IAAI,CAACnF,CAAC,CAAC,IAAI,CAAC,EAAEZ,CAAC,CAACkD,KAAK,CAAC,IAAI,CAACtC,CAAC,EAACZ,CAAC,CAAC;AAChD;;AAEA;AACA,SAASgI,SAASA,CAAChI,CAAC,EAACqC,CAAC,EAAE;EAAErC,CAAC,CAAC+G,QAAQ,CAAC1E,CAAC,CAAC;EAAE,IAAI,CAACwE,MAAM,CAACxE,CAAC,CAAC;AAAE;;AAEzD;AACA,SAAS4F,SAASA,CAACjI,CAAC,EAAC6E,CAAC,EAACxC,CAAC,EAAE;EAAErC,CAAC,CAAC4G,UAAU,CAAC/B,CAAC,EAACxC,CAAC,CAAC;EAAE,IAAI,CAACwE,MAAM,CAACxE,CAAC,CAAC;AAAE;AAE/DgF,UAAU,CAACtG,SAAS,CAACiG,OAAO,GAAGY,WAAW;AAC1CP,UAAU,CAACtG,SAAS,CAACkG,MAAM,GAAGY,UAAU;AACxCR,UAAU,CAACtG,SAAS,CAAC8F,MAAM,GAAGiB,UAAU;AACxCT,UAAU,CAACtG,SAAS,CAACmG,KAAK,GAAGe,SAAS;AACtCZ,UAAU,CAACtG,SAAS,CAACoG,KAAK,GAAGa,SAAS;;AAEtC;AACA,SAASE,SAASA,CAAA,EAAG;EAAE,OAAO,CAAE,IAAI,CAAC5F,CAAC,GAAC,CAAC,GAAG,IAAI,CAAC5C,IAAI,CAAC,CAAC,CAAC,GAAC,CAAC,GAAE,IAAI,CAACyC,CAAC,KAAK,CAAC;AAAE;;AAEzE;AACA,SAASgG,MAAMA,CAACtC,CAAC,EAACuC,CAAC,EAAE;EACnB,IAAGvC,CAAC,GAAG,UAAU,IAAIA,CAAC,GAAG,CAAC,EAAE,OAAOvG,UAAU,CAAC0G,GAAG;EACjD,IAAI3D,CAAC,GAAGxC,GAAG,CAAC,CAAC;IAAEwI,EAAE,GAAGxI,GAAG,CAAC,CAAC;IAAEyI,CAAC,GAAGF,CAAC,CAACpB,OAAO,CAAC,IAAI,CAAC;IAAEjH,CAAC,GAAG+D,KAAK,CAAC+B,CAAC,CAAC,GAAC,CAAC;EAC9DyC,CAAC,CAACnD,MAAM,CAAC9C,CAAC,CAAC;EACX,OAAM,EAAEtC,CAAC,IAAI,CAAC,EAAE;IACdqI,CAAC,CAACjB,KAAK,CAAC9E,CAAC,EAACgG,EAAE,CAAC;IACb,IAAG,CAACxC,CAAC,GAAE,CAAC,IAAE9F,CAAE,IAAI,CAAC,EAAEqI,CAAC,CAAClB,KAAK,CAACmB,EAAE,EAACC,CAAC,EAACjG,CAAC,CAAC,CAAC,KAC9B;MAAE,IAAIC,CAAC,GAAGD,CAAC;MAAEA,CAAC,GAAGgG,EAAE;MAAEA,EAAE,GAAG/F,CAAC;IAAE;EACpC;EACA,OAAO8F,CAAC,CAACnB,MAAM,CAAC5E,CAAC,CAAC;AACpB;;AAEA;AACA,SAASkG,WAAWA,CAAC1C,CAAC,EAACjF,CAAC,EAAE;EACxB,IAAIwH,CAAC;EACL,IAAGvC,CAAC,GAAG,GAAG,IAAIjF,CAAC,CAAC4H,MAAM,CAAC,CAAC,EAAEJ,CAAC,GAAG,IAAI9B,OAAO,CAAC1F,CAAC,CAAC,CAAC,KAAMwH,CAAC,GAAG,IAAIf,UAAU,CAACzG,CAAC,CAAC;EACxE,OAAO,IAAI,CAAC6H,GAAG,CAAC5C,CAAC,EAACuC,CAAC,CAAC;AACtB;;AAEA;AACA9I,UAAU,CAACyB,SAAS,CAACoE,MAAM,GAAG/C,SAAS;AACvC9C,UAAU,CAACyB,SAAS,CAAC0B,OAAO,GAAGF,UAAU;AACzCjD,UAAU,CAACyB,SAAS,CAACnB,UAAU,GAAG8C,aAAa;AAC/CpD,UAAU,CAACyB,SAAS,CAACiC,KAAK,GAAGG,QAAQ;AACrC7D,UAAU,CAACyB,SAAS,CAAC+E,SAAS,GAAG9B,YAAY;AAC7C1E,UAAU,CAACyB,SAAS,CAACmF,SAAS,GAAGjC,YAAY;AAC7C3E,UAAU,CAACyB,SAAS,CAACwE,QAAQ,GAAGpB,WAAW;AAC3C7E,UAAU,CAACyB,SAAS,CAACoF,QAAQ,GAAG3B,WAAW;AAC3ClF,UAAU,CAACyB,SAAS,CAACmC,KAAK,GAAGuB,QAAQ;AACrCnF,UAAU,CAACyB,SAAS,CAAC6F,UAAU,GAAGjC,aAAa;AAC/CrF,UAAU,CAACyB,SAAS,CAACgG,QAAQ,GAAGjC,WAAW;AAC3CxF,UAAU,CAACyB,SAAS,CAACsF,QAAQ,GAAGtB,WAAW;AAC3CzF,UAAU,CAACyB,SAAS,CAACwG,QAAQ,GAAGH,WAAW;AAC3C9H,UAAU,CAACyB,SAAS,CAACyH,MAAM,GAAGN,SAAS;AACvC5I,UAAU,CAACyB,SAAS,CAAC0H,GAAG,GAAGN,MAAM;;AAEjC;AACA7I,UAAU,CAACyB,SAAS,CAACuC,QAAQ,GAAGF,UAAU;AAC1C9D,UAAU,CAACyB,SAAS,CAACsC,MAAM,GAAGM,QAAQ;AACtCrE,UAAU,CAACyB,SAAS,CAAC6D,GAAG,GAAGhB,KAAK;AAChCtE,UAAU,CAACyB,SAAS,CAACgF,SAAS,GAAGlC,WAAW;AAC5CvE,UAAU,CAACyB,SAAS,CAAC2H,SAAS,GAAG3E,WAAW;AAC5CzE,UAAU,CAACyB,SAAS,CAACyF,GAAG,GAAGJ,KAAK;AAChC9G,UAAU,CAACyB,SAAS,CAAC4H,SAAS,GAAGJ,WAAW;;AAE5C;AACAjJ,UAAU,CAAC2D,IAAI,GAAGT,GAAG,CAAC,CAAC,CAAC;AACxBlD,UAAU,CAAC0G,GAAG,GAAGxD,GAAG,CAAC,CAAC,CAAC;;AAEvB;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,SAASoG,OAAOA,CAAA,EAAG;EAAE,IAAIvG,CAAC,GAAGxC,GAAG,CAAC,CAAC;EAAE,IAAI,CAACsF,MAAM,CAAC9C,CAAC,CAAC;EAAE,OAAOA,CAAC;AAAE;;AAE9D;AACA,SAASwG,UAAUA,CAAA,EAAG;EACtB,IAAG,IAAI,CAAC1G,CAAC,GAAG,CAAC,EAAE;IACd,IAAG,IAAI,CAACG,CAAC,IAAI,CAAC,EAAE,OAAO,IAAI,CAAC5C,IAAI,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC0B,EAAE,CAAC,KACvC,IAAG,IAAI,CAACkB,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC;EAC/B,CAAC,MAAM,IAAG,IAAI,CAACA,CAAC,IAAI,CAAC,EAAE,OAAO,IAAI,CAAC5C,IAAI,CAAC,CAAC,CAAC,CAAC,KACtC,IAAG,IAAI,CAAC4C,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC;EAC7B;EACA,OAAQ,CAAC,IAAI,CAAC5C,IAAI,CAAC,CAAC,CAAC,GAAE,CAAC,CAAC,IAAG,EAAE,GAAC,IAAI,CAACwB,EAAG,IAAE,CAAE,KAAG,IAAI,CAACA,EAAE,GAAE,IAAI,CAACxB,IAAI,CAAC,CAAC,CAAC;AACnE;;AAEA;AACA,SAASoJ,WAAWA,CAAA,EAAG;EAAE,OAAQ,IAAI,CAACxG,CAAC,IAAE,CAAC,GAAE,IAAI,CAACH,CAAC,GAAE,IAAI,CAACzC,IAAI,CAAC,CAAC,CAAC,IAAE,EAAE,IAAG,EAAE;AAAE;;AAE3E;AACA,SAASqJ,YAAYA,CAAA,EAAG;EAAE,OAAQ,IAAI,CAACzG,CAAC,IAAE,CAAC,GAAE,IAAI,CAACH,CAAC,GAAE,IAAI,CAACzC,IAAI,CAAC,CAAC,CAAC,IAAE,EAAE,IAAG,EAAE;AAAE;;AAE5E;AACA,SAASsJ,YAAYA,CAAC3G,CAAC,EAAE;EAAE,OAAOhC,IAAI,CAACC,KAAK,CAACD,IAAI,CAAC4I,GAAG,GAAC,IAAI,CAAC/H,EAAE,GAACb,IAAI,CAAC6I,GAAG,CAAC7G,CAAC,CAAC,CAAC;AAAE;;AAE5E;AACA,SAAS8G,QAAQA,CAAA,EAAG;EACpB,IAAG,IAAI,CAAChH,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,KACpB,IAAG,IAAI,CAACG,CAAC,IAAI,CAAC,IAAK,IAAI,CAACA,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC5C,IAAI,CAAC,CAAC,CAAC,IAAI,CAAE,EAAE,OAAO,CAAC,CAAC,KAC/D,OAAO,CAAC;AACb;;AAEA;AACA,SAAS0J,UAAUA,CAAC5J,CAAC,EAAE;EACvB,IAAGA,CAAC,IAAI,IAAI,EAAEA,CAAC,GAAG,EAAE;EACpB,IAAG,IAAI,CAAC6J,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI7J,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAG,EAAE,EAAE,OAAO,GAAG;EACpD,IAAI8J,EAAE,GAAG,IAAI,CAACC,SAAS,CAAC/J,CAAC,CAAC;EAC1B,IAAID,CAAC,GAAGc,IAAI,CAACkB,GAAG,CAAC/B,CAAC,EAAC8J,EAAE,CAAC;EACtB,IAAI7F,CAAC,GAAGjB,GAAG,CAACjD,CAAC,CAAC;IAAEsF,CAAC,GAAGhF,GAAG,CAAC,CAAC;IAAEuI,CAAC,GAAGvI,GAAG,CAAC,CAAC;IAAEwC,CAAC,GAAG,EAAE;EAC5C,IAAI,CAACgE,QAAQ,CAAC5C,CAAC,EAACoB,CAAC,EAACuD,CAAC,CAAC;EACpB,OAAMvD,CAAC,CAACwE,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE;IACrBhH,CAAC,GAAG,CAAC9C,CAAC,GAAC6I,CAAC,CAACoB,QAAQ,CAAC,CAAC,EAAElG,QAAQ,CAAC9D,CAAC,CAAC,CAACiK,MAAM,CAAC,CAAC,CAAC,GAAGpH,CAAC;IAC9CwC,CAAC,CAACwB,QAAQ,CAAC5C,CAAC,EAACoB,CAAC,EAACuD,CAAC,CAAC;EAClB;EACA,OAAOA,CAAC,CAACoB,QAAQ,CAAC,CAAC,CAAClG,QAAQ,CAAC9D,CAAC,CAAC,GAAG6C,CAAC;AACnC;;AAEA;AACA,SAASqH,YAAYA,CAACvH,CAAC,EAAC3C,CAAC,EAAE;EAC3B,IAAI,CAACiD,OAAO,CAAC,CAAC,CAAC;EACf,IAAGjD,CAAC,IAAI,IAAI,EAAEA,CAAC,GAAG,EAAE;EACpB,IAAI8J,EAAE,GAAG,IAAI,CAACC,SAAS,CAAC/J,CAAC,CAAC;EAC1B,IAAIiE,CAAC,GAAGpD,IAAI,CAACkB,GAAG,CAAC/B,CAAC,EAAC8J,EAAE,CAAC;IAAExG,EAAE,GAAG,KAAK;IAAE5C,CAAC,GAAG,CAAC;IAAED,CAAC,GAAG,CAAC;EAChD,KAAI,IAAIF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoC,CAAC,CAACU,MAAM,EAAE,EAAE9C,CAAC,EAAE;IACjC,IAAIC,CAAC,GAAGkC,KAAK,CAACC,CAAC,EAACpC,CAAC,CAAC;IAClB,IAAGC,CAAC,GAAG,CAAC,EAAE;MACR,IAAGmC,CAAC,CAACF,MAAM,CAAClC,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAACsJ,MAAM,CAAC,CAAC,IAAI,CAAC,EAAEvG,EAAE,GAAG,IAAI;MACtD;IACF;IACA7C,CAAC,GAAGT,CAAC,GAACS,CAAC,GAACD,CAAC;IACT,IAAG,EAAEE,CAAC,IAAIoJ,EAAE,EAAE;MACZ,IAAI,CAACK,SAAS,CAAClG,CAAC,CAAC;MACjB,IAAI,CAACmG,UAAU,CAAC3J,CAAC,EAAC,CAAC,CAAC;MACpBC,CAAC,GAAG,CAAC;MACLD,CAAC,GAAG,CAAC;IACP;EACD;EACA,IAAGC,CAAC,GAAG,CAAC,EAAE;IACT,IAAI,CAACyJ,SAAS,CAACtJ,IAAI,CAACkB,GAAG,CAAC/B,CAAC,EAACU,CAAC,CAAC,CAAC;IAC7B,IAAI,CAAC0J,UAAU,CAAC3J,CAAC,EAAC,CAAC,CAAC;EACrB;EACA,IAAG6C,EAAE,EAAExD,UAAU,CAAC2D,IAAI,CAACC,KAAK,CAAC,IAAI,EAAC,IAAI,CAAC;AACvC;;AAEA;AACA,SAAS2G,aAAaA,CAACtK,CAAC,EAACC,CAAC,EAACC,CAAC,EAAE;EAC9B,IAAG,QAAQ,IAAI,OAAOD,CAAC,EAAE;IACxB;IACA,IAAGD,CAAC,GAAG,CAAC,EAAE,IAAI,CAACkD,OAAO,CAAC,CAAC,CAAC,CAAC,KACrB;MACH,IAAI,CAAC9C,UAAU,CAACJ,CAAC,EAACE,CAAC,CAAC;MACpB,IAAG,CAAC,IAAI,CAACqK,OAAO,CAACvK,CAAC,GAAC,CAAC,CAAC;QAAG;QACtB,IAAI,CAACwK,SAAS,CAACzK,UAAU,CAAC0G,GAAG,CAACgE,SAAS,CAACzK,CAAC,GAAC,CAAC,CAAC,EAAC0K,KAAK,EAAC,IAAI,CAAC;MAC1D,IAAG,IAAI,CAACzB,MAAM,CAAC,CAAC,EAAE,IAAI,CAACoB,UAAU,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC;MACxC,OAAM,CAAC,IAAI,CAACM,eAAe,CAAC1K,CAAC,CAAC,EAAE;QAC9B,IAAI,CAACoK,UAAU,CAAC,CAAC,EAAC,CAAC,CAAC;QACpB,IAAG,IAAI,CAAClB,SAAS,CAAC,CAAC,GAAGnJ,CAAC,EAAE,IAAI,CAAC2D,KAAK,CAAC5D,UAAU,CAAC0G,GAAG,CAACgE,SAAS,CAACzK,CAAC,GAAC,CAAC,CAAC,EAAC,IAAI,CAAC;MACzE;IACF;EACD,CAAC,MAAM;IACN;IACA,IAAIS,CAAC,GAAG,IAAI4B,KAAK,CAAC,CAAC;MAAEU,CAAC,GAAG/C,CAAC,GAAC,CAAC;IAC5BS,CAAC,CAAC6C,MAAM,GAAG,CAACtD,CAAC,IAAE,CAAC,IAAE,CAAC;IACnBC,CAAC,CAAC2K,SAAS,CAACnK,CAAC,CAAC;IACd,IAAGsC,CAAC,GAAG,CAAC,EAAEtC,CAAC,CAAC,CAAC,CAAC,IAAK,CAAC,CAAC,IAAEsC,CAAC,IAAE,CAAE,CAAC,KAAMtC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IAC3C,IAAI,CAACJ,UAAU,CAACI,CAAC,EAAC,GAAG,CAAC;EACvB;AACA;;AAEA;AACA,SAASoK,aAAaA,CAAA,EAAG;EACzB,IAAIrK,CAAC,GAAG,IAAI,CAACuC,CAAC;IAAED,CAAC,GAAG,IAAIT,KAAK,CAAC,CAAC;EAC/BS,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAACF,CAAC;EACb,IAAIuB,CAAC,GAAG,IAAI,CAACxC,EAAE,GAAEnB,CAAC,GAAC,IAAI,CAACmB,EAAE,GAAE,CAAC;IAAEuC,CAAC;IAAEd,CAAC,GAAG,CAAC;EACvC,IAAG5C,CAAC,EAAE,GAAG,CAAC,EAAE;IACX,IAAG2D,CAAC,GAAG,IAAI,CAACxC,EAAE,IAAI,CAACuC,CAAC,GAAG,IAAI,CAAC/D,IAAI,CAACK,CAAC,CAAC,IAAE2D,CAAC,KAAK,CAAC,IAAI,CAACvB,CAAC,GAAC,IAAI,CAAChB,EAAE,KAAGuC,CAAC,EAC5DrB,CAAC,CAACM,CAAC,EAAE,CAAC,GAAGc,CAAC,GAAE,IAAI,CAACtB,CAAC,IAAG,IAAI,CAACjB,EAAE,GAACwC,CAAG;IAClC,OAAM3D,CAAC,IAAI,CAAC,EAAE;MACZ,IAAG2D,CAAC,GAAG,CAAC,EAAE;QACRD,CAAC,GAAG,CAAC,IAAI,CAAC/D,IAAI,CAACK,CAAC,CAAC,GAAE,CAAC,CAAC,IAAE2D,CAAC,IAAE,CAAE,KAAI,CAAC,GAACA,CAAE;QACpCD,CAAC,IAAI,IAAI,CAAC/D,IAAI,CAAC,EAAEK,CAAC,CAAC,KAAG2D,CAAC,IAAE,IAAI,CAACxC,EAAE,GAAC,CAAC,CAAC;MACrC,CAAC,MAAM;QACLuC,CAAC,GAAI,IAAI,CAAC/D,IAAI,CAACK,CAAC,CAAC,KAAG2D,CAAC,IAAE,CAAC,CAAC,GAAE,IAAI;QAC/B,IAAGA,CAAC,IAAI,CAAC,EAAE;UAAEA,CAAC,IAAI,IAAI,CAACxC,EAAE;UAAE,EAAEnB,CAAC;QAAE;MAClC;MACA,IAAG,CAAC0D,CAAC,GAAC,IAAI,KAAK,CAAC,EAAEA,CAAC,IAAI,CAAC,GAAG;MAC3B,IAAGd,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAACR,CAAC,GAAC,IAAI,MAAMsB,CAAC,GAAC,IAAI,CAAC,EAAE,EAAEd,CAAC;MAC3C,IAAGA,CAAC,GAAG,CAAC,IAAIc,CAAC,IAAI,IAAI,CAACtB,CAAC,EAAEE,CAAC,CAACM,CAAC,EAAE,CAAC,GAAGc,CAAC;IACrC;EACD;EACA,OAAOpB,CAAC;AACR;AAEA,SAASgI,QAAQA,CAAC9K,CAAC,EAAE;EAAE,OAAO,IAAI,CAACwG,SAAS,CAACxG,CAAC,CAAC,IAAE,CAAC;AAAG;AACrD,SAAS+K,KAAKA,CAAC/K,CAAC,EAAE;EAAE,OAAO,IAAI,CAACwG,SAAS,CAACxG,CAAC,CAAC,GAAC,CAAC,GAAE,IAAI,GAACA,CAAC;AAAE;AACxD,SAASgL,KAAKA,CAAChL,CAAC,EAAE;EAAE,OAAO,IAAI,CAACwG,SAAS,CAACxG,CAAC,CAAC,GAAC,CAAC,GAAE,IAAI,GAACA,CAAC;AAAE;;AAExD;AACA,SAASiL,YAAYA,CAACjL,CAAC,EAACkL,EAAE,EAACpI,CAAC,EAAE;EAC9B,IAAItC,CAAC;IAAE2K,CAAC;IAAE9J,CAAC,GAAGP,IAAI,CAACqE,GAAG,CAACnF,CAAC,CAAC+C,CAAC,EAAC,IAAI,CAACA,CAAC,CAAC;EAClC,KAAIvC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGa,CAAC,EAAE,EAAEb,CAAC,EAAEsC,CAAC,CAAC3C,IAAI,CAACK,CAAC,CAAC,GAAG0K,EAAE,CAAC,IAAI,CAAC/K,IAAI,CAACK,CAAC,CAAC,EAACR,CAAC,CAACG,IAAI,CAACK,CAAC,CAAC,CAAC;EAC7D,IAAGR,CAAC,CAAC+C,CAAC,GAAG,IAAI,CAACA,CAAC,EAAE;IAChBoI,CAAC,GAAGnL,CAAC,CAAC4C,CAAC,GAAC,IAAI,CAAChB,EAAE;IACf,KAAIpB,CAAC,GAAGa,CAAC,EAAEb,CAAC,GAAG,IAAI,CAACuC,CAAC,EAAE,EAAEvC,CAAC,EAAEsC,CAAC,CAAC3C,IAAI,CAACK,CAAC,CAAC,GAAG0K,EAAE,CAAC,IAAI,CAAC/K,IAAI,CAACK,CAAC,CAAC,EAAC2K,CAAC,CAAC;IAC1DrI,CAAC,CAACC,CAAC,GAAG,IAAI,CAACA,CAAC;EACb,CAAC,MAAM;IACNoI,CAAC,GAAG,IAAI,CAACvI,CAAC,GAAC,IAAI,CAAChB,EAAE;IAClB,KAAIpB,CAAC,GAAGa,CAAC,EAAEb,CAAC,GAAGR,CAAC,CAAC+C,CAAC,EAAE,EAAEvC,CAAC,EAAEsC,CAAC,CAAC3C,IAAI,CAACK,CAAC,CAAC,GAAG0K,EAAE,CAACC,CAAC,EAACnL,CAAC,CAACG,IAAI,CAACK,CAAC,CAAC,CAAC;IACpDsC,CAAC,CAACC,CAAC,GAAG/C,CAAC,CAAC+C,CAAC;EACV;EACAD,CAAC,CAACF,CAAC,GAAGsI,EAAE,CAAC,IAAI,CAACtI,CAAC,EAAC5C,CAAC,CAAC4C,CAAC,CAAC;EACpBE,CAAC,CAACW,KAAK,CAAC,CAAC;AACT;;AAEA;AACA,SAAS2H,MAAMA,CAAC3K,CAAC,EAAC6E,CAAC,EAAE;EAAE,OAAO7E,CAAC,GAAC6E,CAAC;AAAE;AACnC,SAAS+F,KAAKA,CAACrL,CAAC,EAAE;EAAE,IAAI8C,CAAC,GAAGxC,GAAG,CAAC,CAAC;EAAE,IAAI,CAACkK,SAAS,CAACxK,CAAC,EAACoL,MAAM,EAACtI,CAAC,CAAC;EAAE,OAAOA,CAAC;AAAE;;AAEzE;AACA,SAAS4H,KAAKA,CAACjK,CAAC,EAAC6E,CAAC,EAAE;EAAE,OAAO7E,CAAC,GAAC6E,CAAC;AAAE;AAClC,SAASgG,IAAIA,CAACtL,CAAC,EAAE;EAAE,IAAI8C,CAAC,GAAGxC,GAAG,CAAC,CAAC;EAAE,IAAI,CAACkK,SAAS,CAACxK,CAAC,EAAC0K,KAAK,EAAC5H,CAAC,CAAC;EAAE,OAAOA,CAAC;AAAE;;AAEvE;AACA,SAASyI,MAAMA,CAAC9K,CAAC,EAAC6E,CAAC,EAAE;EAAE,OAAO7E,CAAC,GAAC6E,CAAC;AAAE;AACnC,SAASkG,KAAKA,CAACxL,CAAC,EAAE;EAAE,IAAI8C,CAAC,GAAGxC,GAAG,CAAC,CAAC;EAAE,IAAI,CAACkK,SAAS,CAACxK,CAAC,EAACuL,MAAM,EAACzI,CAAC,CAAC;EAAE,OAAOA,CAAC;AAAE;;AAEzE;AACA,SAAS2I,SAASA,CAAChL,CAAC,EAAC6E,CAAC,EAAE;EAAE,OAAO7E,CAAC,GAAC,CAAC6E,CAAC;AAAE;AACvC,SAASoG,QAAQA,CAAC1L,CAAC,EAAE;EAAE,IAAI8C,CAAC,GAAGxC,GAAG,CAAC,CAAC;EAAE,IAAI,CAACkK,SAAS,CAACxK,CAAC,EAACyL,SAAS,EAAC3I,CAAC,CAAC;EAAE,OAAOA,CAAC;AAAE;;AAE/E;AACA,SAAS6I,KAAKA,CAAA,EAAG;EACjB,IAAI7I,CAAC,GAAGxC,GAAG,CAAC,CAAC;EACb,KAAI,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACuC,CAAC,EAAE,EAAEvC,CAAC,EAAEsC,CAAC,CAAC3C,IAAI,CAACK,CAAC,CAAC,GAAG,IAAI,CAACoB,EAAE,GAAC,CAAC,IAAI,CAACzB,IAAI,CAACK,CAAC,CAAC;EACjEsC,CAAC,CAACC,CAAC,GAAG,IAAI,CAACA,CAAC;EACZD,CAAC,CAACF,CAAC,GAAG,CAAC,IAAI,CAACA,CAAC;EACb,OAAOE,CAAC;AACR;;AAEA;AACA,SAAS8I,WAAWA,CAAChL,CAAC,EAAE;EACxB,IAAIkC,CAAC,GAAGxC,GAAG,CAAC,CAAC;EACb,IAAGM,CAAC,GAAG,CAAC,EAAE,IAAI,CAACgG,QAAQ,CAAC,CAAChG,CAAC,EAACkC,CAAC,CAAC,CAAC,KAAM,IAAI,CAACkD,QAAQ,CAACpF,CAAC,EAACkC,CAAC,CAAC;EACtD,OAAOA,CAAC;AACR;;AAEA;AACA,SAAS+I,YAAYA,CAACjL,CAAC,EAAE;EACzB,IAAIkC,CAAC,GAAGxC,GAAG,CAAC,CAAC;EACb,IAAGM,CAAC,GAAG,CAAC,EAAE,IAAI,CAACoF,QAAQ,CAAC,CAACpF,CAAC,EAACkC,CAAC,CAAC,CAAC,KAAM,IAAI,CAAC8D,QAAQ,CAAChG,CAAC,EAACkC,CAAC,CAAC;EACtD,OAAOA,CAAC;AACR;;AAEA;AACA,SAASgJ,IAAIA,CAACrL,CAAC,EAAE;EACjB,IAAGA,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC;EACpB,IAAIqC,CAAC,GAAG,CAAC;EACT,IAAG,CAACrC,CAAC,GAAC,MAAM,KAAK,CAAC,EAAE;IAAEA,CAAC,KAAK,EAAE;IAAEqC,CAAC,IAAI,EAAE;EAAE;EACzC,IAAG,CAACrC,CAAC,GAAC,IAAI,KAAK,CAAC,EAAE;IAAEA,CAAC,KAAK,CAAC;IAAEqC,CAAC,IAAI,CAAC;EAAE;EACrC,IAAG,CAACrC,CAAC,GAAC,GAAG,KAAK,CAAC,EAAE;IAAEA,CAAC,KAAK,CAAC;IAAEqC,CAAC,IAAI,CAAC;EAAE;EACpC,IAAG,CAACrC,CAAC,GAAC,CAAC,KAAK,CAAC,EAAE;IAAEA,CAAC,KAAK,CAAC;IAAEqC,CAAC,IAAI,CAAC;EAAE;EAClC,IAAG,CAACrC,CAAC,GAAC,CAAC,KAAK,CAAC,EAAE,EAAEqC,CAAC;EAClB,OAAOA,CAAC;AACR;;AAEA;AACA,SAASiJ,iBAAiBA,CAAA,EAAG;EAC7B,KAAI,IAAIvL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACuC,CAAC,EAAE,EAAEvC,CAAC,EAC7B,IAAG,IAAI,CAACL,IAAI,CAACK,CAAC,CAAC,IAAI,CAAC,EAAE,OAAOA,CAAC,GAAC,IAAI,CAACmB,EAAE,GAACmK,IAAI,CAAC,IAAI,CAAC3L,IAAI,CAACK,CAAC,CAAC,CAAC;EAC1D,IAAG,IAAI,CAACoC,CAAC,GAAG,CAAC,EAAE,OAAO,IAAI,CAACG,CAAC,GAAC,IAAI,CAACpB,EAAE;EACpC,OAAO,CAAC,CAAC;AACT;;AAEA;AACA,SAASqK,IAAIA,CAACvL,CAAC,EAAE;EACjB,IAAIqC,CAAC,GAAG,CAAC;EACT,OAAMrC,CAAC,IAAI,CAAC,EAAE;IAAEA,CAAC,IAAIA,CAAC,GAAC,CAAC;IAAE,EAAEqC,CAAC;EAAE;EAC/B,OAAOA,CAAC;AACR;;AAEA;AACA,SAASmJ,UAAUA,CAAA,EAAG;EACtB,IAAInJ,CAAC,GAAG,CAAC;IAAErC,CAAC,GAAG,IAAI,CAACmC,CAAC,GAAC,IAAI,CAAChB,EAAE;EAC7B,KAAI,IAAIpB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACuC,CAAC,EAAE,EAAEvC,CAAC,EAAEsC,CAAC,IAAIkJ,IAAI,CAAC,IAAI,CAAC7L,IAAI,CAACK,CAAC,CAAC,GAACC,CAAC,CAAC;EACzD,OAAOqC,CAAC;AACR;;AAEA;AACA,SAASoJ,SAASA,CAACtL,CAAC,EAAE;EACtB,IAAID,CAAC,GAAGG,IAAI,CAACC,KAAK,CAACH,CAAC,GAAC,IAAI,CAACe,EAAE,CAAC;EAC7B,IAAGhB,CAAC,IAAI,IAAI,CAACoC,CAAC,EAAE,OAAO,IAAI,CAACH,CAAC,IAAE,CAAC;EAChC,OAAO,CAAC,IAAI,CAACzC,IAAI,CAACQ,CAAC,CAAC,GAAE,CAAC,IAAGC,CAAC,GAAC,IAAI,CAACe,EAAI,KAAG,CAAC;AACzC;;AAEA;AACA,SAASwK,YAAYA,CAACvL,CAAC,EAACsK,EAAE,EAAE;EAC5B,IAAIpI,CAAC,GAAG/C,UAAU,CAAC0G,GAAG,CAACgE,SAAS,CAAC7J,CAAC,CAAC;EACnC,IAAI,CAAC4J,SAAS,CAAC1H,CAAC,EAACoI,EAAE,EAACpI,CAAC,CAAC;EACtB,OAAOA,CAAC;AACR;;AAEA;AACA,SAASsJ,QAAQA,CAACxL,CAAC,EAAE;EAAE,OAAO,IAAI,CAACyL,SAAS,CAACzL,CAAC,EAAC8J,KAAK,CAAC;AAAE;;AAEvD;AACA,SAAS4B,UAAUA,CAAC1L,CAAC,EAAE;EAAE,OAAO,IAAI,CAACyL,SAAS,CAACzL,CAAC,EAAC6K,SAAS,CAAC;AAAE;;AAE7D;AACA,SAASc,SAASA,CAAC3L,CAAC,EAAE;EAAE,OAAO,IAAI,CAACyL,SAAS,CAACzL,CAAC,EAAC2K,MAAM,CAAC;AAAE;;AAEzD;AACA,SAASiB,QAAQA,CAACxM,CAAC,EAAC8C,CAAC,EAAE;EACvB,IAAItC,CAAC,GAAG,CAAC;IAAEN,CAAC,GAAG,CAAC;IAAEmB,CAAC,GAAGP,IAAI,CAACqE,GAAG,CAACnF,CAAC,CAAC+C,CAAC,EAAC,IAAI,CAACA,CAAC,CAAC;EAC1C,OAAMvC,CAAC,GAAGa,CAAC,EAAE;IACZnB,CAAC,IAAI,IAAI,CAACC,IAAI,CAACK,CAAC,CAAC,GAACR,CAAC,CAACG,IAAI,CAACK,CAAC,CAAC;IAC3BsC,CAAC,CAAC3C,IAAI,CAACK,CAAC,EAAE,CAAC,GAAGN,CAAC,GAAC,IAAI,CAAC0B,EAAE;IACvB1B,CAAC,KAAK,IAAI,CAACyB,EAAE;EACd;EACA,IAAG3B,CAAC,CAAC+C,CAAC,GAAG,IAAI,CAACA,CAAC,EAAE;IAChB7C,CAAC,IAAIF,CAAC,CAAC4C,CAAC;IACR,OAAMpC,CAAC,GAAG,IAAI,CAACuC,CAAC,EAAE;MAChB7C,CAAC,IAAI,IAAI,CAACC,IAAI,CAACK,CAAC,CAAC;MACjBsC,CAAC,CAAC3C,IAAI,CAACK,CAAC,EAAE,CAAC,GAAGN,CAAC,GAAC,IAAI,CAAC0B,EAAE;MACvB1B,CAAC,KAAK,IAAI,CAACyB,EAAE;IACf;IACAzB,CAAC,IAAI,IAAI,CAAC0C,CAAC;EACZ,CAAC,MAAM;IACN1C,CAAC,IAAI,IAAI,CAAC0C,CAAC;IACX,OAAMpC,CAAC,GAAGR,CAAC,CAAC+C,CAAC,EAAE;MACb7C,CAAC,IAAIF,CAAC,CAACG,IAAI,CAACK,CAAC,CAAC;MACdsC,CAAC,CAAC3C,IAAI,CAACK,CAAC,EAAE,CAAC,GAAGN,CAAC,GAAC,IAAI,CAAC0B,EAAE;MACvB1B,CAAC,KAAK,IAAI,CAACyB,EAAE;IACf;IACAzB,CAAC,IAAIF,CAAC,CAAC4C,CAAC;EACT;EACAE,CAAC,CAACF,CAAC,GAAI1C,CAAC,GAAC,CAAC,GAAE,CAAC,CAAC,GAAC,CAAC;EAChB,IAAGA,CAAC,GAAG,CAAC,EAAE4C,CAAC,CAAC3C,IAAI,CAACK,CAAC,EAAE,CAAC,GAAGN,CAAC,CAAC,KACrB,IAAGA,CAAC,GAAG,CAAC,CAAC,EAAE4C,CAAC,CAAC3C,IAAI,CAACK,CAAC,EAAE,CAAC,GAAG,IAAI,CAACqB,EAAE,GAAC3B,CAAC;EACvC4C,CAAC,CAACC,CAAC,GAAGvC,CAAC;EACPsC,CAAC,CAACW,KAAK,CAAC,CAAC;AACT;;AAEA;AACA,SAASgJ,KAAKA,CAACzM,CAAC,EAAE;EAAE,IAAI8C,CAAC,GAAGxC,GAAG,CAAC,CAAC;EAAE,IAAI,CAACoM,KAAK,CAAC1M,CAAC,EAAC8C,CAAC,CAAC;EAAE,OAAOA,CAAC;AAAE;;AAE9D;AACA,SAAS6J,UAAUA,CAAC3M,CAAC,EAAE;EAAE,IAAI8C,CAAC,GAAGxC,GAAG,CAAC,CAAC;EAAE,IAAI,CAACqD,KAAK,CAAC3D,CAAC,EAAC8C,CAAC,CAAC;EAAE,OAAOA,CAAC;AAAE;;AAEnE;AACA,SAAS8J,UAAUA,CAAC5M,CAAC,EAAE;EAAE,IAAI8C,CAAC,GAAGxC,GAAG,CAAC,CAAC;EAAE,IAAI,CAAC+G,UAAU,CAACrH,CAAC,EAAC8C,CAAC,CAAC;EAAE,OAAOA,CAAC;AAAE;;AAExE;AACA,SAAS+J,QAAQA,CAAC7M,CAAC,EAAE;EAAE,IAAI8C,CAAC,GAAGxC,GAAG,CAAC,CAAC;EAAE,IAAI,CAACwG,QAAQ,CAAC9G,CAAC,EAAC8C,CAAC,EAAC,IAAI,CAAC;EAAE,OAAOA,CAAC;AAAE;;AAEzE;AACA,SAASgK,WAAWA,CAAC9M,CAAC,EAAE;EAAE,IAAI8C,CAAC,GAAGxC,GAAG,CAAC,CAAC;EAAE,IAAI,CAACwG,QAAQ,CAAC9G,CAAC,EAAC,IAAI,EAAC8C,CAAC,CAAC;EAAE,OAAOA,CAAC;AAAE;;AAE5E;AACA,SAASiK,oBAAoBA,CAAC/M,CAAC,EAAE;EACjC,IAAIyF,CAAC,GAAGnF,GAAG,CAAC,CAAC;IAAEwC,CAAC,GAAGxC,GAAG,CAAC,CAAC;EACxB,IAAI,CAACwG,QAAQ,CAAC9G,CAAC,EAACyF,CAAC,EAAC3C,CAAC,CAAC;EACpB,OAAO,IAAIT,KAAK,CAACoD,CAAC,EAAC3C,CAAC,CAAC;AACrB;;AAEA;AACA,SAASkK,YAAYA,CAACpM,CAAC,EAAE;EACzB,IAAI,CAACT,IAAI,CAAC,IAAI,CAAC4C,CAAC,CAAC,GAAG,IAAI,CAACtB,EAAE,CAAC,CAAC,EAACb,CAAC,GAAC,CAAC,EAAC,IAAI,EAAC,CAAC,EAAC,CAAC,EAAC,IAAI,CAACmC,CAAC,CAAC;EAClD,EAAE,IAAI,CAACA,CAAC;EACR,IAAI,CAACU,KAAK,CAAC,CAAC;AACZ;;AAEA;AACA,SAASwJ,aAAaA,CAACrM,CAAC,EAACF,CAAC,EAAE;EAC5B,IAAGE,CAAC,IAAI,CAAC,EAAE;EACX,OAAM,IAAI,CAACmC,CAAC,IAAIrC,CAAC,EAAE,IAAI,CAACP,IAAI,CAAC,IAAI,CAAC4C,CAAC,EAAE,CAAC,GAAG,CAAC;EAC1C,IAAI,CAAC5C,IAAI,CAACO,CAAC,CAAC,IAAIE,CAAC;EACjB,OAAM,IAAI,CAACT,IAAI,CAACO,CAAC,CAAC,IAAI,IAAI,CAACmB,EAAE,EAAE;IAC9B,IAAI,CAAC1B,IAAI,CAACO,CAAC,CAAC,IAAI,IAAI,CAACmB,EAAE;IACvB,IAAG,EAAEnB,CAAC,IAAI,IAAI,CAACqC,CAAC,EAAE,IAAI,CAAC5C,IAAI,CAAC,IAAI,CAAC4C,CAAC,EAAE,CAAC,GAAG,CAAC;IACzC,EAAE,IAAI,CAAC5C,IAAI,CAACO,CAAC,CAAC;EACf;AACA;;AAEA;AACA,SAASwM,OAAOA,CAAA,EAAG,CAAC;AACpB,SAASC,IAAIA,CAAC1M,CAAC,EAAE;EAAE,OAAOA,CAAC;AAAE;AAC7B,SAAS2M,MAAMA,CAAC3M,CAAC,EAAC6E,CAAC,EAACxC,CAAC,EAAE;EAAErC,CAAC,CAAC4G,UAAU,CAAC/B,CAAC,EAACxC,CAAC,CAAC;AAAE;AAC5C,SAASuK,MAAMA,CAAC5M,CAAC,EAACqC,CAAC,EAAE;EAAErC,CAAC,CAAC+G,QAAQ,CAAC1E,CAAC,CAAC;AAAE;AAEtCoK,OAAO,CAAC1L,SAAS,CAACiG,OAAO,GAAG0F,IAAI;AAChCD,OAAO,CAAC1L,SAAS,CAACkG,MAAM,GAAGyF,IAAI;AAC/BD,OAAO,CAAC1L,SAAS,CAACmG,KAAK,GAAGyF,MAAM;AAChCF,OAAO,CAAC1L,SAAS,CAACoG,KAAK,GAAGyF,MAAM;;AAEhC;AACA,SAASC,KAAKA,CAAChH,CAAC,EAAE;EAAE,OAAO,IAAI,CAAC4C,GAAG,CAAC5C,CAAC,EAAC,IAAI4G,OAAO,CAAC,CAAC,CAAC;AAAE;;AAEtD;AACA;AACA,SAASK,kBAAkBA,CAACvN,CAAC,EAACY,CAAC,EAACkC,CAAC,EAAE;EACnC,IAAItC,CAAC,GAAGM,IAAI,CAACqE,GAAG,CAAC,IAAI,CAACpC,CAAC,GAAC/C,CAAC,CAAC+C,CAAC,EAACnC,CAAC,CAAC;EAC9BkC,CAAC,CAACF,CAAC,GAAG,CAAC,CAAC,CAAC;EACTE,CAAC,CAACC,CAAC,GAAGvC,CAAC;EACP,OAAMA,CAAC,GAAG,CAAC,EAAEsC,CAAC,CAAC3C,IAAI,CAAC,EAAEK,CAAC,CAAC,GAAG,CAAC;EAC5B,IAAIG,CAAC;EACL,KAAIA,CAAC,GAAGmC,CAAC,CAACC,CAAC,GAAC,IAAI,CAACA,CAAC,EAAEvC,CAAC,GAAGG,CAAC,EAAE,EAAEH,CAAC,EAAEsC,CAAC,CAAC3C,IAAI,CAACK,CAAC,GAAC,IAAI,CAACuC,CAAC,CAAC,GAAG,IAAI,CAACtB,EAAE,CAAC,CAAC,EAACzB,CAAC,CAACG,IAAI,CAACK,CAAC,CAAC,EAACsC,CAAC,EAACtC,CAAC,EAAC,CAAC,EAAC,IAAI,CAACuC,CAAC,CAAC;EACpF,KAAIpC,CAAC,GAAGG,IAAI,CAACqE,GAAG,CAACnF,CAAC,CAAC+C,CAAC,EAACnC,CAAC,CAAC,EAAEJ,CAAC,GAAGG,CAAC,EAAE,EAAEH,CAAC,EAAE,IAAI,CAACiB,EAAE,CAAC,CAAC,EAACzB,CAAC,CAACG,IAAI,CAACK,CAAC,CAAC,EAACsC,CAAC,EAACtC,CAAC,EAAC,CAAC,EAACI,CAAC,GAACJ,CAAC,CAAC;EACnEsC,CAAC,CAACW,KAAK,CAAC,CAAC;AACT;;AAEA;AACA;AACA,SAAS+J,kBAAkBA,CAACxN,CAAC,EAACY,CAAC,EAACkC,CAAC,EAAE;EACnC,EAAElC,CAAC;EACH,IAAIJ,CAAC,GAAGsC,CAAC,CAACC,CAAC,GAAG,IAAI,CAACA,CAAC,GAAC/C,CAAC,CAAC+C,CAAC,GAACnC,CAAC;EAC1BkC,CAAC,CAACF,CAAC,GAAG,CAAC,CAAC,CAAC;EACT,OAAM,EAAEpC,CAAC,IAAI,CAAC,EAAEsC,CAAC,CAAC3C,IAAI,CAACK,CAAC,CAAC,GAAG,CAAC;EAC7B,KAAIA,CAAC,GAAGM,IAAI,CAAC6D,GAAG,CAAC/D,CAAC,GAAC,IAAI,CAACmC,CAAC,EAAC,CAAC,CAAC,EAAEvC,CAAC,GAAGR,CAAC,CAAC+C,CAAC,EAAE,EAAEvC,CAAC,EACzCsC,CAAC,CAAC3C,IAAI,CAAC,IAAI,CAAC4C,CAAC,GAACvC,CAAC,GAACI,CAAC,CAAC,GAAG,IAAI,CAACa,EAAE,CAACb,CAAC,GAACJ,CAAC,EAACR,CAAC,CAACG,IAAI,CAACK,CAAC,CAAC,EAACsC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,IAAI,CAACC,CAAC,GAACvC,CAAC,GAACI,CAAC,CAAC;EAC7DkC,CAAC,CAACW,KAAK,CAAC,CAAC;EACTX,CAAC,CAAC6D,SAAS,CAAC,CAAC,EAAC7D,CAAC,CAAC;AAChB;;AAEA;AACA,SAAS2K,OAAOA,CAACpM,CAAC,EAAE;EACpB;EACA,IAAI,CAACyH,EAAE,GAAGxI,GAAG,CAAC,CAAC;EACf,IAAI,CAACoN,EAAE,GAAGpN,GAAG,CAAC,CAAC;EACfP,UAAU,CAAC0G,GAAG,CAACF,SAAS,CAAC,CAAC,GAAClF,CAAC,CAAC0B,CAAC,EAAC,IAAI,CAAC+F,EAAE,CAAC;EACvC,IAAI,CAAC6E,EAAE,GAAG,IAAI,CAAC7E,EAAE,CAAC8E,MAAM,CAACvM,CAAC,CAAC;EAC3B,IAAI,CAACA,CAAC,GAAGA,CAAC;AACV;AAEA,SAASwM,cAAcA,CAACpN,CAAC,EAAE;EAC3B,IAAGA,CAAC,CAACmC,CAAC,GAAG,CAAC,IAAInC,CAAC,CAACsC,CAAC,GAAG,CAAC,GAAC,IAAI,CAAC1B,CAAC,CAAC0B,CAAC,EAAE,OAAOtC,CAAC,CAACwG,GAAG,CAAC,IAAI,CAAC5F,CAAC,CAAC,CAAC,KAChD,IAAGZ,CAAC,CAAC+F,SAAS,CAAC,IAAI,CAACnF,CAAC,CAAC,GAAG,CAAC,EAAE,OAAOZ,CAAC,CAAC,KACrC;IAAE,IAAIqC,CAAC,GAAGxC,GAAG,CAAC,CAAC;IAAEG,CAAC,CAACmF,MAAM,CAAC9C,CAAC,CAAC;IAAE,IAAI,CAACwE,MAAM,CAACxE,CAAC,CAAC;IAAE,OAAOA,CAAC;EAAE;AAC7D;AAEA,SAASgL,aAAaA,CAACrN,CAAC,EAAE;EAAE,OAAOA,CAAC;AAAE;;AAEtC;AACA,SAASsN,aAAaA,CAACtN,CAAC,EAAE;EAC1BA,CAAC,CAACkG,SAAS,CAAC,IAAI,CAACtF,CAAC,CAAC0B,CAAC,GAAC,CAAC,EAAC,IAAI,CAAC+F,EAAE,CAAC;EAC/B,IAAGrI,CAAC,CAACsC,CAAC,GAAG,IAAI,CAAC1B,CAAC,CAAC0B,CAAC,GAAC,CAAC,EAAE;IAAEtC,CAAC,CAACsC,CAAC,GAAG,IAAI,CAAC1B,CAAC,CAAC0B,CAAC,GAAC,CAAC;IAAEtC,CAAC,CAACgD,KAAK,CAAC,CAAC;EAAE;EACpD,IAAI,CAACkK,EAAE,CAACK,eAAe,CAAC,IAAI,CAAClF,EAAE,EAAC,IAAI,CAACzH,CAAC,CAAC0B,CAAC,GAAC,CAAC,EAAC,IAAI,CAAC2K,EAAE,CAAC;EACnD,IAAI,CAACrM,CAAC,CAAC4M,eAAe,CAAC,IAAI,CAACP,EAAE,EAAC,IAAI,CAACrM,CAAC,CAAC0B,CAAC,GAAC,CAAC,EAAC,IAAI,CAAC+F,EAAE,CAAC;EAClD,OAAMrI,CAAC,CAAC+F,SAAS,CAAC,IAAI,CAACsC,EAAE,CAAC,GAAG,CAAC,EAAErI,CAAC,CAAC4J,UAAU,CAAC,CAAC,EAAC,IAAI,CAAChJ,CAAC,CAAC0B,CAAC,GAAC,CAAC,CAAC;EAC1DtC,CAAC,CAACkD,KAAK,CAAC,IAAI,CAACmF,EAAE,EAACrI,CAAC,CAAC;EAClB,OAAMA,CAAC,CAAC+F,SAAS,CAAC,IAAI,CAACnF,CAAC,CAAC,IAAI,CAAC,EAAEZ,CAAC,CAACkD,KAAK,CAAC,IAAI,CAACtC,CAAC,EAACZ,CAAC,CAAC;AACjD;;AAEA;AACA,SAASyN,YAAYA,CAACzN,CAAC,EAACqC,CAAC,EAAE;EAAErC,CAAC,CAAC+G,QAAQ,CAAC1E,CAAC,CAAC;EAAE,IAAI,CAACwE,MAAM,CAACxE,CAAC,CAAC;AAAE;;AAE5D;AACA,SAASqL,YAAYA,CAAC1N,CAAC,EAAC6E,CAAC,EAACxC,CAAC,EAAE;EAAErC,CAAC,CAAC4G,UAAU,CAAC/B,CAAC,EAACxC,CAAC,CAAC;EAAE,IAAI,CAACwE,MAAM,CAACxE,CAAC,CAAC;AAAE;AAElE2K,OAAO,CAACjM,SAAS,CAACiG,OAAO,GAAGoG,cAAc;AAC1CJ,OAAO,CAACjM,SAAS,CAACkG,MAAM,GAAGoG,aAAa;AACxCL,OAAO,CAACjM,SAAS,CAAC8F,MAAM,GAAGyG,aAAa;AACxCN,OAAO,CAACjM,SAAS,CAACmG,KAAK,GAAGwG,YAAY;AACtCV,OAAO,CAACjM,SAAS,CAACoG,KAAK,GAAGsG,YAAY;;AAEtC;AACA,SAASE,QAAQA,CAAC9H,CAAC,EAACjF,CAAC,EAAE;EACvB,IAAIb,CAAC,GAAG8F,CAAC,CAAC6C,SAAS,CAAC,CAAC;IAAE/F,CAAC;IAAEN,CAAC,GAAGG,GAAG,CAAC,CAAC,CAAC;IAAE4F,CAAC;EACvC,IAAGrI,CAAC,IAAI,CAAC,EAAE,OAAOsC,CAAC,CAAC,KACf,IAAGtC,CAAC,GAAG,EAAE,EAAE4C,CAAC,GAAG,CAAC,CAAC,KACjB,IAAG5C,CAAC,GAAG,EAAE,EAAE4C,CAAC,GAAG,CAAC,CAAC,KACjB,IAAG5C,CAAC,GAAG,GAAG,EAAE4C,CAAC,GAAG,CAAC,CAAC,KAClB,IAAG5C,CAAC,GAAG,GAAG,EAAE4C,CAAC,GAAG,CAAC,CAAC,KAClBA,CAAC,GAAG,CAAC;EACV,IAAG5C,CAAC,GAAG,CAAC,EACPqI,CAAC,GAAG,IAAI9B,OAAO,CAAC1F,CAAC,CAAC,CAAC,KACf,IAAGA,CAAC,CAAC4H,MAAM,CAAC,CAAC,EACjBJ,CAAC,GAAG,IAAI4E,OAAO,CAACpM,CAAC,CAAC,CAAC,KAEnBwH,CAAC,GAAG,IAAIf,UAAU,CAACzG,CAAC,CAAC;;EAEtB;EACA,IAAI0H,CAAC,GAAG,IAAI1G,KAAK,CAAC,CAAC;IAAEzB,CAAC,GAAG,CAAC;IAAEyN,EAAE,GAAGjL,CAAC,GAAC,CAAC;IAAEa,EAAE,GAAG,CAAC,CAAC,IAAEb,CAAC,IAAE,CAAC;EACnD2F,CAAC,CAAC,CAAC,CAAC,GAAGF,CAAC,CAACpB,OAAO,CAAC,IAAI,CAAC;EACtB,IAAGrE,CAAC,GAAG,CAAC,EAAE;IACT,IAAIkL,EAAE,GAAGhO,GAAG,CAAC,CAAC;IACduI,CAAC,CAACjB,KAAK,CAACmB,CAAC,CAAC,CAAC,CAAC,EAACuF,EAAE,CAAC;IAChB,OAAM1N,CAAC,IAAIqD,EAAE,EAAE;MACb8E,CAAC,CAACnI,CAAC,CAAC,GAAGN,GAAG,CAAC,CAAC;MACZuI,CAAC,CAAClB,KAAK,CAAC2G,EAAE,EAACvF,CAAC,CAACnI,CAAC,GAAC,CAAC,CAAC,EAACmI,CAAC,CAACnI,CAAC,CAAC,CAAC;MACvBA,CAAC,IAAI,CAAC;IACR;EACD;EAEA,IAAID,CAAC,GAAG2F,CAAC,CAACvD,CAAC,GAAC,CAAC;IAAErC,CAAC;IAAE6N,GAAG,GAAG,IAAI;IAAEzF,EAAE,GAAGxI,GAAG,CAAC,CAAC;IAAEyC,CAAC;EAC3CvC,CAAC,GAAG+D,KAAK,CAAC+B,CAAC,CAACnG,IAAI,CAACQ,CAAC,CAAC,CAAC,GAAC,CAAC;EACtB,OAAMA,CAAC,IAAI,CAAC,EAAE;IACb,IAAGH,CAAC,IAAI6N,EAAE,EAAE3N,CAAC,GAAI4F,CAAC,CAACnG,IAAI,CAACQ,CAAC,CAAC,IAAGH,CAAC,GAAC6N,EAAG,GAAEpK,EAAE,CAAC,KAClC;MACHvD,CAAC,GAAG,CAAC4F,CAAC,CAACnG,IAAI,CAACQ,CAAC,CAAC,GAAE,CAAC,CAAC,IAAGH,CAAC,GAAC,CAAE,IAAE,CAAE,KAAI6N,EAAE,GAAC7N,CAAE;MACtC,IAAGG,CAAC,GAAG,CAAC,EAAED,CAAC,IAAI4F,CAAC,CAACnG,IAAI,CAACQ,CAAC,GAAC,CAAC,CAAC,IAAG,IAAI,CAACgB,EAAE,GAACnB,CAAC,GAAC6N,EAAG;IAC5C;IAEAzN,CAAC,GAAGwC,CAAC;IACL,OAAM,CAAC1C,CAAC,GAAC,CAAC,KAAK,CAAC,EAAE;MAAEA,CAAC,KAAK,CAAC;MAAE,EAAEE,CAAC;IAAE;IAClC,IAAG,CAACJ,CAAC,IAAII,CAAC,IAAI,CAAC,EAAE;MAAEJ,CAAC,IAAI,IAAI,CAACmB,EAAE;MAAE,EAAEhB,CAAC;IAAE;IACtC,IAAG4N,GAAG,EAAE;MAAG;MACTxF,CAAC,CAACrI,CAAC,CAAC,CAACkF,MAAM,CAAC9C,CAAC,CAAC;MACdyL,GAAG,GAAG,KAAK;IACb,CAAC,MAAM;MACL,OAAM3N,CAAC,GAAG,CAAC,EAAE;QAAEiI,CAAC,CAACjB,KAAK,CAAC9E,CAAC,EAACgG,EAAE,CAAC;QAAED,CAAC,CAACjB,KAAK,CAACkB,EAAE,EAAChG,CAAC,CAAC;QAAElC,CAAC,IAAI,CAAC;MAAE;MACrD,IAAGA,CAAC,GAAG,CAAC,EAAEiI,CAAC,CAACjB,KAAK,CAAC9E,CAAC,EAACgG,EAAE,CAAC,CAAC,KAAM;QAAE/F,CAAC,GAAGD,CAAC;QAAEA,CAAC,GAAGgG,EAAE;QAAEA,EAAE,GAAG/F,CAAC;MAAE;MACvD8F,CAAC,CAAClB,KAAK,CAACmB,EAAE,EAACC,CAAC,CAACrI,CAAC,CAAC,EAACoC,CAAC,CAAC;IACpB;IAEA,OAAMnC,CAAC,IAAI,CAAC,IAAI,CAAC2F,CAAC,CAACnG,IAAI,CAACQ,CAAC,CAAC,GAAE,CAAC,IAAEH,CAAE,KAAK,CAAC,EAAE;MACvCqI,CAAC,CAACjB,KAAK,CAAC9E,CAAC,EAACgG,EAAE,CAAC;MAAE/F,CAAC,GAAGD,CAAC;MAAEA,CAAC,GAAGgG,EAAE;MAAEA,EAAE,GAAG/F,CAAC;MACpC,IAAG,EAAEvC,CAAC,GAAG,CAAC,EAAE;QAAEA,CAAC,GAAG,IAAI,CAACmB,EAAE,GAAC,CAAC;QAAE,EAAEhB,CAAC;MAAE;IACpC;EACD;EACA,OAAOkI,CAAC,CAACnB,MAAM,CAAC5E,CAAC,CAAC;AAClB;;AAEA;AACA,SAAS0L,KAAKA,CAACxO,CAAC,EAAE;EAClB,IAAIS,CAAC,GAAI,IAAI,CAACmC,CAAC,GAAC,CAAC,GAAE,IAAI,CAACkB,MAAM,CAAC,CAAC,GAAC,IAAI,CAAC2K,KAAK,CAAC,CAAC;EAC7C,IAAInJ,CAAC,GAAItF,CAAC,CAAC4C,CAAC,GAAC,CAAC,GAAE5C,CAAC,CAAC8D,MAAM,CAAC,CAAC,GAAC9D,CAAC,CAACyO,KAAK,CAAC,CAAC;EACpC,IAAGhO,CAAC,CAAC+F,SAAS,CAAClB,CAAC,CAAC,GAAG,CAAC,EAAE;IAAE,IAAIvC,CAAC,GAAGtC,CAAC;IAAEA,CAAC,GAAG6E,CAAC;IAAEA,CAAC,GAAGvC,CAAC;EAAE;EAClD,IAAIvC,CAAC,GAAGC,CAAC,CAACiO,eAAe,CAAC,CAAC;IAAE3F,CAAC,GAAGzD,CAAC,CAACoJ,eAAe,CAAC,CAAC;EACpD,IAAG3F,CAAC,GAAG,CAAC,EAAE,OAAOtI,CAAC;EAClB,IAAGD,CAAC,GAAGuI,CAAC,EAAEA,CAAC,GAAGvI,CAAC;EACf,IAAGuI,CAAC,GAAG,CAAC,EAAE;IACTtI,CAAC,CAACmG,QAAQ,CAACmC,CAAC,EAACtI,CAAC,CAAC;IACf6E,CAAC,CAACsB,QAAQ,CAACmC,CAAC,EAACzD,CAAC,CAAC;EAChB;EACA,OAAM7E,CAAC,CAACqJ,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE;IACrB,IAAG,CAACtJ,CAAC,GAAGC,CAAC,CAACiO,eAAe,CAAC,CAAC,IAAI,CAAC,EAAEjO,CAAC,CAACmG,QAAQ,CAACpG,CAAC,EAACC,CAAC,CAAC;IACjD,IAAG,CAACD,CAAC,GAAG8E,CAAC,CAACoJ,eAAe,CAAC,CAAC,IAAI,CAAC,EAAEpJ,CAAC,CAACsB,QAAQ,CAACpG,CAAC,EAAC8E,CAAC,CAAC;IACjD,IAAG7E,CAAC,CAAC+F,SAAS,CAAClB,CAAC,CAAC,IAAI,CAAC,EAAE;MACtB7E,CAAC,CAACkD,KAAK,CAAC2B,CAAC,EAAC7E,CAAC,CAAC;MACZA,CAAC,CAACmG,QAAQ,CAAC,CAAC,EAACnG,CAAC,CAAC;IACjB,CAAC,MAAM;MACL6E,CAAC,CAAC3B,KAAK,CAAClD,CAAC,EAAC6E,CAAC,CAAC;MACZA,CAAC,CAACsB,QAAQ,CAAC,CAAC,EAACtB,CAAC,CAAC;IACjB;EACD;EACA,IAAGyD,CAAC,GAAG,CAAC,EAAEzD,CAAC,CAACU,QAAQ,CAAC+C,CAAC,EAACzD,CAAC,CAAC;EACzB,OAAOA,CAAC;AACR;;AAEA;AACA,SAASqJ,SAASA,CAAC/N,CAAC,EAAE;EACtB,IAAGA,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC;EACnB,IAAIsD,CAAC,GAAG,IAAI,CAACrC,EAAE,GAACjB,CAAC;IAAEkC,CAAC,GAAI,IAAI,CAACF,CAAC,GAAC,CAAC,GAAEhC,CAAC,GAAC,CAAC,GAAC,CAAC;EACvC,IAAG,IAAI,CAACmC,CAAC,GAAG,CAAC,EACZ,IAAGmB,CAAC,IAAI,CAAC,EAAEpB,CAAC,GAAG,IAAI,CAAC3C,IAAI,CAAC,CAAC,CAAC,GAACS,CAAC,CAAC,KACzB,KAAI,IAAIJ,CAAC,GAAG,IAAI,CAACuC,CAAC,GAAC,CAAC,EAAEvC,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAEsC,CAAC,GAAG,CAACoB,CAAC,GAACpB,CAAC,GAAC,IAAI,CAAC3C,IAAI,CAACK,CAAC,CAAC,IAAEI,CAAC;EACjE,OAAOkC,CAAC;AACR;;AAEA;AACA,SAAS8L,YAAYA,CAACvN,CAAC,EAAE;EACzB,IAAIwN,EAAE,GAAGxN,CAAC,CAAC4H,MAAM,CAAC,CAAC;EACnB,IAAI,IAAI,CAACA,MAAM,CAAC,CAAC,IAAI4F,EAAE,IAAKxN,CAAC,CAACyI,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO/J,UAAU,CAAC2D,IAAI;EACnE,IAAIoL,CAAC,GAAGzN,CAAC,CAACoN,KAAK,CAAC,CAAC;IAAE5N,CAAC,GAAG,IAAI,CAAC4N,KAAK,CAAC,CAAC;EACnC,IAAIzO,CAAC,GAAGiD,GAAG,CAAC,CAAC,CAAC;IAAEhD,CAAC,GAAGgD,GAAG,CAAC,CAAC,CAAC;IAAE/C,CAAC,GAAG+C,GAAG,CAAC,CAAC,CAAC;IAAEiB,CAAC,GAAGjB,GAAG,CAAC,CAAC,CAAC;EAClD,OAAM6L,CAAC,CAAChF,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE;IACtB,OAAMgF,CAAC,CAAC7F,MAAM,CAAC,CAAC,EAAE;MAChB6F,CAAC,CAAClI,QAAQ,CAAC,CAAC,EAACkI,CAAC,CAAC;MACf,IAAGD,EAAE,EAAE;QACL,IAAG,CAAC7O,CAAC,CAACiJ,MAAM,CAAC,CAAC,IAAI,CAAChJ,CAAC,CAACgJ,MAAM,CAAC,CAAC,EAAE;UAAEjJ,CAAC,CAAC0M,KAAK,CAAC,IAAI,EAAC1M,CAAC,CAAC;UAAEC,CAAC,CAAC0D,KAAK,CAACtC,CAAC,EAACpB,CAAC,CAAC;QAAE;QAChED,CAAC,CAAC4G,QAAQ,CAAC,CAAC,EAAC5G,CAAC,CAAC;MACjB,CAAC,MAAM,IAAG,CAACC,CAAC,CAACgJ,MAAM,CAAC,CAAC,EAAEhJ,CAAC,CAAC0D,KAAK,CAACtC,CAAC,EAACpB,CAAC,CAAC;MACnCA,CAAC,CAAC2G,QAAQ,CAAC,CAAC,EAAC3G,CAAC,CAAC;IACjB;IACA,OAAMY,CAAC,CAACoI,MAAM,CAAC,CAAC,EAAE;MAChBpI,CAAC,CAAC+F,QAAQ,CAAC,CAAC,EAAC/F,CAAC,CAAC;MACf,IAAGgO,EAAE,EAAE;QACL,IAAG,CAAC3O,CAAC,CAAC+I,MAAM,CAAC,CAAC,IAAI,CAAC/E,CAAC,CAAC+E,MAAM,CAAC,CAAC,EAAE;UAAE/I,CAAC,CAACwM,KAAK,CAAC,IAAI,EAACxM,CAAC,CAAC;UAAEgE,CAAC,CAACP,KAAK,CAACtC,CAAC,EAAC6C,CAAC,CAAC;QAAE;QAChEhE,CAAC,CAAC0G,QAAQ,CAAC,CAAC,EAAC1G,CAAC,CAAC;MACjB,CAAC,MAAM,IAAG,CAACgE,CAAC,CAAC+E,MAAM,CAAC,CAAC,EAAE/E,CAAC,CAACP,KAAK,CAACtC,CAAC,EAAC6C,CAAC,CAAC;MACnCA,CAAC,CAAC0C,QAAQ,CAAC,CAAC,EAAC1C,CAAC,CAAC;IACjB;IACA,IAAG4K,CAAC,CAACtI,SAAS,CAAC3F,CAAC,CAAC,IAAI,CAAC,EAAE;MACtBiO,CAAC,CAACnL,KAAK,CAAC9C,CAAC,EAACiO,CAAC,CAAC;MACZ,IAAGD,EAAE,EAAE7O,CAAC,CAAC2D,KAAK,CAACzD,CAAC,EAACF,CAAC,CAAC;MACnBC,CAAC,CAAC0D,KAAK,CAACO,CAAC,EAACjE,CAAC,CAAC;IACd,CAAC,MAAM;MACLY,CAAC,CAAC8C,KAAK,CAACmL,CAAC,EAACjO,CAAC,CAAC;MACZ,IAAGgO,EAAE,EAAE3O,CAAC,CAACyD,KAAK,CAAC3D,CAAC,EAACE,CAAC,CAAC;MACnBgE,CAAC,CAACP,KAAK,CAAC1D,CAAC,EAACiE,CAAC,CAAC;IACd;EACD;EACA,IAAGrD,CAAC,CAAC2F,SAAS,CAACzG,UAAU,CAAC0G,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO1G,UAAU,CAAC2D,IAAI;EAC3D,IAAGQ,CAAC,CAACsC,SAAS,CAACnF,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO6C,CAAC,CAAC6K,QAAQ,CAAC1N,CAAC,CAAC;EAC5C,IAAG6C,CAAC,CAAC4F,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE5F,CAAC,CAACwI,KAAK,CAACrL,CAAC,EAAC6C,CAAC,CAAC,CAAC,KAAM,OAAOA,CAAC;EAC9C,IAAGA,CAAC,CAAC4F,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,OAAO5F,CAAC,CAAC8K,GAAG,CAAC3N,CAAC,CAAC,CAAC,KAAM,OAAO6C,CAAC;AACjD;AAEA,IAAI+K,SAAS,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC;AACxX,IAAIC,KAAK,GAAG,CAAC,CAAC,IAAE,EAAE,IAAED,SAAS,CAACA,SAAS,CAAC3L,MAAM,GAAC,CAAC,CAAC;;AAEjD;AACA,SAAS6L,iBAAiBA,CAACpM,CAAC,EAAE;EAC9B,IAAIvC,CAAC;IAAEC,CAAC,GAAG,IAAI,CAAC4E,GAAG,CAAC,CAAC;EACrB,IAAG5E,CAAC,CAACsC,CAAC,IAAI,CAAC,IAAItC,CAAC,CAACN,IAAI,CAAC,CAAC,CAAC,IAAI8O,SAAS,CAACA,SAAS,CAAC3L,MAAM,GAAC,CAAC,CAAC,EAAE;IAC1D,KAAI9C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyO,SAAS,CAAC3L,MAAM,EAAE,EAAE9C,CAAC,EAClC,IAAGC,CAAC,CAACN,IAAI,CAAC,CAAC,CAAC,IAAI8O,SAAS,CAACzO,CAAC,CAAC,EAAE,OAAO,IAAI;IAC3C,OAAO,KAAK;EACb;EACA,IAAGC,CAAC,CAACwI,MAAM,CAAC,CAAC,EAAE,OAAO,KAAK;EAC3BzI,CAAC,GAAG,CAAC;EACL,OAAMA,CAAC,GAAGyO,SAAS,CAAC3L,MAAM,EAAE;IAC3B,IAAIjC,CAAC,GAAG4N,SAAS,CAACzO,CAAC,CAAC;MAAEG,CAAC,GAAGH,CAAC,GAAC,CAAC;IAC7B,OAAMG,CAAC,GAAGsO,SAAS,CAAC3L,MAAM,IAAIjC,CAAC,GAAG6N,KAAK,EAAE7N,CAAC,IAAI4N,SAAS,CAACtO,CAAC,EAAE,CAAC;IAC5DU,CAAC,GAAGZ,CAAC,CAAC2O,MAAM,CAAC/N,CAAC,CAAC;IACf,OAAMb,CAAC,GAAGG,CAAC,EAAE,IAAGU,CAAC,GAAC4N,SAAS,CAACzO,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,OAAO,KAAK;EACpD;EACA,OAAOC,CAAC,CAAC4O,WAAW,CAACtM,CAAC,CAAC;AACvB;;AAEA;AACA,SAASuM,cAAcA,CAACvM,CAAC,EAAE;EAC3B,IAAIwM,EAAE,GAAG,IAAI,CAACR,QAAQ,CAAChP,UAAU,CAAC0G,GAAG,CAAC;EACtC,IAAIrD,CAAC,GAAGmM,EAAE,CAACb,eAAe,CAAC,CAAC;EAC5B,IAAGtL,CAAC,IAAI,CAAC,EAAE,OAAO,KAAK;EACvB,IAAIN,CAAC,GAAGyM,EAAE,CAACC,UAAU,CAACpM,CAAC,CAAC;EACxB,IAAIqM,IAAI,GAAGC,SAAS,CAAC,CAAC;EACtB,IAAI1P,CAAC;EACL,KAAI,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuC,CAAC,EAAE,EAAEvC,CAAC,EAAE;IAC1B;IACA,GAAG;MACDR,CAAC,GAAG,IAAID,UAAU,CAAC,IAAI,CAACoJ,SAAS,CAAC,CAAC,EAAEsG,IAAI,CAAC;IAC5C,CAAC,QACKzP,CAAC,CAACwG,SAAS,CAACzG,UAAU,CAAC0G,GAAG,CAAC,IAAI,CAAC,IAAIzG,CAAC,CAACwG,SAAS,CAAC+I,EAAE,CAAC,IAAI,CAAC;IAC9D,IAAIjK,CAAC,GAAGtF,CAAC,CAAC2P,MAAM,CAAC7M,CAAC,EAAC,IAAI,CAAC;IACxB,IAAGwC,CAAC,CAACkB,SAAS,CAACzG,UAAU,CAAC0G,GAAG,CAAC,IAAI,CAAC,IAAInB,CAAC,CAACkB,SAAS,CAAC+I,EAAE,CAAC,IAAI,CAAC,EAAE;MAC3D,IAAI5O,CAAC,GAAG,CAAC;MACT,OAAMA,CAAC,EAAE,GAAGyC,CAAC,IAAIkC,CAAC,CAACkB,SAAS,CAAC+I,EAAE,CAAC,IAAI,CAAC,EAAE;QACrCjK,CAAC,GAAGA,CAAC,CAAC8D,SAAS,CAAC,CAAC,EAAC,IAAI,CAAC;QACvB,IAAG9D,CAAC,CAACkB,SAAS,CAACzG,UAAU,CAAC0G,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,KAAK;MACnD;MACA,IAAGnB,CAAC,CAACkB,SAAS,CAAC+I,EAAE,CAAC,IAAI,CAAC,EAAE,OAAO,KAAK;IACvC;EACD;EACA,OAAO,IAAI;AACX;;AAEA;AACA,SAASG,SAASA,CAAA,EAAG;EACnB;EACA,OAAO;IACL;IACA9E,SAAS,EAAE,SAAAA,CAASnK,CAAC,EAAE;MACrB,KAAI,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,CAAC,CAAC6C,MAAM,EAAE,EAAE9C,CAAC,EAAE;QAChCC,CAAC,CAACD,CAAC,CAAC,GAAGM,IAAI,CAACC,KAAK,CAACD,IAAI,CAAC8O,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC;MAC3C;IACF;EACF,CAAC;AACH;;AAEA;AACA7P,UAAU,CAACyB,SAAS,CAACwI,SAAS,GAAGP,YAAY;AAC7C1J,UAAU,CAACyB,SAAS,CAACwC,OAAO,GAAG6F,UAAU;AACzC9J,UAAU,CAACyB,SAAS,CAAC6B,SAAS,GAAG8G,YAAY;AAC7CpK,UAAU,CAACyB,SAAS,CAACpB,UAAU,GAAGkK,aAAa;AAC/CvK,UAAU,CAACyB,SAAS,CAACgJ,SAAS,GAAGS,YAAY;AAC7ClL,UAAU,CAACyB,SAAS,CAAC6K,SAAS,GAAGF,YAAY;AAC7CpM,UAAU,CAACyB,SAAS,CAACkL,KAAK,GAAGF,QAAQ;AACrCzM,UAAU,CAACyB,SAAS,CAAC4I,SAAS,GAAG4C,YAAY;AAC7CjN,UAAU,CAACyB,SAAS,CAAC6I,UAAU,GAAG4C,aAAa;AAC/ClN,UAAU,CAACyB,SAAS,CAACyM,eAAe,GAAGV,kBAAkB;AACzDxN,UAAU,CAACyB,SAAS,CAACwM,eAAe,GAAGR,kBAAkB;AACzDzN,UAAU,CAACyB,SAAS,CAAC4N,MAAM,GAAGT,SAAS;AACvC5O,UAAU,CAACyB,SAAS,CAAC6N,WAAW,GAAGC,cAAc;;AAEjD;AACAvP,UAAU,CAACyB,SAAS,CAACiN,KAAK,GAAGpF,OAAO;AACpCtJ,UAAU,CAACyB,SAAS,CAACyI,QAAQ,GAAGX,UAAU;AAC1CvJ,UAAU,CAACyB,SAAS,CAACqO,SAAS,GAAGtG,WAAW;AAC5CxJ,UAAU,CAACyB,SAAS,CAACsO,UAAU,GAAGtG,YAAY;AAC9CzJ,UAAU,CAACyB,SAAS,CAACsI,MAAM,GAAGF,QAAQ;AACtC7J,UAAU,CAACyB,SAAS,CAACuO,WAAW,GAAGlF,aAAa;AAChD9K,UAAU,CAACyB,SAAS,CAACwO,MAAM,GAAGlF,QAAQ;AACtC/K,UAAU,CAACyB,SAAS,CAAC2D,GAAG,GAAG4F,KAAK;AAChChL,UAAU,CAACyB,SAAS,CAACmD,GAAG,GAAGqG,KAAK;AAChCjL,UAAU,CAACyB,SAAS,CAACyO,GAAG,GAAG5E,KAAK;AAChCtL,UAAU,CAACyB,SAAS,CAAC0O,EAAE,GAAG5E,IAAI;AAC9BvL,UAAU,CAACyB,SAAS,CAAC2O,GAAG,GAAG3E,KAAK;AAChCzL,UAAU,CAACyB,SAAS,CAAC4O,MAAM,GAAG1E,QAAQ;AACtC3L,UAAU,CAACyB,SAAS,CAAC6O,GAAG,GAAG1E,KAAK;AAChC5L,UAAU,CAACyB,SAAS,CAACiJ,SAAS,GAAGmB,WAAW;AAC5C7L,UAAU,CAACyB,SAAS,CAACgO,UAAU,GAAG3D,YAAY;AAC9C9L,UAAU,CAACyB,SAAS,CAACkN,eAAe,GAAG3C,iBAAiB;AACxDhM,UAAU,CAACyB,SAAS,CAAC8O,QAAQ,GAAGrE,UAAU;AAC1ClM,UAAU,CAACyB,SAAS,CAAC+I,OAAO,GAAG2B,SAAS;AACxCnM,UAAU,CAACyB,SAAS,CAAC+O,MAAM,GAAGnE,QAAQ;AACtCrM,UAAU,CAACyB,SAAS,CAACgP,QAAQ,GAAGlE,UAAU;AAC1CvM,UAAU,CAACyB,SAAS,CAACiP,OAAO,GAAGlE,SAAS;AACxCxM,UAAU,CAACyB,SAAS,CAACwN,GAAG,GAAGvC,KAAK;AAChC1M,UAAU,CAACyB,SAAS,CAACuN,QAAQ,GAAGpC,UAAU;AAC1C5M,UAAU,CAACyB,SAAS,CAACkP,QAAQ,GAAG9D,UAAU;AAC1C7M,UAAU,CAACyB,SAAS,CAACoM,MAAM,GAAGf,QAAQ;AACtC9M,UAAU,CAACyB,SAAS,CAACmP,SAAS,GAAG7D,WAAW;AAC5C/M,UAAU,CAACyB,SAAS,CAACoP,kBAAkB,GAAG7D,oBAAoB;AAC9DhN,UAAU,CAACyB,SAAS,CAACmO,MAAM,GAAGvB,QAAQ;AACtCrO,UAAU,CAACyB,SAAS,CAACqP,UAAU,GAAGjC,YAAY;AAC9C7O,UAAU,CAACyB,SAAS,CAACQ,GAAG,GAAGsL,KAAK;AAChCvN,UAAU,CAACyB,SAAS,CAACsP,GAAG,GAAGtC,KAAK;AAChCzO,UAAU,CAACyB,SAAS,CAACmJ,eAAe,GAAGwE,iBAAiB;;AAExD;;AAEA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}