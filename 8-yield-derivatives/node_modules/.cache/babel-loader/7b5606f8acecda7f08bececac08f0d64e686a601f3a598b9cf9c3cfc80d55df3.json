{"ast":null,"code":"import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function scheduleObservable(input, scheduler) {\n  return new Observable(function (subscriber) {\n    var sub = new Subscription();\n    sub.add(scheduler.schedule(function () {\n      var observable = input[Symbol_observable]();\n      sub.add(observable.subscribe({\n        next: function (value) {\n          sub.add(scheduler.schedule(function () {\n            return subscriber.next(value);\n          }));\n        },\n        error: function (err) {\n          sub.add(scheduler.schedule(function () {\n            return subscriber.error(err);\n          }));\n        },\n        complete: function () {\n          sub.add(scheduler.schedule(function () {\n            return subscriber.complete();\n          }));\n        }\n      }));\n    }));\n    return sub;\n  });\n}","map":{"version":3,"names":["Observable","Subscription","observable","Symbol_observable","scheduleObservable","input","scheduler","subscriber","sub","add","schedule","subscribe","next","value","error","err","complete"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts"],"sourcesContent":["import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { InteropObservable, SchedulerLike, Subscribable } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => {\n      const observable: Subscribable<T> = (input as any)[Symbol_observable]();\n      sub.add(observable.subscribe({\n        next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n        error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n        complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n      }));\n    }));\n    return sub;\n  });\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,UAAU,IAAIC,iBAAiB,QAAQ,sBAAsB;AAGtE,OAAM,SAAUC,kBAAkBA,CAAIC,KAA2B,EAAEC,SAAwB;EACzF,OAAO,IAAIN,UAAU,CAAI,UAAAO,UAAU;IACjC,IAAMC,GAAG,GAAG,IAAIP,YAAY,EAAE;IAC9BO,GAAG,CAACC,GAAG,CAACH,SAAS,CAACI,QAAQ,CAAC;MACzB,IAAMR,UAAU,GAAqBG,KAAa,CAACF,iBAAiB,CAAC,EAAE;MACvEK,GAAG,CAACC,GAAG,CAACP,UAAU,CAACS,SAAS,CAAC;QAC3BC,IAAI,WAAAA,CAACC,KAAK;UAAIL,GAAG,CAACC,GAAG,CAACH,SAAS,CAACI,QAAQ,CAAC;YAAM,OAAAH,UAAU,CAACK,IAAI,CAACC,KAAK,CAAC;UAAtB,CAAsB,CAAC,CAAC;QAAE,CAAC;QAC1EC,KAAK,WAAAA,CAACC,GAAG;UAAIP,GAAG,CAACC,GAAG,CAACH,SAAS,CAACI,QAAQ,CAAC;YAAM,OAAAH,UAAU,CAACO,KAAK,CAACC,GAAG,CAAC;UAArB,CAAqB,CAAC,CAAC;QAAE,CAAC;QACxEC,QAAQ,WAAAA,CAAA;UAAKR,GAAG,CAACC,GAAG,CAACH,SAAS,CAACI,QAAQ,CAAC;YAAM,OAAAH,UAAU,CAACS,QAAQ,EAAE;UAArB,CAAqB,CAAC,CAAC;QAAE;OACxE,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,OAAOR,GAAG;EACZ,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}