{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OpenRPCDocumentValidationError = void 0;\nvar meta_schema_1 = __importDefault(require(\"@open-rpc/meta-schema\"));\nvar ajv_1 = __importDefault(require(\"ajv\"));\n/**\n * @ignore\n */\n/**\n * Provides an error interface for OpenRPC Document validation\n *\n * @category Errors\n *\n */\nvar OpenRPCDocumentValidationError = /** @class */function () {\n  /**\n   * @param errors The errors received by ajv.errors.\n   */\n  function OpenRPCDocumentValidationError(errors) {\n    this.name = \"OpenRPCDocumentDereferencingError\";\n    this.message = [\"Error validating OpenRPC Document against @open-rpc/meta-schema.\", \"The errors found are as follows:\", JSON.stringify(errors, undefined, \"  \")].join(\"\\n\");\n  }\n  return OpenRPCDocumentValidationError;\n}();\nexports.OpenRPCDocumentValidationError = OpenRPCDocumentValidationError;\n/**\n * Returns any JSON Schema validation errors that are found with the OpenRPC document passed in.\n *\n * @param document OpenRPC Document to validate.\n *\n * @returns Either true if everything checks out, or a well formatted error.\n *\n * @example\n * ```typescript\n *\n * const { types } from \"@open-rpc/meta-schema\"\n * const { validateOpenRPCDocument } from \"@open-rpc/schema-utils-js\";\n * const badOpenRPCDocument = {};\n * const errors = validateOpenRPCDocument({});\n * if (errors) {\n *   // handle errors\n * }\n * ```\n *\n */\nfunction validateOpenRPCDocument(document) {\n  var ajv = new ajv_1.default();\n  var metaSchemaCopy = __assign({}, meta_schema_1.default);\n  delete metaSchemaCopy.definitions.JSONSchema.$id;\n  delete metaSchemaCopy.definitions.JSONSchema.$schema;\n  delete metaSchemaCopy.$schema;\n  delete metaSchemaCopy.$id;\n  ajv.validate(metaSchemaCopy, document);\n  if (ajv.errors) {\n    return new OpenRPCDocumentValidationError(ajv.errors);\n  } else {\n    return true;\n  }\n}\nexports.default = validateOpenRPCDocument;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__importDefault","mod","__esModule","defineProperty","exports","value","OpenRPCDocumentValidationError","meta_schema_1","require","ajv_1","errors","name","message","JSON","stringify","undefined","join","validateOpenRPCDocument","document","ajv","default","metaSchemaCopy","definitions","JSONSchema","$id","$schema","validate"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/open-rpc-utils/build/validate-open-rpc-document.js"],"sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OpenRPCDocumentValidationError = void 0;\nvar meta_schema_1 = __importDefault(require(\"@open-rpc/meta-schema\"));\nvar ajv_1 = __importDefault(require(\"ajv\"));\n/**\n * @ignore\n */\n/**\n * Provides an error interface for OpenRPC Document validation\n *\n * @category Errors\n *\n */\nvar OpenRPCDocumentValidationError = /** @class */ (function () {\n    /**\n     * @param errors The errors received by ajv.errors.\n     */\n    function OpenRPCDocumentValidationError(errors) {\n        this.name = \"OpenRPCDocumentDereferencingError\";\n        this.message = [\n            \"Error validating OpenRPC Document against @open-rpc/meta-schema.\",\n            \"The errors found are as follows:\",\n            JSON.stringify(errors, undefined, \"  \"),\n        ].join(\"\\n\");\n    }\n    return OpenRPCDocumentValidationError;\n}());\nexports.OpenRPCDocumentValidationError = OpenRPCDocumentValidationError;\n/**\n * Returns any JSON Schema validation errors that are found with the OpenRPC document passed in.\n *\n * @param document OpenRPC Document to validate.\n *\n * @returns Either true if everything checks out, or a well formatted error.\n *\n * @example\n * ```typescript\n *\n * const { types } from \"@open-rpc/meta-schema\"\n * const { validateOpenRPCDocument } from \"@open-rpc/schema-utils-js\";\n * const badOpenRPCDocument = {};\n * const errors = validateOpenRPCDocument({});\n * if (errors) {\n *   // handle errors\n * }\n * ```\n *\n */\nfunction validateOpenRPCDocument(document) {\n    var ajv = new ajv_1.default();\n    var metaSchemaCopy = __assign({}, meta_schema_1.default);\n    delete metaSchemaCopy.definitions.JSONSchema.$id;\n    delete metaSchemaCopy.definitions.JSONSchema.$schema;\n    delete metaSchemaCopy.$schema;\n    delete metaSchemaCopy.$id;\n    ajv.validate(metaSchemaCopy, document);\n    if (ajv.errors) {\n        return new OpenRPCDocumentValidationError(ajv.errors);\n    }\n    else {\n        return true;\n    }\n}\nexports.default = validateOpenRPCDocument;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,QAAQ,GAAI,IAAI,IAAI,IAAI,CAACA,QAAQ,IAAK,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAASC,CAAC,EAAE;IACpC,KAAK,IAAIC,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAC,CAAC;MAChB,KAAK,IAAII,CAAC,IAAIL,CAAC,EAAE,IAAIH,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAC3DN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IACnB;IACA,OAAON,CAAC;EACZ,CAAC;EACD,OAAOH,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEN,SAAS,CAAC;AAC1C,CAAC;AACD,IAAIO,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDd,MAAM,CAACgB,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,8BAA8B,GAAG,KAAK,CAAC;AAC/C,IAAIC,aAAa,GAAGP,eAAe,CAACQ,OAAO,CAAC,uBAAuB,CAAC,CAAC;AACrE,IAAIC,KAAK,GAAGT,eAAe,CAACQ,OAAO,CAAC,KAAK,CAAC,CAAC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIF,8BAA8B,GAAG,aAAe,YAAY;EAC5D;AACJ;AACA;EACI,SAASA,8BAA8BA,CAACI,MAAM,EAAE;IAC5C,IAAI,CAACC,IAAI,GAAG,mCAAmC;IAC/C,IAAI,CAACC,OAAO,GAAG,CACX,kEAAkE,EAClE,kCAAkC,EAClCC,IAAI,CAACC,SAAS,CAACJ,MAAM,EAAEK,SAAS,EAAE,IAAI,CAAC,CAC1C,CAACC,IAAI,CAAC,IAAI,CAAC;EAChB;EACA,OAAOV,8BAA8B;AACzC,CAAC,CAAC,CAAE;AACJF,OAAO,CAACE,8BAA8B,GAAGA,8BAA8B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASW,uBAAuBA,CAACC,QAAQ,EAAE;EACvC,IAAIC,GAAG,GAAG,IAAIV,KAAK,CAACW,OAAO,CAAC,CAAC;EAC7B,IAAIC,cAAc,GAAGnC,QAAQ,CAAC,CAAC,CAAC,EAAEqB,aAAa,CAACa,OAAO,CAAC;EACxD,OAAOC,cAAc,CAACC,WAAW,CAACC,UAAU,CAACC,GAAG;EAChD,OAAOH,cAAc,CAACC,WAAW,CAACC,UAAU,CAACE,OAAO;EACpD,OAAOJ,cAAc,CAACI,OAAO;EAC7B,OAAOJ,cAAc,CAACG,GAAG;EACzBL,GAAG,CAACO,QAAQ,CAACL,cAAc,EAAEH,QAAQ,CAAC;EACtC,IAAIC,GAAG,CAACT,MAAM,EAAE;IACZ,OAAO,IAAIJ,8BAA8B,CAACa,GAAG,CAACT,MAAM,CAAC;EACzD,CAAC,MACI;IACD,OAAO,IAAI;EACf;AACJ;AACAN,OAAO,CAACgB,OAAO,GAAGH,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}