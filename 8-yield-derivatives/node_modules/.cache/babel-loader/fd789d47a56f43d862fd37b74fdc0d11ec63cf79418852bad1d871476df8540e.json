{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nfunction startWith() {\n  var array = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    array[_i] = arguments[_i];\n  }\n  return operators_1.startWith.apply(void 0, array)(this);\n}\nexports.startWith = startWith;","map":{"version":3,"names":["operators_1","require","startWith","array","_i","arguments","length","apply","exports"],"sources":["../src/compat/operator/startWith.ts"],"sourcesContent":[null],"mappings":";;;;;AACA,IAAAA,WAAA,GAAAC,OAAA;AAWA;AAEA;;;;;;;;;;;;;;AAcA,SAAgBC,SAASA,CAAA;EAA4B,IAAAC,KAAA;OAAA,IAAAC,EAAA,IAAkC,EAAlCA,EAAA,GAAAC,SAAA,CAAAC,MAAkC,EAAlCF,EAAA,EAAkC;IAAlCD,KAAA,CAAAC,EAAA,IAAAC,SAAA,CAAAD,EAAA;;EACnD,OAAOJ,WAAA,CAAAE,SAAW,CAAAK,KAAA,SAAUJ,KAAK,EAAE,IAAI,CAAC;AAC1C;AAFAK,OAAA,CAAAN,SAAA,GAAAA,SAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}