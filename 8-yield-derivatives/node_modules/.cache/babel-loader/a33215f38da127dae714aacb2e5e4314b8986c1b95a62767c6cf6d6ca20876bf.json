{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar __1 = require(\"..\");\nvar long_1 = tslib_1.__importDefault(require(\"long\"));\nvar id = ':uid:';\nvar RadixEUID = /** @class */function () {\n  function RadixEUID(value) {\n    if (typeof value === 'number') {\n      this.bytes = Buffer.alloc(16);\n      this.bytes.writeUInt32BE(value, 12);\n    } else if (Buffer.isBuffer(value) || Array.isArray(value)) {\n      if (value.length === 0) {\n        throw new Error('EUID must not be 0 bytes');\n      }\n      this.bytes = Buffer.from(value);\n    } else if (typeof value === 'string') {\n      this.bytes = Buffer.from(value, 'hex');\n    } else {\n      throw new Error('Unsupported EUID value');\n    }\n    this.shard = long_1.default.fromBytes(tslib_1.__spread(this.bytes.slice(0, this.bytes.length - 8)));\n  }\n  RadixEUID.fromJSON = function (data) {\n    return new this(data);\n  };\n  RadixEUID.prototype.toJSON = function () {\n    return \"\" + id + this.bytes.toString('hex');\n  };\n  RadixEUID.prototype.toDSON = function () {\n    return __1.RadixSerializer.toDSON(this);\n  };\n  RadixEUID.prototype.encodeCBOR = function (encoder) {\n    var output = Buffer.alloc(this.bytes.length + 1);\n    output.writeInt8(0x02, 0);\n    this.bytes.copy(output, 1);\n    return encoder.pushAny(output);\n  };\n  RadixEUID.prototype.equals = function (euid) {\n    return this.bytes.compare(euid.bytes) === 0;\n  };\n  RadixEUID.prototype.toString = function () {\n    return this.bytes.toString('hex');\n  };\n  RadixEUID.prototype.getShard = function () {\n    return this.shard;\n  };\n  RadixEUID = tslib_1.__decorate([__1.RadixSerializer.registerPrimitive(id), tslib_1.__metadata(\"design:paramtypes\", [Object])], RadixEUID);\n  return RadixEUID;\n}();\nexports.RadixEUID = RadixEUID;","map":{"version":3,"names":["__1","require","long_1","tslib_1","__importDefault","id","RadixEUID","value","bytes","Buffer","alloc","writeUInt32BE","isBuffer","Array","isArray","length","Error","from","shard","default","fromBytes","__spread","slice","fromJSON","data","prototype","toJSON","toString","toDSON","RadixSerializer","encodeCBOR","encoder","output","writeInt8","copy","pushAny","equals","euid","compare","getShard","__decorate","registerPrimitive","exports"],"sources":["../../../../../src/modules/atommodel/primitives/RadixEUID.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,IAAAA,GAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAC,OAAA,CAAAC,eAAA,CAAAH,OAAA;AAGA,IAAMI,EAAE,GAAG,OAAO;AAElB,IAAAC,SAAA;EAKI,SAAAA,UAAYC,KAA0C;IAElD,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC3B,IAAI,CAACC,KAAK,GAAGC,MAAM,CAACC,KAAK,CAAC,EAAE,CAAC;MAC7B,IAAI,CAACF,KAAK,CAACG,aAAa,CAACJ,KAAK,EAAE,EAAE,CAAC;KACtC,MAAM,IAAIE,MAAM,CAACG,QAAQ,CAACL,KAAK,CAAC,IAAIM,KAAK,CAACC,OAAO,CAACP,KAAK,CAAC,EAAE;MACvD,IAAIA,KAAK,CAACQ,MAAM,KAAK,CAAC,EAAE;QACpB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;;MAG/C,IAAI,CAACR,KAAK,GAAGC,MAAM,CAACQ,IAAI,CAACV,KAAe,CAAC;KAC5C,MAAM,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAClC,IAAI,CAACC,KAAK,GAAGC,MAAM,CAACQ,IAAI,CAACV,KAAK,EAAE,KAAK,CAAC;KACzC,MAAM;MACH,MAAM,IAAIS,KAAK,CAAC,wBAAwB,CAAC;;IAG7C,IAAI,CAACE,KAAK,GAAGhB,MAAA,CAAAiB,OAAI,CAACC,SAAS,CAAAjB,OAAA,CAAAkB,QAAA,CAAK,IAAI,CAACb,KAAK,CAACc,KAAK,CAAC,CAAC,EAAE,IAAI,CAACd,KAAK,CAACO,MAAM,GAAG,CAAC,CAAC,EAAE;EAChF;EAEcT,SAAA,CAAAiB,QAAQ,GAAtB,UAAuBC,IAAY;IAC/B,OAAO,IAAI,IAAI,CAACA,IAAI,CAAC;EACzB,CAAC;EAEMlB,SAAA,CAAAmB,SAAA,CAAAC,MAAM,GAAb;IACI,OAAO,KAAGrB,EAAE,GAAG,IAAI,CAACG,KAAK,CAACmB,QAAQ,CAAC,KAAK,CAAG;EAC/C,CAAC;EAEMrB,SAAA,CAAAmB,SAAA,CAAAG,MAAM,GAAb;IACI,OAAO5B,GAAA,CAAA6B,eAAe,CAACD,MAAM,CAAC,IAAI,CAAC;EACvC,CAAC;EAEMtB,SAAA,CAAAmB,SAAA,CAAAK,UAAU,GAAjB,UAAkBC,OAAO;IACrB,IAAMC,MAAM,GAAGvB,MAAM,CAACC,KAAK,CAAC,IAAI,CAACF,KAAK,CAACO,MAAM,GAAG,CAAC,CAAC;IAClDiB,MAAM,CAACC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC;IACzB,IAAI,CAACzB,KAAK,CAAC0B,IAAI,CAACF,MAAM,EAAE,CAAC,CAAC;IAE1B,OAAOD,OAAO,CAACI,OAAO,CAACH,MAAM,CAAC;EAClC,CAAC;EAGM1B,SAAA,CAAAmB,SAAA,CAAAW,MAAM,GAAb,UAAcC,IAAe;IACzB,OAAO,IAAI,CAAC7B,KAAK,CAAC8B,OAAO,CAACD,IAAI,CAAC7B,KAAK,CAAC,KAAK,CAAC;EAC/C,CAAC;EAEMF,SAAA,CAAAmB,SAAA,CAAAE,QAAQ,GAAf;IACI,OAAO,IAAI,CAACnB,KAAK,CAACmB,QAAQ,CAAC,KAAK,CAAC;EACrC,CAAC;EAEMrB,SAAA,CAAAmB,SAAA,CAAAc,QAAQ,GAAf;IACI,OAAO,IAAI,CAACrB,KAAK;EACrB,CAAC;EAxDQZ,SAAS,GAAAH,OAAA,CAAAqC,UAAA,EADrBxC,GAAA,CAAA6B,eAAe,CAACY,iBAAiB,CAACpC,EAAE,CAAC,E,oDACzBC,SAAS,CA0DrB;EAAD,OAAAA,SAAC;CAAA,CA1DD;AAAaoC,OAAA,CAAApC,SAAA,GAAAA,SAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}