{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function defaultIfEmpty(defaultValue) {\n  if (defaultValue === void 0) {\n    defaultValue = null;\n  }\n  return function (source) {\n    return source.lift(new DefaultIfEmptyOperator(defaultValue));\n  };\n}\nvar DefaultIfEmptyOperator = /*@__PURE__*/function () {\n  function DefaultIfEmptyOperator(defaultValue) {\n    this.defaultValue = defaultValue;\n  }\n  DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n  };\n  return DefaultIfEmptyOperator;\n}();\nvar DefaultIfEmptySubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(DefaultIfEmptySubscriber, _super);\n  function DefaultIfEmptySubscriber(destination, defaultValue) {\n    var _this = _super.call(this, destination) || this;\n    _this.defaultValue = defaultValue;\n    _this.isEmpty = true;\n    return _this;\n  }\n  DefaultIfEmptySubscriber.prototype._next = function (value) {\n    this.isEmpty = false;\n    this.destination.next(value);\n  };\n  DefaultIfEmptySubscriber.prototype._complete = function () {\n    if (this.isEmpty) {\n      this.destination.next(this.defaultValue);\n    }\n    this.destination.complete();\n  };\n  return DefaultIfEmptySubscriber;\n}(Subscriber);","map":{"version":3,"names":["tslib_1","Subscriber","defaultIfEmpty","defaultValue","source","lift","DefaultIfEmptyOperator","prototype","call","subscriber","subscribe","DefaultIfEmptySubscriber","_super","__extends","destination","_this","isEmpty","_next","value","next","_complete","complete"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/radixdlt/node_modules/rxjs/src/internal/operators/defaultIfEmpty.ts"],"sourcesContent":["import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function defaultIfEmpty<T>(defaultValue?: T): MonoTypeOperatorFunction<T>;\nexport function defaultIfEmpty<T, R>(defaultValue?: R): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * ![](defaultIfEmpty.png)\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * ## Example\n * If no clicks happen in 5 seconds, then emit \"no clicks\"\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { defaultIfEmpty, takeUntil } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksBeforeFive = clicks.pipe(takeUntil(interval(5000)));\n * const result = clicksBeforeFive.pipe(defaultIfEmpty('no clicks'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R = null): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new DefaultIfEmptyOperator(defaultValue)) as Observable<T | R>;\n}\n\nclass DefaultIfEmptyOperator<T, R> implements Operator<T, T | R> {\n\n  constructor(private defaultValue: R) {\n  }\n\n  call(subscriber: Subscriber<T | R>, source: any): any {\n    return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DefaultIfEmptySubscriber<T, R> extends Subscriber<T> {\n  private isEmpty: boolean = true;\n\n  constructor(destination: Subscriber<T | R>, private defaultValue: R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.isEmpty = false;\n    this.destination.next(value);\n  }\n\n  protected _complete(): void {\n    if (this.isEmpty) {\n      this.destination.next(this.defaultValue);\n    }\n    this.destination.complete();\n  }\n}\n"],"mappings":";AAEA,OAAO,KAAEA,OAAU,MAAE,OAAM;AA4C3B,SAAMC,UAAU,uBAAqB;OAAA,SAAAC,eAAAC,YAAA;EACnC,IAAAA,YAAO,KAAC,KAAqB,CAAK;IACnCA,YAAA;EAED;EAEE,iBAAAC,MAAA;IAAA,OAAoBA,MAAA,CAAAC,IAAe,KAAAC,sBAAA,CAAAH,YAAA;EAAA;;IACnCG,sBAAC;EAED,SAAAA,uBAAAH,YAAA;IACE,KAAAA,YAAc,GAAAA,YAAc;EAC9B;EACFG,sBAAA,CAAAC,SAAC,CAAAC,IAAA,aAAAC,UAAA,EAAAL,MAAA;IAAA,OAAAA,MAAA,CAAAM,SAAA,KAAAC,wBAAA,CAAAF,UAAA,OAAAN,YAAA;EAOD;EAA6C,OAAAG,sBAAA;GAG3C;4BACE,gBAAM,UAAYM,MACnB;SAFmD,CAAAC,SAAA,CAAAF,wBAAe,EAAAC,MAAA;WAF3DD,wBAAwBA,CAAAG,WAAA,EAAAX,YAAA;;IAI/BY,KAAA,CAAAZ,YAAA,GAAAA,YAAA;IAESY,KAAA,CAAAC,OAAA;IACR,OAAKD,KAAO;;EAEdJ,wBAAC,CAAAJ,SAAA,CAAAU,KAAA,aAAAC,KAAA;IAES,KAAAF,OAAA;IACR,IAAI,CAAAF,WAAY,CAAAK,IAAE,CAAAD,KAAA;;0BAEjB,CAAAX,SAAA,CAAAa,SAAA;IACD,IAAI,IAAC,CAAAJ,OAAW,EAAC;MAClB,KAAAF,WAAA,CAAAK,IAAA,MAAAhB,YAAA;IACH;IAlB6C,IAAU,CAAAW,WAkBtD,CAAAO,QAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}