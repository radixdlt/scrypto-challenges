{"ast":null,"code":"/**\n * Way data is stored for this database\n * For a Node.js/Node Webkit database it's the file system\n * For a browser-side database it's localforage, which uses the best backend available (IndexedDB then WebSQL then localStorage)\n *\n * This version is the browser version\n */\n\nvar localforage = require('localforage');\n\n// Configure localforage to display NeDB name for now. Would be a good idea to let user use his own app name\nlocalforage.config({\n  name: 'NeDB',\n  storeName: 'nedbdata'\n});\nfunction exists(filename, callback) {\n  localforage.getItem(filename, function (err, value) {\n    if (value !== null) {\n      // Even if value is undefined, localforage returns null\n      return callback(true);\n    } else {\n      return callback(false);\n    }\n  });\n}\nfunction rename(filename, newFilename, callback) {\n  localforage.getItem(filename, function (err, value) {\n    if (value === null) {\n      localforage.removeItem(newFilename, function () {\n        return callback();\n      });\n    } else {\n      localforage.setItem(newFilename, value, function () {\n        localforage.removeItem(filename, function () {\n          return callback();\n        });\n      });\n    }\n  });\n}\nfunction writeFile(filename, contents, options, callback) {\n  // Options do not matter in browser setup\n  if (typeof options === 'function') {\n    callback = options;\n  }\n  localforage.setItem(filename, contents, function () {\n    return callback();\n  });\n}\nfunction appendFile(filename, toAppend, options, callback) {\n  // Options do not matter in browser setup\n  if (typeof options === 'function') {\n    callback = options;\n  }\n  localforage.getItem(filename, function (err, contents) {\n    contents = contents || '';\n    contents += toAppend;\n    localforage.setItem(filename, contents, function () {\n      return callback();\n    });\n  });\n}\nfunction readFile(filename, options, callback) {\n  // Options do not matter in browser setup\n  if (typeof options === 'function') {\n    callback = options;\n  }\n  localforage.getItem(filename, function (err, contents) {\n    return callback(null, contents || '');\n  });\n}\nfunction unlink(filename, callback) {\n  localforage.removeItem(filename, function () {\n    return callback();\n  });\n}\n\n// Nothing to do, no directories will be used on the browser\nfunction mkdirp(dir, callback) {\n  return callback();\n}\n\n// Nothing to do, no data corruption possible in the brower\nfunction ensureDatafileIntegrity(filename, callback) {\n  return callback(null);\n}\n\n// Interface\nmodule.exports.exists = exists;\nmodule.exports.rename = rename;\nmodule.exports.writeFile = writeFile;\nmodule.exports.crashSafeWriteFile = writeFile; // No need for a crash safe function in the browser\nmodule.exports.appendFile = appendFile;\nmodule.exports.readFile = readFile;\nmodule.exports.unlink = unlink;\nmodule.exports.mkdirp = mkdirp;\nmodule.exports.ensureDatafileIntegrity = ensureDatafileIntegrity;","map":{"version":3,"names":["localforage","require","config","name","storeName","exists","filename","callback","getItem","err","value","rename","newFilename","removeItem","setItem","writeFile","contents","options","appendFile","toAppend","readFile","unlink","mkdirp","dir","ensureDatafileIntegrity","module","exports","crashSafeWriteFile"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/nedb/browser-version/browser-specific/lib/storage.js"],"sourcesContent":["/**\n * Way data is stored for this database\n * For a Node.js/Node Webkit database it's the file system\n * For a browser-side database it's localforage, which uses the best backend available (IndexedDB then WebSQL then localStorage)\n *\n * This version is the browser version\n */\n\nvar localforage = require('localforage')\n\n// Configure localforage to display NeDB name for now. Would be a good idea to let user use his own app name\nlocalforage.config({\n  name: 'NeDB'\n, storeName: 'nedbdata'\n});\n\n\nfunction exists (filename, callback) {\n  localforage.getItem(filename, function (err, value) {\n    if (value !== null) {   // Even if value is undefined, localforage returns null\n      return callback(true);\n    } else {\n      return callback(false);\n    }\n  });\n}\n\n\nfunction rename (filename, newFilename, callback) {\n  localforage.getItem(filename, function (err, value) {\n    if (value === null) {\n      localforage.removeItem(newFilename, function () { return callback(); });\n    } else {\n      localforage.setItem(newFilename, value, function () {\n        localforage.removeItem(filename, function () { return callback(); });\n      });\n    }\n  });\n}\n\n\nfunction writeFile (filename, contents, options, callback) {\n  // Options do not matter in browser setup\n  if (typeof options === 'function') { callback = options; }\n  localforage.setItem(filename, contents, function () { return callback(); });\n}\n\n\nfunction appendFile (filename, toAppend, options, callback) {\n  // Options do not matter in browser setup\n  if (typeof options === 'function') { callback = options; }\n\n  localforage.getItem(filename, function (err, contents) {\n    contents = contents || '';\n    contents += toAppend;\n    localforage.setItem(filename, contents, function () { return callback(); });\n  });\n}\n\n\nfunction readFile (filename, options, callback) {\n  // Options do not matter in browser setup\n  if (typeof options === 'function') { callback = options; }\n  localforage.getItem(filename, function (err, contents) { return callback(null, contents || ''); });\n}\n\n\nfunction unlink (filename, callback) {\n  localforage.removeItem(filename, function () { return callback(); });\n}\n\n\n// Nothing to do, no directories will be used on the browser\nfunction mkdirp (dir, callback) {\n  return callback();\n}\n\n\n// Nothing to do, no data corruption possible in the brower\nfunction ensureDatafileIntegrity (filename, callback) {\n  return callback(null);\n}\n\n\n// Interface\nmodule.exports.exists = exists;\nmodule.exports.rename = rename;\nmodule.exports.writeFile = writeFile;\nmodule.exports.crashSafeWriteFile = writeFile;   // No need for a crash safe function in the browser\nmodule.exports.appendFile = appendFile;\nmodule.exports.readFile = readFile;\nmodule.exports.unlink = unlink;\nmodule.exports.mkdirp = mkdirp;\nmodule.exports.ensureDatafileIntegrity = ensureDatafileIntegrity;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}