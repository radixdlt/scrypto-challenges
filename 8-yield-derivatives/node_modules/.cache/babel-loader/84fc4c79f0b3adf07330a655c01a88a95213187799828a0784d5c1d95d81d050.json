{"ast":null,"code":"var _jsxFileName = \"/Users/mdabdurrazzak/scrypto-challenges/8-yield-derivatives/src/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DataRequestBuilder, RadixDappToolkit, RadixNetwork } from '@radixdlt/radix-dapp-toolkit';\nimport './profile.css';\nimport profilePicture from './profile.jpg'; // Import your profile picture\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [accountAddress, setAccountAddress] = useState('');\n  const [walletConnected, setWalletConnected] = useState(false);\n  const [error, setError] = useState('');\n  const [insuranceContract, setInsuranceContract] = useState(null);\n  const [rdt, setRdt] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [additionalData, setAdditionalData] = useState('');\n  const [claimStatus, setClaimStatus] = useState('');\n  const [stalkingInput, setStalkingInput] = useState('');\n  const [stalkingResult, setStalkingResult] = useState('');\n  const [premiumAmount, setPremiumAmount] = useState(0);\n  const [payoutAmount, setPayoutAmount] = useState(0);\n  const [riskLevel, setRiskLevel] = useState(0);\n  const [showShardSpace, setShowShardSpace] = useState(false);\n  const toggleShardSpace = () => {\n    setShowShardSpace(!showShardSpace);\n  };\n  useEffect(() => {\n    const dAppDefinitionAddress = 'account_tdx_2_12xxk4dqhg9dz53p745qhpr5tr2k2al4mpx3296tr8k78kna6rkcgsz';\n\n    // Create a dapp configuration object for the Radix Dapp Toolkit\n    const dappConfig = {\n      networkId: RadixNetwork.Stokenet,\n      applicationVersion: '1.0.0',\n      applicationName: 'Infix',\n      applicationDappDefinitionAddress: dAppDefinitionAddress,\n      dAppDefinitionAddress\n    };\n\n    // Instantiate DappToolkit to connect to the Radix wallet and network\n    const rdtInstance = RadixDappToolkit(dappConfig);\n    setRdt(rdtInstance);\n\n    // Connect a user account when wallet is connected\n    rdtInstance.walletApi.setRequestData(DataRequestBuilder.accounts().exactly(1));\n\n    // Subscribe to updates to the user's shared wallet data\n    const subscription = rdtInstance.walletApi.walletData$.subscribe({\n      next: walletData => {\n        if (walletData && walletData.accounts && walletData.accounts.length > 0) {\n          setAccountAddress(walletData.accounts[0].address);\n          setWalletConnected(true);\n          setError(''); // Clear any previous errors\n          console.log('Wallet connected successfully:', walletData.accounts[0].address);\n        } else {\n          setError('No account data found.');\n          console.error('No account data found.');\n        }\n      },\n      error: err => {\n        setError('Error connecting to wallet: ' + err.message);\n        console.error('Error connecting to wallet:', err.message);\n      }\n    });\n    // Cleanup subscription on unmount\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n\n  // Function to connect to the wallet\n  const connectToWallet = async () => {\n    try {\n      // Request the wallet to connect\n      await rdt.walletApi.connectWallet();\n    } catch (error) {\n      setError('Error connecting to wallet: ' + error.message);\n    }\n  };\n\n  // Function to create the insurance contract\n  const createInsuranceContract = async (insuredDomain, premiumAmount, payoutAmount, riskLevel) => {\n    const dAppDefinitionAddress = 'account_tdx_2_12xxk4dqhg9dz53p745qhpr5tr2k2al4mpx3296tr8k78kna6rkcgsz';\n    const result = await rdt.walletApi.sendTransaction({\n      transactionManifest: `\n            CALL_FUNCTION\n                Address(\"${dAppDefinitionAddress}\")\n                \"parametric_insurance::ParametricInsurance\"\n                \"new\"\n                String(\"${insuredDomain}\")\n                Decimal(\"${premiumAmount}\")\n                Decimal(\"${payoutAmount}\")\n                Decimal(\"${riskLevel}\");\n        `,\n      version: 1\n    });\n    if (result.isErr()) {\n      console.error('Error creating insurance contract:', result.error);\n      return null;\n    }\n    setInsuranceContract(result.value.global);\n    console.log('Insurance contract created:', result.value.global);\n    return result.value.global;\n  };\n\n  // Function to make a claim on the insurance contract\n  const makeClaim = async () => {\n    if (!insuranceContract) {\n      console.error('Insurance contract not created yet');\n      return;\n    }\n    const result = await insuranceContract.call({\n      method: 'make_claim',\n      args: []\n    });\n    if (result.isErr()) {\n      console.error('Error making claim:', result.error);\n      return;\n    }\n    console.log('Claim made successfully:', result.value);\n  };\n\n  // Function to check if the insurance contract has been claimed\n  const isClaimed = async () => {\n    if (!insuranceContract) {\n      console.error('Insurance contract not created yet');\n      return;\n    }\n    const result = await insuranceContract.call({\n      method: 'is_claimed',\n      args: []\n    });\n    if (result.isErr()) {\n      console.error('Error checking claim status:', result.error);\n      return;\n    }\n    console.log('Is claimed:', result.value);\n  };\n\n  // Function to cancel the insurance contract\n  const cancelContract = async () => {\n    if (!insuranceContract) {\n      console.error('Insurance contract not created yet');\n      return;\n    }\n    const result = await insuranceContract.call({\n      method: 'cancel_contract',\n      args: []\n    });\n    if (result.isErr()) {\n      console.error('Error canceling contract:', result.error);\n      return;\n    }\n    console.log('Contract canceled successfully:', result.value);\n  };\n\n  // Function to trigger insurance payout based on predefined conditions\n  const triggerPayout = async conditionMet => {\n    if (!insuranceContract) {\n      console.error('Insurance contract not created yet');\n      return;\n    }\n    const result = await insuranceContract.call({\n      method: 'trigger_payout',\n      args: [conditionMet]\n    });\n    if (result.isErr()) {\n      console.error('Error triggering payout:', result.error);\n      return;\n    }\n    console.log('Payout triggered successfully:', result.value);\n  };\n\n  // Function to monitor liquidity and trigger insurance payout if a significant drop is detected\n  const monitorLiquidity = async (liquidityDropThreshold, timeFrameHours, currentLiquidity) => {\n    if (!insuranceContract) {\n      console.error('Insurance contract not created yet');\n      return;\n    }\n    const result = await insuranceContract.call({\n      method: 'monitor_liquidity',\n      args: [liquidityDropThreshold, timeFrameHours, currentLiquidity]\n    });\n    if (result.isErr()) {\n      console.error('Error monitoring liquidity:', result.error);\n      return;\n    }\n    console.log('Liquidity monitored successfully:', result.value);\n  };\n\n  // Function to monitor market volatility and trigger insurance payout if volatility exceeds threshold\n  const monitorMarketVolatility = async (volatilityThreshold, currentVolatility) => {\n    if (!insuranceContract) {\n      console.error('Insurance contract not created yet');\n      return;\n    }\n    const result = await insuranceContract.call({\n      method: 'monitor_market_volatility',\n      args: [volatilityThreshold, currentVolatility]\n    });\n    if (result.isErr()) {\n      console.error('Error monitoring market volatility:', result.error);\n      return;\n    }\n    console.log('Market volatility monitored successfully:', result.value);\n  };\n\n  // Function to update the premium amount of the insurance contract\n  const updatePremiumAmount = async newPremiumAmount => {\n    if (!insuranceContract) {\n      console.error('Insurance contract not created yet');\n      return;\n    }\n    const result = await insuranceContract.call({\n      method: 'update_premium_amount',\n      args: [newPremiumAmount]\n    });\n    if (result.isErr()) {\n      console.error('Error updating premium amount:', result.error);\n      return;\n    }\n    console.log('Premium amount updated successfully:', result.value);\n  };\n\n  // Function to update the payout amount of the insurance contract\n  const updatePayoutAmount = async newPayoutAmount => {\n    if (!insuranceContract) {\n      console.error('Insurance contract not created yet');\n      return;\n    }\n    const result = await insuranceContract.call({\n      method: 'update_payout_amount',\n      args: [newPayoutAmount]\n    });\n    if (result.isErr()) {\n      console.error('Error updating payout amount:', result.error);\n      return;\n    }\n    console.log('Payout amount updated successfully:', result.value);\n  };\n\n  // Function to automate claim processing if conditions are met\n  const automateClaimProcessing = async autoClaimCondition => {\n    if (!insuranceContract) {\n      console.error('Insurance contract not created yet');\n      return;\n    }\n    const result = await insuranceContract.call({\n      method: 'automate_claim_processing',\n      args: [autoClaimCondition]\n    });\n    if (result.isErr()) {\n      console.error('Error automating claim processing:', result.error);\n      return;\n    }\n    console.log('Claim processing automated successfully:', result.value);\n  };\n\n  // Function to handle sign up\n  const signUp = async () => {\n    try {\n      // Code to create a new insurance contract\n      const result = await createInsuranceContract(username, premiumAmount, payoutAmount, riskLevel);\n      // Handle success\n      console.log('Insurance contract created:', result);\n    } catch (error) {\n      // Handle error\n      console.error('Error creating insurance contract:', error);\n    }\n  };\n\n  // Function to handle claiming money\n  const claimMoney = async () => {\n    try {\n      // Code to trigger the claim process\n      // For example:\n      const result = await insuranceContract.call({\n        method: 'make_claim',\n        args: []\n      });\n      // Handle success\n      console.log('Claim made successfully:', result.value);\n      setClaimStatus('Claim made successfully');\n    } catch (error) {\n      // Handle error\n      console.error('Error making claim:', error);\n      setClaimStatus('Error making claim');\n    }\n  };\n\n  // Function to handle stalking\n  const stalk = async id => {\n    try {\n      // Code to fetch and display information about the specified ID\n      // For example:\n      const info = await fetchInformation(id);\n      // Handle success\n      console.log('Stalking result:', info);\n      setStalkingResult(info);\n    } catch (error) {\n      // Handle error\n      console.error('Error stalking:', error);\n      setStalkingResult('Error stalking');\n    }\n  };\n\n  // Function to handle change in stalking input\n  const handleStalkInputChange = event => {\n    // Update the state with the input value\n    // For example:\n    setStalkingInput(event.target.value);\n  };\n  // Define fetchInformation function\n  const fetchInformation = async id => {\n    // Implementation of fetchInformation function\n  };\n\n  // Define handleContractInteractions function\n  const handleContractInteractions = () => {\n    // Implementation of handleContractInteractions function\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-details\",\n      style: {\n        marginBottom: '20px',\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: profilePicture,\n          alt: \"Profile\",\n          className: \"avatar\",\n          style: {\n            width: '200px',\n            height: '200px',\n            borderRadius: '80%',\n            marginBottom: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form\",\n          style: {\n            width: '25%',\n            padding: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Sign Up For Insurance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Your xrd Domain\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Premium Amount\",\n            value: premiumAmount,\n            onChange: e => setPremiumAmount(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Payout Amount\",\n            value: payoutAmount,\n            onChange: e => setPayoutAmount(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Risk Level\",\n            value: riskLevel,\n            onChange: e => setRiskLevel(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"wallet-button\",\n            onClick: signUp,\n            style: {\n              padding: '15px'\n            },\n            children: \"Create Insurance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wallet-section\",\n          style: {\n            width: '25%'\n          },\n          children: error && walletConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Wallet Connected Successfully\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Account Address: \", accountAddress]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"wallet-button\",\n              onClick: handleContractInteractions,\n              style: {\n                width: '100%',\n                padding: '15px'\n              },\n              children: \"Interact with Contract\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"wallet-button\",\n              onClick: connectToWallet,\n              style: {\n                width: '100%',\n                padding: '15px'\n              },\n              children: \"Connect To Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '25%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"wallet-button\",\n            onClick: claimMoney,\n            style: {\n              padding: '15px'\n            },\n            children: \"Claim Your Crypto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stalk-section\",\n        style: {\n          width: '25%',\n          padding: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Stalk Your Crypto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Amount to stalk\",\n          onChange: handleStalkInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"wallet-button\",\n          onClick: () => stalk(stalkingInput),\n          style: {\n            padding: '15px'\n          },\n          children: \"Stalk Your Crypto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 9\n        }, this), stalkingResult && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: stalkingResult\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"wallet-button\",\n      onClick: toggleShardSpace,\n      style: {\n        width: '100%',\n        marginTop: '20px',\n        padding: '15px'\n      },\n      children: \"Experience ShardSpace\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 5\n    }, this), showShardSpace && /*#__PURE__*/_jsxDEV(\"iframe\", {\n      title: \"Portfolio Accounts\",\n      src: \"https://launch.shardspace.app/portfolio/accounts\",\n      width: \"100%\",\n      height: \"600px\",\n      style: {\n        border: 'none',\n        marginTop: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 360,\n    columnNumber: 3\n  }, this);\n};\n_s(Profile, \"Ne4ImMaoggpeMfC6v4au+6Al+RE=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","DataRequestBuilder","RadixDappToolkit","RadixNetwork","profilePicture","jsxDEV","_jsxDEV","Profile","_s","accountAddress","setAccountAddress","walletConnected","setWalletConnected","error","setError","insuranceContract","setInsuranceContract","rdt","setRdt","username","setUsername","password","setPassword","additionalData","setAdditionalData","claimStatus","setClaimStatus","stalkingInput","setStalkingInput","stalkingResult","setStalkingResult","premiumAmount","setPremiumAmount","payoutAmount","setPayoutAmount","riskLevel","setRiskLevel","showShardSpace","setShowShardSpace","toggleShardSpace","dAppDefinitionAddress","dappConfig","networkId","Stokenet","applicationVersion","applicationName","applicationDappDefinitionAddress","rdtInstance","walletApi","setRequestData","accounts","exactly","subscription","walletData$","subscribe","next","walletData","length","address","console","log","err","message","unsubscribe","connectToWallet","connectWallet","createInsuranceContract","insuredDomain","result","sendTransaction","transactionManifest","version","isErr","value","global","makeClaim","call","method","args","isClaimed","cancelContract","triggerPayout","conditionMet","monitorLiquidity","liquidityDropThreshold","timeFrameHours","currentLiquidity","monitorMarketVolatility","volatilityThreshold","currentVolatility","updatePremiumAmount","newPremiumAmount","updatePayoutAmount","newPayoutAmount","automateClaimProcessing","autoClaimCondition","signUp","claimMoney","stalk","id","info","fetchInformation","handleStalkInputChange","event","target","handleContractInteractions","className","children","style","marginBottom","display","alignItems","src","alt","width","height","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","justifyContent","padding","type","placeholder","onChange","e","onClick","marginTop","title","border","_c","$RefreshReg$"],"sources":["/Users/mdabdurrazzak/scrypto-challenges/8-yield-derivatives/src/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  DataRequestBuilder,\n  RadixDappToolkit,\n  RadixNetwork,\n} from '@radixdlt/radix-dapp-toolkit';\nimport './profile.css';\nimport profilePicture from './profile.jpg'; // Import your profile picture\n\n\n\n\nconst Profile = () => {\n  const [accountAddress, setAccountAddress] = useState('');\n  const [walletConnected, setWalletConnected] = useState(false);\n  const [error, setError] = useState('');\n  const [insuranceContract, setInsuranceContract] = useState(null);\n  const [rdt, setRdt] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [additionalData, setAdditionalData] = useState('');\n  const [claimStatus, setClaimStatus] = useState('');\n  const [stalkingInput, setStalkingInput] = useState('');\n  const [stalkingResult, setStalkingResult] = useState('');\n  const [premiumAmount, setPremiumAmount] = useState(0);\n  const [payoutAmount, setPayoutAmount] = useState(0);\n  const [riskLevel, setRiskLevel] = useState(0);\n  const [showShardSpace, setShowShardSpace] = useState(false);\n\n  const toggleShardSpace = () => {\n    setShowShardSpace(!showShardSpace);\n  };\n\n  useEffect(() => {\n    const dAppDefinitionAddress = 'account_tdx_2_12xxk4dqhg9dz53p745qhpr5tr2k2al4mpx3296tr8k78kna6rkcgsz';\n    \n    // Create a dapp configuration object for the Radix Dapp Toolkit\n    const dappConfig = {\n      networkId: RadixNetwork.Stokenet,\n      applicationVersion: '1.0.0',\n      applicationName: 'Infix',\n      applicationDappDefinitionAddress: dAppDefinitionAddress,\n      dAppDefinitionAddress,\n    };\n\n    // Instantiate DappToolkit to connect to the Radix wallet and network\n    const rdtInstance = RadixDappToolkit(dappConfig);\n    setRdt(rdtInstance);\n\n    // Connect a user account when wallet is connected\n    rdtInstance.walletApi.setRequestData(DataRequestBuilder.accounts().exactly(1));\n\n    // Subscribe to updates to the user's shared wallet data\n    const subscription = rdtInstance.walletApi.walletData$.subscribe({\n      next: (walletData) => {\n        if (walletData && walletData.accounts && walletData.accounts.length > 0) {\n          setAccountAddress(walletData.accounts[0].address);\n          setWalletConnected(true);\n          setError(''); // Clear any previous errors\n          console.log('Wallet connected successfully:', walletData.accounts[0].address);\n        } else {\n          setError('No account data found.');\n          console.error('No account data found.');\n        }\n      },\n      error: (err) => {\n        setError('Error connecting to wallet: ' + err.message);\n        console.error('Error connecting to wallet:', err.message);\n      }\n    });\n    // Cleanup subscription on unmount\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n\n  // Function to connect to the wallet\n  const connectToWallet = async () => {\n    try {\n      // Request the wallet to connect\n      await rdt.walletApi.connectWallet();\n    } catch (error) {\n      setError('Error connecting to wallet: ' + error.message);\n    }\n  };\n\n  // Function to create the insurance contract\n  const createInsuranceContract = async (insuredDomain, premiumAmount, payoutAmount, riskLevel) => {\n    const dAppDefinitionAddress = 'account_tdx_2_12xxk4dqhg9dz53p745qhpr5tr2k2al4mpx3296tr8k78kna6rkcgsz';\n\n    const result = await rdt.walletApi.sendTransaction({\n        transactionManifest: `\n            CALL_FUNCTION\n                Address(\"${dAppDefinitionAddress}\")\n                \"parametric_insurance::ParametricInsurance\"\n                \"new\"\n                String(\"${insuredDomain}\")\n                Decimal(\"${premiumAmount}\")\n                Decimal(\"${payoutAmount}\")\n                Decimal(\"${riskLevel}\");\n        `,\n        version: 1,\n    });\n\n    if (result.isErr()) {\n        console.error('Error creating insurance contract:', result.error);\n        return null;\n    }\n\n    setInsuranceContract(result.value.global);\n    console.log('Insurance contract created:', result.value.global);\n    return result.value.global;\n  };\n\n  // Function to make a claim on the insurance contract\n  const makeClaim = async () => {\n    if (!insuranceContract) {\n        console.error('Insurance contract not created yet');\n        return;\n    }\n\n    const result = await insuranceContract.call({\n        method: 'make_claim',\n        args: [],\n    });\n\n    if (result.isErr()) {\n        console.error('Error making claim:', result.error);\n        return;\n    }\n\n    console.log('Claim made successfully:', result.value);\n  };\n\n  // Function to check if the insurance contract has been claimed\n  const isClaimed = async () => {\n    if (!insuranceContract) {\n        console.error('Insurance contract not created yet');\n        return;\n    }\n\n    const result = await insuranceContract.call({\n        method: 'is_claimed',\n        args: [],\n    });\n\n    if (result.isErr()) {\n        console.error('Error checking claim status:', result.error);\n        return;\n    }\n\n    console.log('Is claimed:', result.value);\n  };\n\n  // Function to cancel the insurance contract\n  const cancelContract = async () => {\n    if (!insuranceContract) {\n        console.error('Insurance contract not created yet');\n        return;\n    }\n\n    const result = await insuranceContract.call({\n        method: 'cancel_contract',\n        args: [],\n    });\n\n    if (result.isErr()) {\n        console.error('Error canceling contract:', result.error);\n        return;\n    }\n\n    console.log('Contract canceled successfully:', result.value);\n  };\n\n  // Function to trigger insurance payout based on predefined conditions\n  const triggerPayout = async (conditionMet) => {\n    if (!insuranceContract) {\n        console.error('Insurance contract not created yet');\n        return;\n    }\n\n    const result = await insuranceContract.call({\n        method: 'trigger_payout',\n        args: [conditionMet],\n    });\n\n    if (result.isErr()) {\n        console.error('Error triggering payout:', result.error);\n        return;\n    }\n\n    console.log('Payout triggered successfully:', result.value);\n  };\n\n  // Function to monitor liquidity and trigger insurance payout if a significant drop is detected\n  const monitorLiquidity = async (liquidityDropThreshold, timeFrameHours, currentLiquidity) => {\n    if (!insuranceContract) {\n        console.error('Insurance contract not created yet');\n        return;\n    }\n\n    const result = await insuranceContract.call({\n        method: 'monitor_liquidity',\n        args: [liquidityDropThreshold, timeFrameHours, currentLiquidity],\n    });\n\n    if (result.isErr()) {\n        console.error('Error monitoring liquidity:', result.error);\n        return;\n    }\n\n    console.log('Liquidity monitored successfully:', result.value);\n  };\n\n  // Function to monitor market volatility and trigger insurance payout if volatility exceeds threshold\n  const monitorMarketVolatility = async (volatilityThreshold, currentVolatility) => {\n    if (!insuranceContract) {\n        console.error('Insurance contract not created yet');\n        return;\n    }\n\n    const result = await insuranceContract.call({\n        method: 'monitor_market_volatility',\n        args: [volatilityThreshold, currentVolatility],\n    });\n\n    if (result.isErr()) {\n        console.error('Error monitoring market volatility:', result.error);\n        return;\n    }\n\n    console.log('Market volatility monitored successfully:', result.value);\n  };\n\n  // Function to update the premium amount of the insurance contract\n  const updatePremiumAmount = async (newPremiumAmount) => {\n    if (!insuranceContract) {\n        console.error('Insurance contract not created yet');\n        return;\n    }\n\n    const result = await insuranceContract.call({\n        method: 'update_premium_amount',\n        args: [newPremiumAmount],\n    });\n\n    if (result.isErr()) {\n        console.error('Error updating premium amount:', result.error);\n        return;\n    }\n\n    console.log('Premium amount updated successfully:', result.value);\n  };\n\n  // Function to update the payout amount of the insurance contract\n  const updatePayoutAmount = async (newPayoutAmount) => {\n    if (!insuranceContract) {\n        console.error('Insurance contract not created yet');\n        return;\n    }\n\n    const result = await insuranceContract.call({\n        method: 'update_payout_amount',\n        args: [newPayoutAmount],\n    });\n\n    if (result.isErr()) {\n        console.error('Error updating payout amount:', result.error);\n        return;\n    }\n\n    console.log('Payout amount updated successfully:', result.value);\n  };\n\n  // Function to automate claim processing if conditions are met\n  const automateClaimProcessing = async (autoClaimCondition) => {\n    if (!insuranceContract) {\n        console.error('Insurance contract not created yet');\n        return;\n    }\n\n    const result = await insuranceContract.call({\n        method: 'automate_claim_processing',\n        args: [autoClaimCondition],\n    });\n\n    if (result.isErr()) {\n        console.error('Error automating claim processing:', result.error);\n        return;\n    }\n\n    console.log('Claim processing automated successfully:', result.value);\n  };\n\n  // Function to handle sign up\n  const signUp = async () => {\n    try {\n      // Code to create a new insurance contract\n      const result = await createInsuranceContract(username, premiumAmount, payoutAmount, riskLevel);\n      // Handle success\n      console.log('Insurance contract created:', result);\n    } catch (error) {\n      // Handle error\n      console.error('Error creating insurance contract:', error);\n    }\n  };\n\n  // Function to handle claiming money\n  const claimMoney = async () => {\n    try {\n      // Code to trigger the claim process\n      // For example:\n      const result = await insuranceContract.call({\n        method: 'make_claim',\n        args: [],\n      });\n      // Handle success\n      console.log('Claim made successfully:', result.value);\n      setClaimStatus('Claim made successfully');\n    } catch (error) {\n      // Handle error\n      console.error('Error making claim:', error);\n      setClaimStatus('Error making claim');\n    }\n  };\n\n  // Function to handle stalking\n  const stalk = async (id) => {\n    try {\n      // Code to fetch and display information about the specified ID\n      // For example:\n      const info = await fetchInformation(id);\n      // Handle success\n      console.log('Stalking result:', info);\n      setStalkingResult(info);\n    } catch (error) {\n      // Handle error\n      console.error('Error stalking:', error);\n      setStalkingResult('Error stalking');\n    }\n  };\n\n  // Function to handle change in stalking input\n  const handleStalkInputChange = (event) => {\n    // Update the state with the input value\n    // For example:\n    setStalkingInput(event.target.value);\n  };\n// Define fetchInformation function\nconst fetchInformation = async (id) => {\n  // Implementation of fetchInformation function\n};\n\n// Define handleContractInteractions function\nconst handleContractInteractions = () => {\n  // Implementation of handleContractInteractions function\n};\n\nreturn (\n  <div className=\"container\">\n    <div className=\"profile-details\" style={{ marginBottom: '20px', display: 'flex', alignItems: 'center' }}>\n      <div className=\"profile\">\n        <img src={profilePicture} alt=\"Profile\" className=\"avatar\" style={{ width: '200px', height: '200px', borderRadius: '80%', marginBottom: '10px' }} />\n      </div>\n\n      <div className=\"button-row\" style={{ display: 'flex', justifyContent: 'space-between', width: '100%' }}>\n        <div className=\"form\" style={{ width: '25%', padding: '15px' }}>\n          <h2>Sign Up For Insurance</h2>\n          <input type=\"text\" placeholder=\"Your xrd Domain\" value={username} onChange={(e) => setUsername(e.target.value)} />\n          <input type=\"number\" placeholder=\"Premium Amount\" value={premiumAmount} onChange={(e) => setPremiumAmount(e.target.value)} />\n          <input type=\"number\" placeholder=\"Payout Amount\" value={payoutAmount} onChange={(e) => setPayoutAmount(e.target.value)} />\n          <input type=\"number\" placeholder=\"Risk Level\" value={riskLevel} onChange={(e) => setRiskLevel(e.target.value)} />\n          <button className=\"wallet-button\" onClick={signUp} style={{ padding: '15px' }}>\n            Create Insurance\n          </button>\n        </div>\n\n        <div className=\"wallet-section\" style={{ width: '25%' }}>\n          {error && walletConnected ? (\n            <div>\n              <p>Wallet Connected Successfully</p>\n              <p>Account Address: {accountAddress}</p>\n              <button className=\"wallet-button\" onClick={handleContractInteractions} style={{ width: '100%', padding: '15px' }}>\n                Interact with Contract\n              </button>\n            </div>\n          ) : (\n            <div>\n              <button className=\"wallet-button\" onClick={connectToWallet} style={{ width: '100%', padding: '15px' }}>\n                Connect To Wallet\n              </button>\n            </div>\n          )}\n        </div>\n\n        <div style={{ width: '25%' }}>\n          <button className=\"wallet-button\" onClick={claimMoney} style={{ padding: '15px' }}>\n            Claim Your Crypto\n          </button>\n        </div>\n      </div>\n\n      <div className=\"stalk-section\" style={{ width: '25%', padding: '15px' }}>\n      <h2>Stalk Your Crypto</h2>\n\n        <input type=\"text\" placeholder=\"Enter Amount to stalk\" onChange={handleStalkInputChange} />\n        <button className=\"wallet-button\" onClick={() => stalk(stalkingInput)} style={{ padding: '15px' }}>\n          Stalk Your Crypto\n        </button>\n        {stalkingResult && <p>{stalkingResult}</p>}\n      </div>\n    </div>\n\n    <button className=\"wallet-button\" onClick={toggleShardSpace} style={{ width: '100%', marginTop: '20px', padding: '15px' }}>\n      Experience ShardSpace\n    </button>\n\n    {showShardSpace && (\n      <iframe\n        title=\"Portfolio Accounts\"\n        src=\"https://launch.shardspace.app/portfolio/accounts\"\n        width=\"100%\"\n        height=\"600px\"\n        style={{ border: 'none', marginTop: '20px' }}\n      />\n    )}\n  </div>\n);\n\n\n};\n\nexport default Profile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}