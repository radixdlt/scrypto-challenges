{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransactionIdentifier = void 0;\nconst neverthrow_1 = require(\"neverthrow\");\nconst isTransactionIdentifier = something => {\n  const inspection = something;\n  return inspection.__hex !== undefined && inspection.__witness === 'isTXId';\n};\nconst create = bytes => {\n  const buffer = typeof bytes === 'string' ? Buffer.from(bytes, 'hex') : bytes;\n  const length = 32;\n  if (buffer.length !== length) {\n    return (0, neverthrow_1.err)(new Error(`Expected #${length} bytes, but got #${buffer.length}`));\n  }\n  const asString = buffer.toString('hex');\n  return (0, neverthrow_1.ok)({\n    __witness: 'isTXId',\n    __hex: asString,\n    toString: () => asString,\n    equals: other => other.toString() === asString\n  });\n};\nexports.TransactionIdentifier = {\n  is: isTransactionIdentifier,\n  create\n};","map":{"version":3,"names":["neverthrow_1","require","isTransactionIdentifier","something","inspection","__hex","undefined","__witness","create","bytes","buffer","Buffer","from","length","err","Error","asString","toString","ok","equals","other","exports","TransactionIdentifier","is"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/@radixdlt/application/src/dto/transactionIdentifier.ts"],"sourcesContent":["import { err, ok, Result } from 'neverthrow'\nimport { TransactionIdentifierT } from './_types'\n\nconst isTransactionIdentifier = (\n\tsomething: unknown,\n): something is TransactionIdentifierT => {\n\tconst inspection = something as TransactionIdentifierT\n\treturn inspection.__hex !== undefined && inspection.__witness === 'isTXId'\n}\n\nconst create = (\n\tbytes: Buffer | string,\n): Result<TransactionIdentifierT, Error> => {\n\tconst buffer = typeof bytes === 'string' ? Buffer.from(bytes, 'hex') : bytes\n\tconst length = 32\n\tif (buffer.length !== length) {\n\t\treturn err(\n\t\t\tnew Error(`Expected #${length} bytes, but got #${buffer.length}`),\n\t\t)\n\t}\n\n\tconst asString = buffer.toString('hex')\n\n\treturn ok({\n\t\t__witness: 'isTXId',\n\t\t__hex: asString,\n\t\ttoString: () => asString,\n\t\tequals: (other: TransactionIdentifierT) =>\n\t\t\tother.toString() === asString,\n\t})\n}\n\nexport const TransactionIdentifier = {\n\tis: isTransactionIdentifier,\n\tcreate,\n}\n"],"mappings":";;;;;;AAAA,MAAAA,YAAA,GAAAC,OAAA;AAGA,MAAMC,uBAAuB,GAC5BC,SAAkB,IACsB;EACxC,MAAMC,UAAU,GAAGD,SAAmC;EACtD,OAAOC,UAAU,CAACC,KAAK,KAAKC,SAAS,IAAIF,UAAU,CAACG,SAAS,KAAK,QAAQ;AAC3E,CAAC;AAED,MAAMC,MAAM,GACXC,KAAsB,IACoB;EAC1C,MAAMC,MAAM,GAAG,OAAOD,KAAK,KAAK,QAAQ,GAAGE,MAAM,CAACC,IAAI,CAACH,KAAK,EAAE,KAAK,CAAC,GAAGA,KAAK;EAC5E,MAAMI,MAAM,GAAG,EAAE;EACjB,IAAIH,MAAM,CAACG,MAAM,KAAKA,MAAM,EAAE;IAC7B,OAAO,IAAAb,YAAA,CAAAc,GAAG,EACT,IAAIC,KAAK,CAAC,aAAaF,MAAM,oBAAoBH,MAAM,CAACG,MAAM,EAAE,CAAC,CACjE;;EAGF,MAAMG,QAAQ,GAAGN,MAAM,CAACO,QAAQ,CAAC,KAAK,CAAC;EAEvC,OAAO,IAAAjB,YAAA,CAAAkB,EAAE,EAAC;IACTX,SAAS,EAAE,QAAQ;IACnBF,KAAK,EAAEW,QAAQ;IACfC,QAAQ,EAAEA,CAAA,KAAMD,QAAQ;IACxBG,MAAM,EAAGC,KAA6B,IACrCA,KAAK,CAACH,QAAQ,EAAE,KAAKD;GACtB,CAAC;AACH,CAAC;AAEYK,OAAA,CAAAC,qBAAqB,GAAG;EACpCC,EAAE,EAAErB,uBAAuB;EAC3BM;CACA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}