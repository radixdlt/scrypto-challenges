{"ast":null,"code":"var _jsxFileName = \"/Users/mdabdurrazzak/RadInsu/src/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { DataRequestBuilder, RadixDappToolkit, RadixNetwork } from '@radixdlt/radix-dapp-toolkit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyRadixComponent = () => {\n  _s();\n  useEffect(() => {\n    // Replace with your dApp definition address and component address\n    const dAppDefinitionAddress = \"account_tdx_2_12xxk4dqhg9dz53p745qhpr5tr2k2al4mpx3296tr8k78kna6rkcgsz\";\n    const componentAddress = \"package_tdx_2_1pkqs4w05uxmthjg5zrqyag40gaqsjkntw7utk7p8vcmht3ju4e2k0v\";\n\n    // Create a dapp configuration object for the Radix Dapp Toolkit\n    const dappConfig = {\n      networkId: RadixNetwork.Stokenet,\n      applicationVersion: \"1.0.0\",\n      applicationName: \"YourApp\",\n      applicationDappDefinitionAddress: dAppDefinitionAddress,\n      dAppDefinitionAddress // This field will be updated and removed soon\n    };\n\n    // Instantiate DappToolkit to connect to the Radix wallet and network\n    const rdt = RadixDappToolkit(dappConfig);\n\n    // Connect a user account when wallet is connected\n    rdt.walletApi.setRequestData(DataRequestBuilder.accounts().exactly(1));\n\n    // Handle the button click event to fetch wallet data and perform actions\n    const handleButtonClick = async () => {\n      try {\n        // Get the user's connected account address\n        const accountAddress = rdt.walletApi.getWalletData().accounts[0].address;\n\n        // Log the account address\n        console.log(\"Account Address:\", accountAddress);\n\n        // Perform additional actions using the wallet data if needed\n        // For example, you can use the account address to interact with smart contracts\n      } catch (error) {\n        console.error(\"Error fetching wallet data:\", error);\n      }\n    };\n    document.getElementById(\"free_token\").addEventListener(\"click\", handleButtonClick);\n    return () => {\n      document.getElementById(\"free_token\").removeEventListener(\"click\", handleButtonClick);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"free_token\",\n      children: \"Free Token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(MyRadixComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MyRadixComponent;\nexport default MyRadixComponent;\nvar _c;\n$RefreshReg$(_c, \"MyRadixComponent\");","map":{"version":3,"names":["React","useEffect","DataRequestBuilder","RadixDappToolkit","RadixNetwork","jsxDEV","_jsxDEV","MyRadixComponent","_s","dAppDefinitionAddress","componentAddress","dappConfig","networkId","Stokenet","applicationVersion","applicationName","applicationDappDefinitionAddress","rdt","walletApi","setRequestData","accounts","exactly","handleButtonClick","accountAddress","getWalletData","address","console","log","error","document","getElementById","addEventListener","removeEventListener","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mdabdurrazzak/RadInsu/src/Profile.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { DataRequestBuilder, RadixDappToolkit, RadixNetwork } from '@radixdlt/radix-dapp-toolkit';\n\nconst MyRadixComponent = () => {\n  useEffect(() => {\n    // Replace with your dApp definition address and component address\n    const dAppDefinitionAddress = \"account_tdx_2_12xxk4dqhg9dz53p745qhpr5tr2k2al4mpx3296tr8k78kna6rkcgsz\";\n    const componentAddress = \"package_tdx_2_1pkqs4w05uxmthjg5zrqyag40gaqsjkntw7utk7p8vcmht3ju4e2k0v\";\n\n    // Create a dapp configuration object for the Radix Dapp Toolkit\n    const dappConfig = {\n      networkId: RadixNetwork.Stokenet,\n      applicationVersion: \"1.0.0\",\n      applicationName: \"YourApp\",\n      applicationDappDefinitionAddress: dAppDefinitionAddress,\n      dAppDefinitionAddress, // This field will be updated and removed soon\n    };\n\n    // Instantiate DappToolkit to connect to the Radix wallet and network\n    const rdt = RadixDappToolkit(dappConfig);\n\n    // Connect a user account when wallet is connected\n    rdt.walletApi.setRequestData(DataRequestBuilder.accounts().exactly(1));\n\n    // Handle the button click event to fetch wallet data and perform actions\n    const handleButtonClick = async () => {\n      try {\n        // Get the user's connected account address\n        const accountAddress = rdt.walletApi.getWalletData().accounts[0].address;\n\n        // Log the account address\n        console.log(\"Account Address:\", accountAddress);\n\n        // Perform additional actions using the wallet data if needed\n        // For example, you can use the account address to interact with smart contracts\n\n      } catch (error) {\n        console.error(\"Error fetching wallet data:\", error);\n      }\n    };\n\n    document.getElementById(\"free_token\").addEventListener(\"click\", handleButtonClick);\n\n    return () => {\n      document.getElementById(\"free_token\").removeEventListener(\"click\", handleButtonClick);\n    };\n  }, []);\n\n  return (\n    <div>\n      {/* Your component JSX */}\n      <button id=\"free_token\">Free Token</button>\n    </div>\n  );\n};\n\nexport default MyRadixComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,kBAAkB,EAAEC,gBAAgB,EAAEC,YAAY,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElG,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7BP,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,qBAAqB,GAAG,uEAAuE;IACrG,MAAMC,gBAAgB,GAAG,uEAAuE;;IAEhG;IACA,MAAMC,UAAU,GAAG;MACjBC,SAAS,EAAER,YAAY,CAACS,QAAQ;MAChCC,kBAAkB,EAAE,OAAO;MAC3BC,eAAe,EAAE,SAAS;MAC1BC,gCAAgC,EAAEP,qBAAqB;MACvDA,qBAAqB,CAAE;IACzB,CAAC;;IAED;IACA,MAAMQ,GAAG,GAAGd,gBAAgB,CAACQ,UAAU,CAAC;;IAExC;IACAM,GAAG,CAACC,SAAS,CAACC,cAAc,CAACjB,kBAAkB,CAACkB,QAAQ,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;;IAEtE;IACA,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF;QACA,MAAMC,cAAc,GAAGN,GAAG,CAACC,SAAS,CAACM,aAAa,CAAC,CAAC,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAACK,OAAO;;QAExE;QACAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,cAAc,CAAC;;QAE/C;QACA;MAEF,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAEDC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,gBAAgB,CAAC,OAAO,EAAET,iBAAiB,CAAC;IAElF,OAAO,MAAM;MACXO,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACE,mBAAmB,CAAC,OAAO,EAAEV,iBAAiB,CAAC;IACvF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,OAAA;IAAA2B,QAAA,eAEE3B,OAAA;MAAQ4B,EAAE,EAAC,YAAY;MAAAD,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAnDID,gBAAgB;AAAAgC,EAAA,GAAhBhC,gBAAgB;AAqDtB,eAAeA,gBAAgB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}