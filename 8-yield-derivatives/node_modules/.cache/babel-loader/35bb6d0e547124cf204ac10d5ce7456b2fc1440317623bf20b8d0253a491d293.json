{"ast":null,"code":"import { getXHRResponse } from './getXHRResponse';\nimport { createErrorClass } from '../util/createErrorClass';\nexport var AjaxError = createErrorClass(function (_super) {\n  return function AjaxErrorImpl(message, xhr, request) {\n    this.message = message;\n    this.name = 'AjaxError';\n    this.xhr = xhr;\n    this.request = request;\n    this.status = xhr.status;\n    this.responseType = xhr.responseType;\n    var response;\n    try {\n      response = getXHRResponse(xhr);\n    } catch (err) {\n      response = xhr.responseText;\n    }\n    this.response = response;\n  };\n});\nexport var AjaxTimeoutError = function () {\n  function AjaxTimeoutErrorImpl(xhr, request) {\n    AjaxError.call(this, 'ajax timeout', xhr, request);\n    this.name = 'AjaxTimeoutError';\n    return this;\n  }\n  AjaxTimeoutErrorImpl.prototype = Object.create(AjaxError.prototype);\n  return AjaxTimeoutErrorImpl;\n}();","map":{"version":3,"names":["getXHRResponse","createErrorClass","AjaxError","_super","AjaxErrorImpl","message","xhr","request","name","status","responseType","response","err","responseText","AjaxTimeoutError","AjaxTimeoutErrorImpl","call","prototype","Object","create"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/rxjs/src/internal/ajax/errors.ts"],"sourcesContent":["import { AjaxRequest } from './types';\nimport { getXHRResponse } from './getXHRResponse';\nimport { createErrorClass } from '../util/createErrorClass';\n\n/**\n * A normalized AJAX error.\n *\n * @see {@link ajax}\n *\n * @class AjaxError\n */\nexport interface AjaxError extends Error {\n  /**\n   * The XHR instance associated with the error.\n   */\n  xhr: XMLHttpRequest;\n\n  /**\n   * The AjaxRequest associated with the error.\n   */\n  request: AjaxRequest;\n\n  /**\n   * The HTTP status code, if the request has completed. If not,\n   * it is set to `0`.\n   */\n  status: number;\n\n  /**\n   * The responseType (e.g. 'json', 'arraybuffer', or 'xml').\n   */\n  responseType: XMLHttpRequestResponseType;\n\n  /**\n   * The response data.\n   */\n  response: any;\n}\n\nexport interface AjaxErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string, xhr: XMLHttpRequest, request: AjaxRequest): AjaxError;\n}\n\n/**\n * Thrown when an error occurs during an AJAX request.\n * This is only exported because it is useful for checking to see if an error\n * is an `instanceof AjaxError`. DO NOT create new instances of `AjaxError` with\n * the constructor.\n *\n * @class AjaxError\n * @see {@link ajax}\n */\nexport const AjaxError: AjaxErrorCtor = createErrorClass(\n  (_super) =>\n    function AjaxErrorImpl(this: any, message: string, xhr: XMLHttpRequest, request: AjaxRequest) {\n      this.message = message;\n      this.name = 'AjaxError';\n      this.xhr = xhr;\n      this.request = request;\n      this.status = xhr.status;\n      this.responseType = xhr.responseType;\n      let response: any;\n      try {\n        // This can throw in IE, because we have to do a JSON.parse of\n        // the response in some cases to get the expected response property.\n        response = getXHRResponse(xhr);\n      } catch (err) {\n        response = xhr.responseText;\n      }\n      this.response = response;\n    }\n);\n\nexport interface AjaxTimeoutError extends AjaxError {}\n\nexport interface AjaxTimeoutErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (xhr: XMLHttpRequest, request: AjaxRequest): AjaxTimeoutError;\n}\n\n/**\n * Thrown when an AJAX request times out. Not to be confused with {@link TimeoutError}.\n *\n * This is exported only because it is useful for checking to see if errors are an\n * `instanceof AjaxTimeoutError`. DO NOT use the constructor to create an instance of\n * this type.\n *\n * @class AjaxTimeoutError\n * @see {@link ajax}\n */\nexport const AjaxTimeoutError: AjaxTimeoutErrorCtor = (() => {\n  function AjaxTimeoutErrorImpl(this: any, xhr: XMLHttpRequest, request: AjaxRequest) {\n    AjaxError.call(this, 'ajax timeout', xhr, request);\n    this.name = 'AjaxTimeoutError';\n    return this;\n  }\n  AjaxTimeoutErrorImpl.prototype = Object.create(AjaxError.prototype);\n  return AjaxTimeoutErrorImpl;\n})() as any;\n"],"mappings":"AACA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,gBAAgB,QAAQ,0BAA0B;AAsD3D,OAAO,IAAMC,SAAS,GAAkBD,gBAAgB,CACtD,UAACE,MAAM;EACL,gBAASC,aAAaA,CAAYC,OAAe,EAAEC,GAAmB,EAAEC,OAAoB;IAC1F,IAAI,CAACF,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACG,IAAI,GAAG,WAAW;IACvB,IAAI,CAACF,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACE,MAAM,GAAGH,GAAG,CAACG,MAAM;IACxB,IAAI,CAACC,YAAY,GAAGJ,GAAG,CAACI,YAAY;IACpC,IAAIC,QAAa;IACjB,IAAI;MAGFA,QAAQ,GAAGX,cAAc,CAACM,GAAG,CAAC;KAC/B,CAAC,OAAOM,GAAG,EAAE;MACZD,QAAQ,GAAGL,GAAG,CAACO,YAAY;;IAE7B,IAAI,CAACF,QAAQ,GAAGA,QAAQ;EAC1B,CAAC;AAhBD,CAgBC,CACJ;AAsBD,OAAO,IAAMG,gBAAgB,GAA0B;EACrD,SAASC,oBAAoBA,CAAYT,GAAmB,EAAEC,OAAoB;IAChFL,SAAS,CAACc,IAAI,CAAC,IAAI,EAAE,cAAc,EAAEV,GAAG,EAAEC,OAAO,CAAC;IAClD,IAAI,CAACC,IAAI,GAAG,kBAAkB;IAC9B,OAAO,IAAI;EACb;EACAO,oBAAoB,CAACE,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACjB,SAAS,CAACe,SAAS,CAAC;EACnE,OAAOF,oBAAoB;AAC7B,CAAC,CAAC,CAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}