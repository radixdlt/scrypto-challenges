{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Keystore = void 0;\nconst neverthrow_1 = require(\"neverthrow\");\nconst symmetric_encryption_1 = require(\"../symmetric-encryption\");\nconst util_1 = require(\"@radixdlt/util\");\nconst key_derivation_functions_1 = require(\"../key-derivation-functions\");\nconst hash_1 = require(\"../hash\");\nconst validatePassword = password => (0, neverthrow_1.ok)(password); // no validation for now...\nconst encryptSecret = input => {\n  var _a, _b, _c, _d;\n  const secureRandom = (_a = input.secureRandom) !== null && _a !== void 0 ? _a : util_1.secureRandomGenerator;\n  const kdf = (_b = input.kdf) !== null && _b !== void 0 ? _b : 'scrypt';\n  const params = (_c = input.kdfParams) !== null && _c !== void 0 ? _c : key_derivation_functions_1.ScryptParams.create({\n    secureRandom\n  });\n  const memo = (_d = input.memo) !== null && _d !== void 0 ? _d : Date.now().toLocaleString();\n  return validatePassword(input.password).map(p => ({\n    kdf,\n    params,\n    password: Buffer.from(p)\n  })).asyncAndThen(inp => key_derivation_functions_1.Scrypt.deriveKey(inp)).map(derivedKey => ({\n    plaintext: input.secret,\n    symmetricKey: derivedKey\n  })).andThen(inp => symmetric_encryption_1.AES_GCM.seal(inp)).map(sealedBox => {\n    const cipherText = sealedBox.ciphertext;\n    const mac = sealedBox.authTag;\n    const id = (0, hash_1.sha256)(cipherText).toString('hex').slice(-16);\n    util_1.log.debug(`Created Keystore with id='${id}' and memo='${memo}' (non of these are sensisitve).`);\n    return {\n      memo,\n      crypto: {\n        cipher: symmetric_encryption_1.AES_GCM.algorithm,\n        cipherparams: {\n          nonce: sealedBox.nonce.toString('hex')\n        },\n        ciphertext: cipherText.toString('hex'),\n        kdf,\n        kdfparams: params,\n        mac: mac.toString('hex')\n      },\n      id,\n      version: 1\n    };\n  });\n};\nconst decrypt = input => {\n  const {\n    keystore,\n    password\n  } = input;\n  const kdf = keystore.crypto.kdf;\n  const encryptedPrivateKey = Buffer.from(keystore.crypto.ciphertext, 'hex');\n  const params = keystore.crypto.kdfparams;\n  return symmetric_encryption_1.AES_GCM_SealedBox.create({\n    nonce: Buffer.from(keystore.crypto.cipherparams.nonce, 'hex'),\n    authTag: Buffer.from(keystore.crypto.mac, 'hex'),\n    ciphertext: encryptedPrivateKey\n  }).asyncAndThen(aesSealBox => {\n    const aesOpenInput = Object.assign({}, aesSealBox);\n    return validatePassword(password).map(p => ({\n      kdf,\n      params,\n      password: Buffer.from(p)\n    })).asyncAndThen(inp => key_derivation_functions_1.Scrypt.deriveKey(inp)).map(derivedKey => {\n      util_1.log.info(`[Decrypting Keystore] successfully derived key using KDF ('${keystore.crypto.kdf}')`);\n      return Object.assign(Object.assign({}, aesOpenInput), {\n        symmetricKey: derivedKey\n      });\n    }).andThen(inp => symmetric_encryption_1.AES_GCM.open(inp).mapErr(e => {\n      const underlyingError = (0, util_1.msgFromError)(e);\n      const errMsg = `Failed to decrypt keystore, wrong password? Underlying error: '${underlyingError}'.`;\n      console.error(errMsg);\n      return new Error(errMsg);\n    })).map(decrypted => {\n      util_1.log.debug(`Successfully decrypted Keystore with id='${keystore.id}'`);\n      return decrypted;\n    });\n  });\n};\nconst fromBuffer = keystoreBuffer => {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call\n    const keystore = JSON.parse(keystoreBuffer.toString());\n    if (isKeystore(keystore)) return (0, neverthrow_1.ok)(keystore);\n    const errMsg = 'Parse object, but is not a keystore';\n    util_1.log.error(errMsg);\n    return (0, neverthrow_1.err)(new Error(errMsg));\n  } catch (e) {\n    const underlying = (0, util_1.msgFromError)(e);\n    const errMsg = `Failed to parse keystore from JSON data, underlying error: ${underlying}`;\n    util_1.log.error(errMsg);\n    return (0, neverthrow_1.err)(new Error(errMsg));\n  }\n};\nconst isScryptParams = something => {\n  const inspection = something;\n  return inspection.blockSize !== undefined && inspection.costParameterC !== undefined && inspection.costParameterN !== undefined && inspection.lengthOfDerivedKey !== undefined && inspection.parallelizationParameter !== undefined && inspection.salt !== undefined;\n};\nconst isKeystoreCrypto = something => {\n  const inspection = something;\n  return inspection.cipher !== undefined && inspection.cipherparams !== undefined && inspection.ciphertext !== undefined && inspection.kdf !== undefined && inspection.kdfparams !== undefined && isScryptParams(inspection.kdfparams);\n};\nconst isKeystore = something => {\n  const inspection = something;\n  return inspection.crypto !== undefined && isKeystoreCrypto(inspection.crypto) && inspection.id !== undefined && inspection.version !== undefined;\n};\nexports.Keystore = {\n  fromBuffer,\n  decrypt,\n  validatePassword,\n  encryptSecret\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","Keystore","neverthrow_1","require","symmetric_encryption_1","util_1","key_derivation_functions_1","hash_1","validatePassword","password","ok","encryptSecret","input","_a","_b","_c","_d","secureRandom","secureRandomGenerator","kdf","params","kdfParams","ScryptParams","create","memo","Date","now","toLocaleString","map","p","Buffer","from","asyncAndThen","inp","Scrypt","deriveKey","derivedKey","plaintext","secret","symmetricKey","andThen","AES_GCM","seal","sealedBox","cipherText","ciphertext","mac","authTag","id","sha256","toString","slice","log","debug","crypto","cipher","algorithm","cipherparams","nonce","kdfparams","version","decrypt","keystore","encryptedPrivateKey","AES_GCM_SealedBox","aesSealBox","aesOpenInput","assign","info","open","mapErr","e","underlyingError","msgFromError","errMsg","console","error","Error","decrypted","fromBuffer","keystoreBuffer","JSON","parse","isKeystore","err","underlying","isScryptParams","something","inspection","blockSize","undefined","costParameterC","costParameterN","lengthOfDerivedKey","parallelizationParameter","salt","isKeystoreCrypto"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/@radixdlt/crypto/dist/keystore/keystore.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Keystore = void 0;\nconst neverthrow_1 = require(\"neverthrow\");\nconst symmetric_encryption_1 = require(\"../symmetric-encryption\");\nconst util_1 = require(\"@radixdlt/util\");\nconst key_derivation_functions_1 = require(\"../key-derivation-functions\");\nconst hash_1 = require(\"../hash\");\nconst validatePassword = (password) => (0, neverthrow_1.ok)(password); // no validation for now...\nconst encryptSecret = (input) => {\n    var _a, _b, _c, _d;\n    const secureRandom = (_a = input.secureRandom) !== null && _a !== void 0 ? _a : util_1.secureRandomGenerator;\n    const kdf = (_b = input.kdf) !== null && _b !== void 0 ? _b : 'scrypt';\n    const params = (_c = input.kdfParams) !== null && _c !== void 0 ? _c : key_derivation_functions_1.ScryptParams.create({ secureRandom });\n    const memo = (_d = input.memo) !== null && _d !== void 0 ? _d : Date.now().toLocaleString();\n    return validatePassword(input.password)\n        .map(p => ({ kdf, params, password: Buffer.from(p) }))\n        .asyncAndThen(inp => key_derivation_functions_1.Scrypt.deriveKey(inp))\n        .map(derivedKey => ({\n        plaintext: input.secret,\n        symmetricKey: derivedKey,\n    }))\n        .andThen(inp => symmetric_encryption_1.AES_GCM.seal(inp))\n        .map(sealedBox => {\n        const cipherText = sealedBox.ciphertext;\n        const mac = sealedBox.authTag;\n        const id = (0, hash_1.sha256)(cipherText).toString('hex').slice(-16);\n        util_1.log.debug(`Created Keystore with id='${id}' and memo='${memo}' (non of these are sensisitve).`);\n        return {\n            memo,\n            crypto: {\n                cipher: symmetric_encryption_1.AES_GCM.algorithm,\n                cipherparams: {\n                    nonce: sealedBox.nonce.toString('hex'),\n                },\n                ciphertext: cipherText.toString('hex'),\n                kdf,\n                kdfparams: params,\n                mac: mac.toString('hex'),\n            },\n            id,\n            version: 1,\n        };\n    });\n};\nconst decrypt = (input) => {\n    const { keystore, password } = input;\n    const kdf = keystore.crypto.kdf;\n    const encryptedPrivateKey = Buffer.from(keystore.crypto.ciphertext, 'hex');\n    const params = keystore.crypto.kdfparams;\n    return symmetric_encryption_1.AES_GCM_SealedBox.create({\n        nonce: Buffer.from(keystore.crypto.cipherparams.nonce, 'hex'),\n        authTag: Buffer.from(keystore.crypto.mac, 'hex'),\n        ciphertext: encryptedPrivateKey,\n    }).asyncAndThen((aesSealBox) => {\n        const aesOpenInput = Object.assign({}, aesSealBox);\n        return validatePassword(password)\n            .map((p) => ({ kdf, params, password: Buffer.from(p) }))\n            .asyncAndThen(inp => key_derivation_functions_1.Scrypt.deriveKey(inp))\n            .map((derivedKey) => {\n            util_1.log.info(`[Decrypting Keystore] successfully derived key using KDF ('${keystore.crypto.kdf}')`);\n            return Object.assign(Object.assign({}, aesOpenInput), { symmetricKey: derivedKey });\n        })\n            .andThen((inp) => symmetric_encryption_1.AES_GCM.open(inp).mapErr(e => {\n            const underlyingError = (0, util_1.msgFromError)(e);\n            const errMsg = `Failed to decrypt keystore, wrong password? Underlying error: '${underlyingError}'.`;\n            console.error(errMsg);\n            return new Error(errMsg);\n        }))\n            .map(decrypted => {\n            util_1.log.debug(`Successfully decrypted Keystore with id='${keystore.id}'`);\n            return decrypted;\n        });\n    });\n};\nconst fromBuffer = (keystoreBuffer) => {\n    try {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call\n        const keystore = JSON.parse(keystoreBuffer.toString());\n        if (isKeystore(keystore))\n            return (0, neverthrow_1.ok)(keystore);\n        const errMsg = 'Parse object, but is not a keystore';\n        util_1.log.error(errMsg);\n        return (0, neverthrow_1.err)(new Error(errMsg));\n    }\n    catch (e) {\n        const underlying = (0, util_1.msgFromError)(e);\n        const errMsg = `Failed to parse keystore from JSON data, underlying error: ${underlying}`;\n        util_1.log.error(errMsg);\n        return (0, neverthrow_1.err)(new Error(errMsg));\n    }\n};\nconst isScryptParams = (something) => {\n    const inspection = something;\n    return (inspection.blockSize !== undefined &&\n        inspection.costParameterC !== undefined &&\n        inspection.costParameterN !== undefined &&\n        inspection.lengthOfDerivedKey !== undefined &&\n        inspection.parallelizationParameter !== undefined &&\n        inspection.salt !== undefined);\n};\nconst isKeystoreCrypto = (something) => {\n    const inspection = something;\n    return (inspection.cipher !== undefined &&\n        inspection.cipherparams !== undefined &&\n        inspection.ciphertext !== undefined &&\n        inspection.kdf !== undefined &&\n        inspection.kdfparams !== undefined &&\n        isScryptParams(inspection.kdfparams));\n};\nconst isKeystore = (something) => {\n    const inspection = something;\n    return (inspection.crypto !== undefined &&\n        isKeystoreCrypto(inspection.crypto) &&\n        inspection.id !== undefined &&\n        inspection.version !== undefined);\n};\nexports.Keystore = {\n    fromBuffer,\n    decrypt,\n    validatePassword,\n    encryptSecret,\n};\n//# sourceMappingURL=keystore.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}