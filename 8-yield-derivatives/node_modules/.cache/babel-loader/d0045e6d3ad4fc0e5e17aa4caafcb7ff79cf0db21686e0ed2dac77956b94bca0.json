{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar rxjs_1 = require(\"rxjs\");\nvar typescript_map_1 = require(\"typescript-map\");\nvar atommodel_1 = require(\"../atommodel\");\nvar RadixDecryptionAccountSystem_1 = require(\"./RadixDecryptionAccountSystem\");\nvar bn_js_1 = tslib_1.__importDefault(require(\"bn.js\"));\nvar RadixTokenManager_1 = require(\"../token/RadixTokenManager\");\nvar decimal_js_1 = tslib_1.__importDefault(require(\"decimal.js\"));\nvar RadixTokenDefinition_1 = require(\"../token/RadixTokenDefinition\");\nvar RadixTransferAccountSystem = /** @class */function () {\n  function RadixTransferAccountSystem(address) {\n    this.address = address;\n    this.name = 'TRANSFER';\n    this.transactions = new typescript_map_1.TSMap();\n    this.balance = {};\n    this.tokenUnitsBalance = {};\n    this.transactionSubject = new rxjs_1.Subject();\n    this.unspentConsumables = new typescript_map_1.TSMap();\n    this.spentConsumables = new typescript_map_1.TSMap();\n    // Add default radix token to balance\n    this.balance[RadixTokenManager_1.radixTokenManager.nativeToken.toString()] = new bn_js_1.default(0);\n    this.balanceSubject = new rxjs_1.BehaviorSubject(this.balance);\n    this.tokenUnitsBalance[RadixTokenManager_1.radixTokenManager.nativeToken.toString()] = new decimal_js_1.default(0);\n    this.tokenUnitsBalanceSubject = new rxjs_1.BehaviorSubject(this.tokenUnitsBalance);\n  }\n  RadixTransferAccountSystem.prototype.processAtomUpdate = function (atomUpdate) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var atom;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            atom = atomUpdate.atom;\n            if (!atom.containsParticle(atommodel_1.RadixTransferrableTokensParticle)) {\n              return [2 /*return*/];\n            }\n            if (!(atomUpdate.action === 'STORE')) return [3 /*break*/, 2];\n            return [4 /*yield*/, this.processStoreAtom(atomUpdate)];\n          case 1:\n            _a.sent();\n            return [3 /*break*/, 4];\n          case 2:\n            if (!(atomUpdate.action === 'DELETE')) return [3 /*break*/, 4];\n            return [4 /*yield*/, this.processDeleteAtom(atomUpdate)];\n          case 3:\n            _a.sent();\n            _a.label = 4;\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  RadixTransferAccountSystem.prototype.processStoreAtom = function (atomUpdate) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var atom, transactionUpdate, transaction, consumables, consumables_1, consumables_1_1, consumable, spin, particle, tokenClassReference, ownedByMe, quantity, hid, numberOfParticipants, tokenId;\n      var e_1, _a;\n      return tslib_1.__generator(this, function (_b) {\n        atom = atomUpdate.atom;\n        // Skip existing atoms\n        if (this.transactions.has(atom.getAidString())) {\n          return [2 /*return*/];\n        }\n        transactionUpdate = {\n          action: 'STORE',\n          aid: atom.getAidString(),\n          transaction: {\n            aid: atom.getAidString(),\n            balance: {},\n            tokenUnitsBalance: {},\n            fee: 0,\n            participants: {},\n            timestamp: atom.getTimestamp(),\n            message: '',\n            unique: atom.getParticlesOfType(atommodel_1.RadixUniqueParticle).map(function (p) {\n              return p.getRRI().toString();\n            })\n          }\n        };\n        transaction = transactionUpdate.transaction;\n        // Get transaction message\n        if (atomUpdate.processedData.decryptedData && atomUpdate.processedData.decryptedData.decryptionState !== RadixDecryptionAccountSystem_1.RadixDecryptionState.CANNOT_DECRYPT) {\n          transaction.message = atomUpdate.processedData.decryptedData.data;\n        }\n        consumables = atom.getSpunParticlesOfType(atommodel_1.RadixTransferrableTokensParticle);\n        try {\n          // Get transaction details\n          for (consumables_1 = tslib_1.__values(consumables), consumables_1_1 = consumables_1.next(); !consumables_1_1.done; consumables_1_1 = consumables_1.next()) {\n            consumable = consumables_1_1.value;\n            spin = consumable.spin;\n            particle = consumable.particle;\n            tokenClassReference = particle.getTokenDefinitionReference();\n            ownedByMe = particle.getOwner().equals(this.address);\n            // TODO: Implement Fees when they change to token fees\n            // Assumes POW fee\n            if (ownedByMe) {\n              quantity = new bn_js_1.default(0);\n              hid = particle.getHidString();\n              if (spin === atommodel_1.RadixSpin.DOWN) {\n                quantity.isub(particle.getAmount());\n                this.unspentConsumables.delete(hid);\n                this.spentConsumables.set(hid, particle);\n              } else if (spin === atommodel_1.RadixSpin.UP) {\n                quantity.iadd(particle.getAmount());\n                if (!this.spentConsumables.has(hid)) {\n                  this.unspentConsumables.set(hid, particle);\n                }\n              }\n              if (!(tokenClassReference.toString() in transaction.balance)) {\n                transaction.balance[tokenClassReference.toString()] = new bn_js_1.default(0);\n              }\n              transaction.balance[tokenClassReference.toString()].iadd(quantity);\n            } else {\n              transaction.participants[particle.getOwner().toString()] = particle.getOwner();\n            }\n          }\n        } catch (e_1_1) {\n          e_1 = {\n            error: e_1_1\n          };\n        } finally {\n          try {\n            if (consumables_1_1 && !consumables_1_1.done && (_a = consumables_1.return)) _a.call(consumables_1);\n          } finally {\n            if (e_1) throw e_1.error;\n          }\n        }\n        // Not a transfer\n        if (Object.keys(transaction.balance).length === 0) {\n          return [2 /*return*/];\n        }\n        numberOfParticipants = Object.keys(transaction.participants).length;\n        if (numberOfParticipants > 2) {\n          throw new Error(\"Invalid number of transaction participants = \" + numberOfParticipants);\n        }\n        // Update balance\n        for (tokenId in transaction.balance) {\n          // Load tokenclass from network\n          // const tokenClass = await radixTokenManager.getTokenClass(tokenId)\n          if (!(tokenId in this.balance) || !this.balance[tokenId]) {\n            this.balance[tokenId] = new bn_js_1.default(0);\n          }\n          this.balance[tokenId].iadd(transaction.balance[tokenId]);\n          // Token units\n          transaction.tokenUnitsBalance[tokenId] = RadixTokenDefinition_1.RadixTokenDefinition.fromSubunitsToDecimal(transaction.balance[tokenId]);\n          if (!(tokenId in this.tokenUnitsBalance) || !this.balance[tokenId]) {\n            this.tokenUnitsBalance[tokenId] = new decimal_js_1.default(0);\n          }\n          this.tokenUnitsBalance[tokenId] = this.tokenUnitsBalance[tokenId].add(transaction.tokenUnitsBalance[tokenId]);\n        }\n        this.transactions.set(transactionUpdate.aid, transaction);\n        this.balanceSubject.next(this.balance);\n        this.tokenUnitsBalanceSubject.next(this.tokenUnitsBalance);\n        this.transactionSubject.next(transactionUpdate);\n        return [2 /*return*/];\n      });\n    });\n  };\n  RadixTransferAccountSystem.prototype.processDeleteAtom = function (atomUpdate) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var atom, id, transaction, transactionUpdate, tokenId;\n      return tslib_1.__generator(this, function (_a) {\n        atom = atomUpdate.atom;\n        // Skip nonexisting atoms\n        if (!this.transactions.has(atom.getAidString())) {\n          return [2 /*return*/];\n        }\n        id = atom.getAidString();\n        transaction = this.transactions.get(id);\n        transactionUpdate = {\n          action: 'DELETE',\n          aid: id,\n          transaction: transaction\n        };\n        // Update balance\n        for (tokenId in transaction.balance) {\n          // Load tokenclass from network\n          // const tokenClass = await radixTokenManager.getTokenClass(tokenId)\n          if (!(tokenId in this.balance) || !this.balance[tokenId]) {\n            this.balance[tokenId] = new bn_js_1.default(0);\n          }\n          this.balance[tokenId].isub(transaction.balance[tokenId]);\n          // Token units\n          transaction.tokenUnitsBalance[tokenId] = RadixTokenDefinition_1.RadixTokenDefinition.fromSubunitsToDecimal(transaction.balance[tokenId]);\n          if (!(tokenId in this.tokenUnitsBalance) || !this.balance[tokenId]) {\n            this.tokenUnitsBalance[tokenId] = new decimal_js_1.default(0);\n          }\n          this.tokenUnitsBalance[tokenId] = this.tokenUnitsBalance[tokenId].sub(transaction.tokenUnitsBalance[tokenId]);\n        }\n        this.transactions.delete(transactionUpdate.aid);\n        this.balanceSubject.next(this.balance);\n        this.tokenUnitsBalanceSubject.next(this.tokenUnitsBalance);\n        this.transactionSubject.next(transactionUpdate);\n        return [2 /*return*/];\n      });\n    });\n  };\n  RadixTransferAccountSystem.prototype.getAllTransactions = function () {\n    var _this = this;\n    return rxjs_1.Observable.create(function (observer) {\n      var e_2, _a;\n      try {\n        // Send all old transactions\n        for (var _b = tslib_1.__values(_this.transactions.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var transaction = _c.value;\n          var transactionUpdate = {\n            action: 'STORE',\n            aid: transaction.aid,\n            transaction: transaction\n          };\n          observer.next(transactionUpdate);\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n      // Subscribe for new ones\n      _this.transactionSubject.subscribe(observer);\n    });\n  };\n  RadixTransferAccountSystem.prototype.getUnspentConsumables = function () {\n    return this.unspentConsumables.values();\n  };\n  RadixTransferAccountSystem.prototype.getTokenUnitsBalanceUpdates = function () {\n    return this.tokenUnitsBalanceSubject.share();\n  };\n  return RadixTransferAccountSystem;\n}();\nexports.default = RadixTransferAccountSystem;","map":{"version":3,"names":["rxjs_1","require","typescript_map_1","atommodel_1","RadixDecryptionAccountSystem_1","bn_js_1","tslib_1","__importDefault","RadixTokenManager_1","decimal_js_1","RadixTokenDefinition_1","RadixTransferAccountSystem","address","name","transactions","TSMap","balance","tokenUnitsBalance","transactionSubject","Subject","unspentConsumables","spentConsumables","radixTokenManager","nativeToken","toString","default","balanceSubject","BehaviorSubject","tokenUnitsBalanceSubject","prototype","processAtomUpdate","atomUpdate","atom","containsParticle","RadixTransferrableTokensParticle","action","processStoreAtom","_a","sent","processDeleteAtom","has","getAidString","transactionUpdate","aid","transaction","fee","participants","timestamp","getTimestamp","message","unique","getParticlesOfType","RadixUniqueParticle","map","p","getRRI","processedData","decryptedData","decryptionState","RadixDecryptionState","CANNOT_DECRYPT","data","consumables","getSpunParticlesOfType","consumables_1","__values","consumables_1_1","next","done","consumable","value","spin","particle","tokenClassReference","getTokenDefinitionReference","ownedByMe","getOwner","equals","quantity","hid","getHidString","RadixSpin","DOWN","isub","getAmount","delete","set","UP","iadd","Object","keys","length","numberOfParticipants","Error","tokenId","RadixTokenDefinition","fromSubunitsToDecimal","add","id","get","sub","getAllTransactions","_this","Observable","create","observer","_b","values","_c","subscribe","getUnspentConsumables","getTokenUnitsBalanceUpdates","share"],"sources":["../../../../src/modules/account/RadixTransferAccountSystem.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}