{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\nvar AnimationFrameAction = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(AnimationFrameAction, _super);\n  function AnimationFrameAction(scheduler, work) {\n    var _this = _super.call(this, scheduler, work) || this;\n    _this.scheduler = scheduler;\n    _this.work = work;\n    return _this;\n  }\n  AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n    if (delay !== null && delay > 0) {\n      return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n    }\n    scheduler.actions.push(this);\n    return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(function () {\n      return scheduler.flush(null);\n    }));\n  };\n  AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n    if (delay !== null && delay > 0 || delay === null && this.delay > 0) {\n      return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n    }\n    if (scheduler.actions.length === 0) {\n      cancelAnimationFrame(id);\n      scheduler.scheduled = undefined;\n    }\n    return undefined;\n  };\n  return AnimationFrameAction;\n}(AsyncAction);\nexport { AnimationFrameAction };","map":{"version":3,"names":["tslib_1","AsyncAction","AnimationFrameAction","_super","__extends","scheduler","work","_this","call","prototype","requestAsyncId","id","delay","actions","push","scheduled","requestAnimationFrame","flush","recycleAsyncId","length","cancelAnimationFrame","undefined"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/radixdlt/node_modules/rxjs/src/internal/scheduler/AnimationFrameAction.ts"],"sourcesContent":["import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AnimationFrameScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(\n      () => scheduler.flush(null)));\n  }\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested animation frame and\n    // set the scheduled flag to undefined so the next AnimationFrameAction will\n    // request its own.\n    if (scheduler.actions.length === 0) {\n      cancelAnimationFrame(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n"],"mappings":";AAAA,OAAO,KAAEA,OAAA,MAAa,OAAM;AAS5B,SAAAC,WAAA;IAA6CC,oBAAA,0BAAcC,MAAA;EAEzDH,OAAA,CAAAI,SAAA,CAAAF,oBAAsB,EAAkCC,MACiB;WADzED,oBAEEA,CAAAG,SAAM,EAAAC,IAAW;IAFG,IAAAC,KAAA,GAAAJ,MAAA,CAAAK,IAAA,KAAkC,EAAAH,SAAA,EAAAC,IAAA;IAClCC,KAAA,CAAAF,SAAA,GAAmDA,SAAA;;IAExE,OAAAE,KAAA;EAES;sBAA6D,CAAAE,SAAA,CAAAC,cAAiB,aAAAL,SAAA,EAAAM,EAAA,EAAAC,KAAA;IAEtF,IAAIA,KAAK,KAAK,KAAI,GAAI;MACpBA,KAAA,GAAO;;IAGT,IAAAA,KAAS,KAAC,IAAQ,IAAIA,KAAK,GAAE;MAI7B,OAAOT,MAAU,CAAAM,SAAS,CAAAC,cAAe,CAAAF,IAAA,KAAS,EAAGH,SAAA,EAAAM,EAAA,EAAAC,KAAqB,CACxE;IACH;IACSP,SAAA,CAAAQ,OAAA,CAAAC,IAAA;IAA6D,OAAAT,SAAA,CAAAU,SAAA,KAAAV,SAAiB,CAAAU,SAAA,GAAAC,qBAAA;MAAA,OAAAX,SAAA,CAAAY,KAAA;IAAA;;sBAK7E,CAAAR,SAAA,CAAAS,cAAM,GAAc,UAACb,SAAS,EAAEM,EAAE,EAAEC,KAAK,EAAE;QACnDA,KAAA;MAIGA,KAAA,IAAS;;QAEXA,KAAA,KAAU,QAASA,KAAG,QAAUA,KAAA,kBAAAA,KAAA;MACjC,OAAAT,MAAA,CAAAM,SAAA,CAAAS,cAAA,CAAAV,IAAA,OAAAH,SAAA,EAAAM,EAAA,EAAAC,KAAA;IAED;IACD,IAAAP,SAAA,CAAAQ,OAAA,CAAAM,MAAA;MACHC,oBAAC,CAAAT,EAAA;MArC4CN,SAqC5C,CAAAU,SAAA,GAAAM,SAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}