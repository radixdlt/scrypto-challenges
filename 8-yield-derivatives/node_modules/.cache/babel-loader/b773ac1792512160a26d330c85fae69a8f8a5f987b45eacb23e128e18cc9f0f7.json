{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { internalFromArray } from '../observable/fromArray';\nimport { mergeAll } from './mergeAll';\nimport { popNumber, popScheduler } from '../util/args';\nexport function merge() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  var scheduler = popScheduler(args);\n  var concurrent = popNumber(args, Infinity);\n  args = argsOrArgArray(args);\n  return operate(function (source, subscriber) {\n    mergeAll(concurrent)(internalFromArray(__spreadArray([source], __read(args)), scheduler)).subscribe(subscriber);\n  });\n}","map":{"version":3,"names":["operate","argsOrArgArray","internalFromArray","mergeAll","popNumber","popScheduler","merge","args","_i","arguments","length","scheduler","concurrent","Infinity","source","subscriber","__spreadArray","__read","subscribe"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/rxjs/src/internal/operators/merge.ts"],"sourcesContent":["import { ObservableInput, ObservableInputTuple, OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { internalFromArray } from '../observable/fromArray';\nimport { mergeAll } from './mergeAll';\nimport { popNumber, popScheduler } from '../util/args';\n\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(\n  ...sourcesAndConcurrency: [...ObservableInputTuple<A>, number]\n): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(\n  ...sourcesAndConcurrencyAndScheduler: [...ObservableInputTuple<A>, number, SchedulerLike]\n): OperatorFunction<T, T | A[number]>;\n\nexport function merge<T>(...args: unknown[]): OperatorFunction<T, unknown> {\n  const scheduler = popScheduler(args);\n  const concurrent = popNumber(args, Infinity);\n  args = argsOrArgArray(args);\n\n  return operate((source, subscriber) => {\n    mergeAll(concurrent)(internalFromArray([source, ...(args as ObservableInput<T>[])], scheduler)).subscribe(subscriber as any);\n  });\n}\n"],"mappings":";AACA,SAASA,OAAO,QAAQ,cAAc;AACtC,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,iBAAiB,QAAQ,yBAAyB;AAC3D,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,SAAS,EAAEC,YAAY,QAAQ,cAAc;AAiBtD,OAAM,SAAUC,KAAKA,CAAA;EAAI,IAAAC,IAAA;OAAA,IAAAC,EAAA,IAAkB,EAAlBA,EAAA,GAAAC,SAAA,CAAAC,MAAkB,EAAlBF,EAAA,EAAkB;IAAlBD,IAAA,CAAAC,EAAA,IAAAC,SAAA,CAAAD,EAAA;;EACvB,IAAMG,SAAS,GAAGN,YAAY,CAACE,IAAI,CAAC;EACpC,IAAMK,UAAU,GAAGR,SAAS,CAACG,IAAI,EAAEM,QAAQ,CAAC;EAC5CN,IAAI,GAAGN,cAAc,CAACM,IAAI,CAAC;EAE3B,OAAOP,OAAO,CAAC,UAACc,MAAM,EAAEC,UAAU;IAChCZ,QAAQ,CAACS,UAAU,CAAC,CAACV,iBAAiB,CAAAc,aAAA,EAAEF,MAAM,GAAAG,MAAA,CAAMV,IAA6B,IAAGI,SAAS,CAAC,CAAC,CAACO,SAAS,CAACH,UAAiB,CAAC;EAC9H,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}