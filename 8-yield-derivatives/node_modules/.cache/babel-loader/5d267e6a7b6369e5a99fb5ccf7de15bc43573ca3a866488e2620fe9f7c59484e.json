{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IntendedUnstakeTokens = void 0;\nconst _types_1 = require(\"./_types\");\nconst account_1 = require(\"@radixdlt/account\");\nconst neverthrow_1 = require(\"neverthrow\");\nconst primitives_1 = require(\"@radixdlt/primitives\");\nconst create = (input, to_account) => {\n  var _a, _b;\n  return (0, neverthrow_1.combine)([account_1.ValidatorAddress.fromUnsafe(input.from_validator), primitives_1.Amount.fromUnsafe((_a = input.amount) !== null && _a !== void 0 ? _a : 0), primitives_1.Amount.fromUnsafe((_b = input.unstake_percentage) !== null && _b !== void 0 ? _b : 0), account_1.ResourceIdentifier.fromUnsafe(input.tokenIdentifier)]).map(resultList => {\n    const from_validator = resultList[0];\n    const amount = resultList[1];\n    const unstake_percentage = resultList[2];\n    const rri = resultList[3];\n    return {\n      from_validator: from_validator.toString(),\n      amount,\n      unstake_percentage,\n      type: _types_1.ActionType.UNSTAKE_TOKENS,\n      to_account: to_account.toString(),\n      rri\n    };\n  });\n};\nexports.IntendedUnstakeTokens = {\n  create\n};","map":{"version":3,"names":["_types_1","require","account_1","neverthrow_1","primitives_1","create","input","to_account","combine","ValidatorAddress","fromUnsafe","from_validator","Amount","_a","amount","_b","unstake_percentage","ResourceIdentifier","tokenIdentifier","map","resultList","rri","toString","type","ActionType","UNSTAKE_TOKENS","exports","IntendedUnstakeTokens"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/@radixdlt/application/src/actions/intendedUnstakeTokensAction.ts"],"sourcesContent":["import {\n\tActionType,\n\tIntendedUnstakeTokensAction,\n\tUnstakeTokensInput,\n} from './_types'\nimport {\n\tAccountAddressT,\n\tisResourceIdentifierOrUnsafeInput,\n\tisValidatorAddressOrUnsafeInput,\n\tResourceIdentifier,\n\tResourceIdentifierT,\n\tValidatorAddress,\n\tValidatorAddressT,\n} from '@radixdlt/account'\nimport { combine, Result } from 'neverthrow'\nimport { Amount, AmountT } from '@radixdlt/primitives'\n\nconst create = (\n\tinput: UnstakeTokensInput,\n\tto_account: AccountAddressT,\n): Result<IntendedUnstakeTokensAction, Error> =>\n\tcombine([\n\t\tValidatorAddress.fromUnsafe(input.from_validator),\n\t\tAmount.fromUnsafe(input.amount ?? 0),\n\t\tAmount.fromUnsafe(input.unstake_percentage ?? 0),\n\t\tResourceIdentifier.fromUnsafe(input.tokenIdentifier),\n\t]).map(\n\t\t(resultList): IntendedUnstakeTokensAction => {\n\t\t\tconst from_validator = resultList[0] as ValidatorAddressT\n\t\t\tconst amount = resultList[1] as AmountT\n\t\t\tconst unstake_percentage = resultList[2] as AmountT\n\t\t\tconst rri = resultList[3] as ResourceIdentifierT\n\n\t\t\treturn {\n\t\t\t\tfrom_validator: from_validator.toString(),\n\t\t\t\tamount,\n\t\t\t\tunstake_percentage,\n\t\t\t\ttype: ActionType.UNSTAKE_TOKENS,\n\t\t\t\tto_account: to_account.toString(),\n\t\t\t\trri,\n\t\t\t}\n\t\t},\n\t)\n\nexport const IntendedUnstakeTokens = {\n\tcreate,\n}\n"],"mappings":";;;;;;AAAA,MAAAA,QAAA,GAAAC,OAAA;AAKA,MAAAC,SAAA,GAAAD,OAAA;AASA,MAAAE,YAAA,GAAAF,OAAA;AACA,MAAAG,YAAA,GAAAH,OAAA;AAEA,MAAMI,MAAM,GAAGA,CACdC,KAAyB,EACzBC,UAA2B,KACoB;;EAC/C,WAAAJ,YAAA,CAAAK,OAAO,EAAC,CACPN,SAAA,CAAAO,gBAAgB,CAACC,UAAU,CAACJ,KAAK,CAACK,cAAc,CAAC,EACjDP,YAAA,CAAAQ,MAAM,CAACF,UAAU,CAAC,CAAAG,EAAA,GAAAP,KAAK,CAACQ,MAAM,cAAAD,EAAA,cAAAA,EAAA,GAAI,CAAC,CAAC,EACpCT,YAAA,CAAAQ,MAAM,CAACF,UAAU,CAAC,CAAAK,EAAA,GAAAT,KAAK,CAACU,kBAAkB,cAAAD,EAAA,cAAAA,EAAA,GAAI,CAAC,CAAC,EAChDb,SAAA,CAAAe,kBAAkB,CAACP,UAAU,CAACJ,KAAK,CAACY,eAAe,CAAC,CACpD,CAAC,CAACC,GAAG,CACJC,UAAU,IAAiC;IAC3C,MAAMT,cAAc,GAAGS,UAAU,CAAC,CAAC,CAAsB;IACzD,MAAMN,MAAM,GAAGM,UAAU,CAAC,CAAC,CAAY;IACvC,MAAMJ,kBAAkB,GAAGI,UAAU,CAAC,CAAC,CAAY;IACnD,MAAMC,GAAG,GAAGD,UAAU,CAAC,CAAC,CAAwB;IAEhD,OAAO;MACNT,cAAc,EAAEA,cAAc,CAACW,QAAQ,EAAE;MACzCR,MAAM;MACNE,kBAAkB;MAClBO,IAAI,EAAEvB,QAAA,CAAAwB,UAAU,CAACC,cAAc;MAC/BlB,UAAU,EAAEA,UAAU,CAACe,QAAQ,EAAE;MACjCD;KACA;EACF,CAAC,CACD;CAAA;AAEWK,OAAA,CAAAC,qBAAqB,GAAG;EACpCtB;CACA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}