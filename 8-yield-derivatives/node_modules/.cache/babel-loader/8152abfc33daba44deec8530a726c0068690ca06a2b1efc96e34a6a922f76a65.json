{"ast":null,"code":"'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending) this.pending = msg;else this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0) this.pending = null;\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32) this._update(msg, i, i + this._delta32);\n  }\n  return this;\n};\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n  return this._digest(enc);\n};\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - (len + this.padLength) % bytes;\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++) res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++) res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = len >>> 24 & 0xff;\n    res[i++] = len >>> 16 & 0xff;\n    res[i++] = len >>> 8 & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = len >>> 8 & 0xff;\n    res[i++] = len >>> 16 & 0xff;\n    res[i++] = len >>> 24 & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    for (t = 8; t < this.padLength; t++) res[i++] = 0;\n  }\n  return res;\n};","map":{"version":3,"names":["utils","require","assert","BlockHash","pending","pendingTotal","blockSize","constructor","outSize","hmacStrength","padLength","endian","_delta8","_delta32","exports","prototype","update","msg","enc","toArray","concat","length","r","slice","join32","i","_update","digest","_pad","_digest","pad","len","bytes","k","res","Array","t"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/hash.js/lib/hash/common.js"],"sourcesContent":["'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}