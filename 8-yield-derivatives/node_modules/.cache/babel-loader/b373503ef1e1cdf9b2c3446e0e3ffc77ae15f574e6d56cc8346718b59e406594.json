{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar bn_js_1 = tslib_1.__importDefault(require(\"bn.js\"));\nvar decimal_js_1 = require(\"decimal.js\");\nvar __1 = require(\"../..\");\nvar typescript_map_1 = require(\"typescript-map\");\nvar RadixTokenSupplyType;\n(function (RadixTokenSupplyType) {\n  RadixTokenSupplyType[\"FIXED\"] = \"fixed\";\n  RadixTokenSupplyType[\"MUTABLE\"] = \"mutable\";\n})(RadixTokenSupplyType = exports.RadixTokenSupplyType || (exports.RadixTokenSupplyType = {}));\nvar NonExpDecimal = decimal_js_1.Decimal.clone({\n  toExpPos: 9e15,\n  toExpNeg: -9e15\n});\nvar RadixTokenDefinition = /** @class */function () {\n  function RadixTokenDefinition(address, symbol, name, description, granularity, tokenSupplyType, totalSupply, unallocatedTokens, iconUrl) {\n    if (granularity === void 0) {\n      granularity = new bn_js_1.default(1);\n    }\n    this.totalSupply = new bn_js_1.default(0);\n    this.unallocatedTokens = new typescript_map_1.TSMap();\n    this.address = address;\n    this.symbol = symbol;\n    if (name) {\n      this.name = name;\n    }\n    if (description) {\n      this.description = description;\n    }\n    if (tokenSupplyType) {\n      this.tokenSupplyType = tokenSupplyType;\n    }\n    if (totalSupply) {\n      this.totalSupply = totalSupply;\n    }\n    if (granularity) {\n      this.granularity = new __1.RadixUInt256(granularity);\n    }\n    if (unallocatedTokens) {\n      this.unallocatedTokens = unallocatedTokens;\n    }\n    if (iconUrl) {\n      this.iconUrl = iconUrl;\n    }\n  }\n  /**\n   * Convert actual decimal token amount to integer subunits stored on the ledger\n   * @param amount\n   * @returns subunits\n   */\n  RadixTokenDefinition.fromDecimalToSubunits = function (amount) {\n    var inUnits = new NonExpDecimal(amount);\n    return new bn_js_1.default(inUnits.times(this.SUBUNITS).truncated().toString(), 10);\n  };\n  /**\n   * Convert subunits token amount to actual decimal token amount\n   * @param amount\n   * @returns token units\n   */\n  RadixTokenDefinition.fromSubunitsToDecimal = function (amount) {\n    var inSubunits = new NonExpDecimal(amount.toString(10));\n    return new decimal_js_1.Decimal(inSubunits.dividedBy(this.SUBUNITS));\n  };\n  RadixTokenDefinition.prototype.addTotalSupply = function (difference) {\n    this.totalSupply.iadd(new bn_js_1.default(difference));\n  };\n  RadixTokenDefinition.prototype.getTotalSupply = function () {\n    return this.totalSupply;\n  };\n  RadixTokenDefinition.prototype.getTokenUnitsTotalSupply = function () {\n    return RadixTokenDefinition.fromSubunitsToDecimal(this.getTotalSupply());\n  };\n  RadixTokenDefinition.prototype.getGranularity = function () {\n    return this.granularity.value;\n  };\n  RadixTokenDefinition.prototype.getTokenUnitsGranularity = function () {\n    return RadixTokenDefinition.fromSubunitsToDecimal(this.getGranularity());\n  };\n  RadixTokenDefinition.prototype.getUnallocatedTokens = function () {\n    return this.unallocatedTokens.values();\n  };\n  RadixTokenDefinition.prototype.getUnallocatedSupply = function () {\n    var e_1, _a;\n    var supply = new bn_js_1.default(0);\n    try {\n      for (var _b = tslib_1.__values(this.getUnallocatedTokens()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var unallocatedTokens = _c.value;\n        supply.iadd(unallocatedTokens.getAmount());\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    return supply;\n  };\n  // All radix tokens are store with 18 subunits\n  RadixTokenDefinition.SUBUNITS = new decimal_js_1.Decimal(10).pow(18);\n  return RadixTokenDefinition;\n}();\nexports.RadixTokenDefinition = RadixTokenDefinition;","map":{"version":3,"names":["bn_js_1","tslib_1","__importDefault","require","decimal_js_1","__1","typescript_map_1","RadixTokenSupplyType","exports","NonExpDecimal","Decimal","clone","toExpPos","toExpNeg","RadixTokenDefinition","address","symbol","name","description","granularity","tokenSupplyType","totalSupply","unallocatedTokens","iconUrl","default","TSMap","RadixUInt256","fromDecimalToSubunits","amount","inUnits","times","SUBUNITS","truncated","toString","fromSubunitsToDecimal","inSubunits","dividedBy","prototype","addTotalSupply","difference","iadd","getTotalSupply","getTokenUnitsTotalSupply","getGranularity","value","getTokenUnitsGranularity","getUnallocatedTokens","values","getUnallocatedSupply","supply","_b","__values","_c","next","done","getAmount","pow"],"sources":["../../../../src/modules/token/RadixTokenDefinition.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}