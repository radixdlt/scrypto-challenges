{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_iterator PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nexport function scheduleIterable(input, scheduler) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable(function (subscriber) {\n    var sub = new Subscription();\n    var iterator;\n    sub.add(function () {\n      if (iterator && typeof iterator.return === 'function') {\n        iterator.return();\n      }\n    });\n    sub.add(scheduler.schedule(function () {\n      iterator = input[Symbol_iterator]();\n      sub.add(scheduler.schedule(function () {\n        if (subscriber.closed) {\n          return;\n        }\n        var value;\n        var done;\n        try {\n          var result = iterator.next();\n          value = result.value;\n          done = result.done;\n        } catch (err) {\n          subscriber.error(err);\n          return;\n        }\n        if (done) {\n          subscriber.complete();\n        } else {\n          subscriber.next(value);\n          this.schedule();\n        }\n      }));\n    }));\n    return sub;\n  });\n}","map":{"version":3,"names":["Observable","Subscription","iterator","Symbol_iterator","scheduleIterable","input","scheduler","Error","subscriber","sub","add","return","schedule","closed","value","done","result","next","err","error","complete"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/radixdlt/node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts"],"sourcesContent":["import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let iterator: Iterator<T>;\n    sub.add(() => {\n      // Finalize generators\n      if (iterator && typeof iterator.return === 'function') {\n        iterator.return();\n      }\n    });\n    sub.add(scheduler.schedule(() => {\n      iterator = input[Symbol_iterator]();\n      sub.add(scheduler.schedule(function () {\n        if (subscriber.closed) {\n          return;\n        }\n        let value: T;\n        let done: boolean;\n        try {\n          const result = iterator.next();\n          value = result.value;\n          done = result.done;\n        } catch (err) {\n          subscriber.error(err);\n          return;\n        }\n        if (done) {\n          subscriber.complete();\n        } else {\n          subscriber.next(value);\n          this.schedule();\n        }\n      }));\n    }));\n    return sub;\n  });\n}\n"],"mappings":"AAAA;AAEA,SAASA,UAAA,QAAc,eAAM;AAC7B,SAASC,YAAY,yBAAuB;AAE5C,SAAMC,QAAU,IAAAC,eAAoB,QAAoB,oBAAwB;OAC9E,SAAYC,iBAAAC,KAAA,EAAAC,SAAA;MACV,CAAAD,KAAM;IACP,UAAAE,KAAA;EACD;SACE,IAASP,UAAO,WAAcQ,UAAC;IAC/B,IAAIC,GAAA,OAAsBR,YAAA;IAC1B,IAAIC,QAAI;QAENQ,GAAA,CAAI,YAAY;UACdR,QAAQ,IAAC,OAASA,QAAA,CAAAS,MAAA;QACnBT,QAAA,CAAAS,MAAA;MACA;IACH;QACED,GAAA,CAAAJ,SAAW,CAAAM,QAAM,aAAkB;MACnCV,QAAQ,GAAAG,KAAA,CAASF,eAAU;UACzBO,GAAA,CAAIJ,SAAA,CAAUM,QAAO,CAAE;YACrBJ,UAAO,CAAAK,MAAA;UACR;QACD;QACA,IAAIC,KAAc;QAClB,IAAIC,IAAA;YACF;UACA,IAAAC,MAAQ,GAAAd,QAAa,CAAAe,IAAA;UACrBH,KAAI,GAAGE,MAAO,CAAAF,KAAK;UACpBC,IAAA,GAAAC,MAAA,CAAAD,IAAA;QAAC,E,OACAG,GAAA;UACAV,UAAO,CAAAW,KAAA,CAAAD,GAAA;UACR;QACD;YACEH,IAAA;UACDP,UAAA,CAAAY,QAAA;eACC;UACAZ,UAAK,CAAAS,IAAU,CAACH,KAAA;UACjB,KAAAF,QAAA;QACC;MACF;IACJ;IACC,OAAAH,GAAA;EACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}