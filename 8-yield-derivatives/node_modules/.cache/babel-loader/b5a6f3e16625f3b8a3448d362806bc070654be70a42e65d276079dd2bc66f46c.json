{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InvalidFileSystemPathError = exports.InvalidRemoteURLError = exports.NotResolvableError = exports.NonJsonRefError = void 0;\n/**\n * Error thrown when the fetched reference is not properly formatted JSON or is encoded\n * incorrectly\n *\n * @example\n * ```typescript\n *\n * import Dereferencer, { NonJsonRefError } from \"@json-schema-tools/dereferencer\";\n * const dereffer = new Dereferencer({});\n * try { await dereffer.resolve(); }\n * catch(e) {\n *   if (e instanceof NonJsonRefError) { ... }\n * }\n * ```\n *\n */\nvar NonJsonRefError = /** @class */function () {\n  function NonJsonRefError(obj, nonJson) {\n    this.name = \"NonJsonRefError\";\n    this.message = [\"NonJsonRefError\", \"The resolved value at the reference: \".concat(obj.$ref, \" was not JSON.parse 'able\"), \"The non-json content in question: \".concat(nonJson)].join(\"\\n\");\n  }\n  return NonJsonRefError;\n}();\nexports.NonJsonRefError = NonJsonRefError;\nvar NotResolvableError = /** @class */function () {\n  function NotResolvableError(ref) {\n    this.name = \"NotResolvableError\";\n    this.message = [\"NotResolvableError\", \"Could not resolve the reference: \".concat(ref), \"No protocol handler was found, and it was not found to be an internal reference\"].join(\"\\n\");\n  }\n  return NotResolvableError;\n}();\nexports.NotResolvableError = NotResolvableError;\n/**\n * Error thrown when given an invalid file system path as a reference.\n *\n */\nvar InvalidRemoteURLError = /** @class */function () {\n  function InvalidRemoteURLError(ref) {\n    this.name = \"InvalidRemoteURLError\";\n    this.message = [\"InvalidRemoteURLError\", \"The url was not resolvable: \".concat(ref)].join(\"\\n\");\n  }\n  return InvalidRemoteURLError;\n}();\nexports.InvalidRemoteURLError = InvalidRemoteURLError;\n/**\n * Error thrown when given an invalid file system path as a reference.\n *\n * @example\n * ```typescript\n *\n * import Dereferencer, { InvalidFileSystemPathError } from \"@json-schema-tools/dereferencer\";\n * const dereffer = new Dereferencer({});\n * try { await dereffer.resolve(); }\n * catch(e) {\n *   if (e instanceof InvalidFileSystemPathError) { ... }\n * }\n * ```\n *\n */\nvar InvalidFileSystemPathError = /** @class */function () {\n  function InvalidFileSystemPathError(ref) {\n    this.name = \"InvalidFileSystemPathError\";\n    this.message = [\"InvalidFileSystemPathError\", \"The path was not resolvable: \".concat(ref)].join(\"\\n\");\n  }\n  return InvalidFileSystemPathError;\n}();\nexports.InvalidFileSystemPathError = InvalidFileSystemPathError;","map":{"version":3,"names":["Object","defineProperty","exports","value","InvalidFileSystemPathError","InvalidRemoteURLError","NotResolvableError","NonJsonRefError","obj","nonJson","name","message","concat","$ref","join","ref"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/@json-schema-tools/reference-resolver/build/errors.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InvalidFileSystemPathError = exports.InvalidRemoteURLError = exports.NotResolvableError = exports.NonJsonRefError = void 0;\n/**\n * Error thrown when the fetched reference is not properly formatted JSON or is encoded\n * incorrectly\n *\n * @example\n * ```typescript\n *\n * import Dereferencer, { NonJsonRefError } from \"@json-schema-tools/dereferencer\";\n * const dereffer = new Dereferencer({});\n * try { await dereffer.resolve(); }\n * catch(e) {\n *   if (e instanceof NonJsonRefError) { ... }\n * }\n * ```\n *\n */\nvar NonJsonRefError = /** @class */ (function () {\n    function NonJsonRefError(obj, nonJson) {\n        this.name = \"NonJsonRefError\";\n        this.message = [\n            \"NonJsonRefError\",\n            \"The resolved value at the reference: \".concat(obj.$ref, \" was not JSON.parse 'able\"),\n            \"The non-json content in question: \".concat(nonJson),\n        ].join(\"\\n\");\n    }\n    return NonJsonRefError;\n}());\nexports.NonJsonRefError = NonJsonRefError;\nvar NotResolvableError = /** @class */ (function () {\n    function NotResolvableError(ref) {\n        this.name = \"NotResolvableError\";\n        this.message = [\n            \"NotResolvableError\",\n            \"Could not resolve the reference: \".concat(ref),\n            \"No protocol handler was found, and it was not found to be an internal reference\",\n        ].join(\"\\n\");\n    }\n    return NotResolvableError;\n}());\nexports.NotResolvableError = NotResolvableError;\n/**\n * Error thrown when given an invalid file system path as a reference.\n *\n */\nvar InvalidRemoteURLError = /** @class */ (function () {\n    function InvalidRemoteURLError(ref) {\n        this.name = \"InvalidRemoteURLError\";\n        this.message = [\n            \"InvalidRemoteURLError\",\n            \"The url was not resolvable: \".concat(ref),\n        ].join(\"\\n\");\n    }\n    return InvalidRemoteURLError;\n}());\nexports.InvalidRemoteURLError = InvalidRemoteURLError;\n/**\n * Error thrown when given an invalid file system path as a reference.\n *\n * @example\n * ```typescript\n *\n * import Dereferencer, { InvalidFileSystemPathError } from \"@json-schema-tools/dereferencer\";\n * const dereffer = new Dereferencer({});\n * try { await dereffer.resolve(); }\n * catch(e) {\n *   if (e instanceof InvalidFileSystemPathError) { ... }\n * }\n * ```\n *\n */\nvar InvalidFileSystemPathError = /** @class */ (function () {\n    function InvalidFileSystemPathError(ref) {\n        this.name = \"InvalidFileSystemPathError\";\n        this.message = [\n            \"InvalidFileSystemPathError\",\n            \"The path was not resolvable: \".concat(ref),\n        ].join(\"\\n\");\n    }\n    return InvalidFileSystemPathError;\n}());\nexports.InvalidFileSystemPathError = InvalidFileSystemPathError;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,0BAA0B,GAAGF,OAAO,CAACG,qBAAqB,GAAGH,OAAO,CAACI,kBAAkB,GAAGJ,OAAO,CAACK,eAAe,GAAG,KAAK,CAAC;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,eAAe,GAAG,aAAe,YAAY;EAC7C,SAASA,eAAeA,CAACC,GAAG,EAAEC,OAAO,EAAE;IACnC,IAAI,CAACC,IAAI,GAAG,iBAAiB;IAC7B,IAAI,CAACC,OAAO,GAAG,CACX,iBAAiB,EACjB,uCAAuC,CAACC,MAAM,CAACJ,GAAG,CAACK,IAAI,EAAE,2BAA2B,CAAC,EACrF,oCAAoC,CAACD,MAAM,CAACH,OAAO,CAAC,CACvD,CAACK,IAAI,CAAC,IAAI,CAAC;EAChB;EACA,OAAOP,eAAe;AAC1B,CAAC,CAAC,CAAE;AACJL,OAAO,CAACK,eAAe,GAAGA,eAAe;AACzC,IAAID,kBAAkB,GAAG,aAAe,YAAY;EAChD,SAASA,kBAAkBA,CAACS,GAAG,EAAE;IAC7B,IAAI,CAACL,IAAI,GAAG,oBAAoB;IAChC,IAAI,CAACC,OAAO,GAAG,CACX,oBAAoB,EACpB,mCAAmC,CAACC,MAAM,CAACG,GAAG,CAAC,EAC/C,iFAAiF,CACpF,CAACD,IAAI,CAAC,IAAI,CAAC;EAChB;EACA,OAAOR,kBAAkB;AAC7B,CAAC,CAAC,CAAE;AACJJ,OAAO,CAACI,kBAAkB,GAAGA,kBAAkB;AAC/C;AACA;AACA;AACA;AACA,IAAID,qBAAqB,GAAG,aAAe,YAAY;EACnD,SAASA,qBAAqBA,CAACU,GAAG,EAAE;IAChC,IAAI,CAACL,IAAI,GAAG,uBAAuB;IACnC,IAAI,CAACC,OAAO,GAAG,CACX,uBAAuB,EACvB,8BAA8B,CAACC,MAAM,CAACG,GAAG,CAAC,CAC7C,CAACD,IAAI,CAAC,IAAI,CAAC;EAChB;EACA,OAAOT,qBAAqB;AAChC,CAAC,CAAC,CAAE;AACJH,OAAO,CAACG,qBAAqB,GAAGA,qBAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAID,0BAA0B,GAAG,aAAe,YAAY;EACxD,SAASA,0BAA0BA,CAACW,GAAG,EAAE;IACrC,IAAI,CAACL,IAAI,GAAG,4BAA4B;IACxC,IAAI,CAACC,OAAO,GAAG,CACX,4BAA4B,EAC5B,+BAA+B,CAACC,MAAM,CAACG,GAAG,CAAC,CAC9C,CAACD,IAAI,CAAC,IAAI,CAAC;EAChB;EACA,OAAOV,0BAA0B;AACrC,CAAC,CAAC,CAAE;AACJF,OAAO,CAACE,0BAA0B,GAAGA,0BAA0B","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}