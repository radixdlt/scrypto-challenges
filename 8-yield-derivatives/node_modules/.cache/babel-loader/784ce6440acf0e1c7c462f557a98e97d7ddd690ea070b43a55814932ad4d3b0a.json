{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = exports.isBytes = void 0;\nfunction number(n) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`positive integer expected, not ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n  if (typeof b !== 'boolean') throw new Error(`boolean expected, not ${b}`);\n}\nexports.bool = bool;\n// copied from utils\nfunction isBytes(a) {\n  return a instanceof Uint8Array || a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array';\n}\nexports.isBytes = isBytes;\nfunction bytes(b, ...lengths) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length)) throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(h) {\n  if (typeof h !== 'function' || typeof h.create !== 'function') throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(h.outputLen);\n  number(h.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\nexports.output = output;\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output\n};\nexports.default = assert;","map":{"version":3,"names":["number","n","Number","isSafeInteger","Error","exports","bool","b","isBytes","a","Uint8Array","constructor","name","bytes","lengths","length","includes","hash","h","create","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","output","out","min","assert","default"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/@noble/hashes/src/_assert.ts"],"sourcesContent":["function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`positive integer expected, not ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`boolean expected, not ${b}`);\n}\n\n// copied from utils\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(h: Hash) {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(h.outputLen);\n  number(h.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n"],"mappings":";;;;;;AAAA,SAASA,MAAMA,CAACC,CAAS;EACvB,IAAI,CAACC,MAAM,CAACC,aAAa,CAACF,CAAC,CAAC,IAAIA,CAAC,GAAG,CAAC,EAAE,MAAM,IAAIG,KAAK,CAAC,kCAAkCH,CAAC,EAAE,CAAC;AAC/F;AA6CSI,OAAA,CAAAL,MAAA,GAAAA,MAAA;AA3CT,SAASM,IAAIA,CAACC,CAAU;EACtB,IAAI,OAAOA,CAAC,KAAK,SAAS,EAAE,MAAM,IAAIH,KAAK,CAAC,yBAAyBG,CAAC,EAAE,CAAC;AAC3E;AAyCiBF,OAAA,CAAAC,IAAA,GAAAA,IAAA;AAvCjB;AACA,SAAgBE,OAAOA,CAACC,CAAU;EAChC,OACEA,CAAC,YAAYC,UAAU,IACtBD,CAAC,IAAI,IAAI,IAAI,OAAOA,CAAC,KAAK,QAAQ,IAAIA,CAAC,CAACE,WAAW,CAACC,IAAI,KAAK,YAAa;AAE/E;AALAP,OAAA,CAAAG,OAAA,GAAAA,OAAA;AAOA,SAASK,KAAKA,CAACN,CAAyB,EAAE,GAAGO,OAAiB;EAC5D,IAAI,CAACN,OAAO,CAACD,CAAC,CAAC,EAAE,MAAM,IAAIH,KAAK,CAAC,qBAAqB,CAAC;EACvD,IAAIU,OAAO,CAACC,MAAM,GAAG,CAAC,IAAI,CAACD,OAAO,CAACE,QAAQ,CAACT,CAAC,CAACQ,MAAM,CAAC,EACnD,MAAM,IAAIX,KAAK,CAAC,iCAAiCU,OAAO,mBAAmBP,CAAC,CAACQ,MAAM,EAAE,CAAC;AAC1F;AA2BuBV,OAAA,CAAAQ,KAAA,GAAAA,KAAA;AAnBvB,SAASI,IAAIA,CAACC,CAAO;EACnB,IAAI,OAAOA,CAAC,KAAK,UAAU,IAAI,OAAOA,CAAC,CAACC,MAAM,KAAK,UAAU,EAC3D,MAAM,IAAIf,KAAK,CAAC,iDAAiD,CAAC;EACpEJ,MAAM,CAACkB,CAAC,CAACE,SAAS,CAAC;EACnBpB,MAAM,CAACkB,CAAC,CAACG,QAAQ,CAAC;AACpB;AAc8BhB,OAAA,CAAAY,IAAA,GAAAA,IAAA;AAZ9B,SAASK,MAAMA,CAACC,QAAa,EAAEC,aAAa,GAAG,IAAI;EACjD,IAAID,QAAQ,CAACE,SAAS,EAAE,MAAM,IAAIrB,KAAK,CAAC,kCAAkC,CAAC;EAC3E,IAAIoB,aAAa,IAAID,QAAQ,CAACG,QAAQ,EAAE,MAAM,IAAItB,KAAK,CAAC,uCAAuC,CAAC;AAClG;AASoCC,OAAA,CAAAiB,MAAA,GAAAA,MAAA;AARpC,SAASK,MAAMA,CAACC,GAAQ,EAAEL,QAAa;EACrCV,KAAK,CAACe,GAAG,CAAC;EACV,MAAMC,GAAG,GAAGN,QAAQ,CAACH,SAAS;EAC9B,IAAIQ,GAAG,CAACb,MAAM,GAAGc,GAAG,EAAE;IACpB,MAAM,IAAIzB,KAAK,CAAC,yDAAyDyB,GAAG,EAAE,CAAC;EACjF;AACF;AAE4CxB,OAAA,CAAAsB,MAAA,GAAAA,MAAA;AAE5C,MAAMG,MAAM,GAAG;EAAE9B,MAAM;EAAEM,IAAI;EAAEO,KAAK;EAAEI,IAAI;EAAEK,MAAM;EAAEK;AAAM,CAAE;AAC5DtB,OAAA,CAAA0B,OAAA,GAAeD,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}