{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.arraysEqual = exports.isNumberArray = void 0;\nconst isNumberArray = test => Array.isArray(test) && test.every(value => typeof value === 'number');\nexports.isNumberArray = isNumberArray;\nconst arraysEqual = (a, b) => {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n  if (a.length !== b.length) return false;\n  for (let i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n};\nexports.arraysEqual = arraysEqual;","map":{"version":3,"names":["isNumberArray","test","Array","isArray","every","value","exports","arraysEqual","a","b","length","i"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/@radixdlt/util/src/arrays.ts"],"sourcesContent":["export const isNumberArray = (test: unknown): boolean =>\n\tArray.isArray(test) && test.every(value => typeof value === 'number')\n\nexport const arraysEqual = <T>(a: T[], b: T[]): boolean => {\n\tif (a === b) return true\n\tif (a == null || b == null) return false\n\tif (a.length !== b.length) return false\n\n\tfor (let i = 0; i < a.length; ++i) {\n\t\tif (a[i] !== b[i]) return false\n\t}\n\treturn true\n}\n"],"mappings":";;;;;;AAAO,MAAMA,aAAa,GAAIC,IAAa,IAC1CC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,IAAIA,IAAI,CAACG,KAAK,CAACC,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,CAAC;AADzDC,OAAA,CAAAN,aAAa,GAAAA,aAAA;AAGnB,MAAMO,WAAW,GAAGA,CAAIC,CAAM,EAAEC,CAAM,KAAa;EACzD,IAAID,CAAC,KAAKC,CAAC,EAAE,OAAO,IAAI;EACxB,IAAID,CAAC,IAAI,IAAI,IAAIC,CAAC,IAAI,IAAI,EAAE,OAAO,KAAK;EACxC,IAAID,CAAC,CAACE,MAAM,KAAKD,CAAC,CAACC,MAAM,EAAE,OAAO,KAAK;EAEvC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,CAAC,CAACE,MAAM,EAAE,EAAEC,CAAC,EAAE;IAClC,IAAIH,CAAC,CAACG,CAAC,CAAC,KAAKF,CAAC,CAACE,CAAC,CAAC,EAAE,OAAO,KAAK;;EAEhC,OAAO,IAAI;AACZ,CAAC;AATYL,OAAA,CAAAC,WAAW,GAAAA,WAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}