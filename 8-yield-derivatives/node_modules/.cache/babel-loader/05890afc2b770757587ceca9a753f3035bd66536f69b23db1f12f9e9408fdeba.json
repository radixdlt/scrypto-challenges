{"ast":null,"code":"/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _assertArgs = _interopRequireDefault(require(\"assert-args\"));\nvar _eventemitter = _interopRequireDefault(require(\"eventemitter3\"));\nvar _circularJson = _interopRequireDefault(require(\"circular-json\"));\nvar _default = function _default(WebSocket) {\n  return /*#__PURE__*/(\n    function (_EventEmitter) {\n      (0, _inherits2[\"default\"])(Client, _EventEmitter);\n\n      /**\n       * Instantiate a Client class.\n       * @constructor\n       * @param {String} address - url to a websocket server\n       * @param {Object} options - ws options object with reconnect parameters\n       * @param {Function} generate_request_id - custom generation request Id\n       * @return {Client}\n       */\n      function Client() {\n        var _this;\n        var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ws://localhost:8080\";\n        var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref$autoconnect = _ref.autoconnect,\n          autoconnect = _ref$autoconnect === void 0 ? true : _ref$autoconnect,\n          _ref$reconnect = _ref.reconnect,\n          reconnect = _ref$reconnect === void 0 ? true : _ref$reconnect,\n          _ref$reconnect_interv = _ref.reconnect_interval,\n          reconnect_interval = _ref$reconnect_interv === void 0 ? 1000 : _ref$reconnect_interv,\n          _ref$max_reconnects = _ref.max_reconnects,\n          max_reconnects = _ref$max_reconnects === void 0 ? 5 : _ref$max_reconnects;\n        var generate_request_id = arguments.length > 2 ? arguments[2] : undefined;\n        (0, _classCallCheck2[\"default\"])(this, Client);\n        _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(Client).call(this));\n        _this.queue = {};\n        _this.rpc_id = 0;\n        _this.address = address;\n        _this.options = arguments[1];\n        _this.autoconnect = autoconnect;\n        _this.ready = false;\n        _this.reconnect = reconnect;\n        _this.reconnect_interval = reconnect_interval;\n        _this.max_reconnects = max_reconnects;\n        _this.current_reconnects = 0;\n        _this.generate_request_id = generate_request_id || function () {\n          return ++_this.rpc_id;\n        };\n        if (_this.autoconnect) _this._connect(_this.address, _this.options);\n        return _this;\n      }\n      /**\n       * Connects to a defined server if not connected already.\n       * @method\n       * @return {Undefined}\n       */\n\n      (0, _createClass2[\"default\"])(Client, [{\n        key: \"connect\",\n        value: function connect() {\n          if (this.socket) return;\n          this._connect(this.address, this.options);\n        }\n        /**\n         * Calls a registered RPC method on server.\n         * @method\n         * @param {String} method - RPC method name\n         * @param {Object|Array} params - optional method parameters\n         * @param {Number} timeout - RPC reply timeout value\n         * @param {Object} ws_opts - options passed to ws\n         * @return {Promise}\n         */\n      }, {\n        key: \"call\",\n        value: function call(method, params, timeout, ws_opts) {\n          var _this2 = this;\n          (0, _assertArgs[\"default\"])(arguments, {\n            \"method\": \"string\",\n            \"[params]\": [\"object\", Array],\n            \"[timeout]\": \"number\",\n            \"[ws_opts]\": \"object\"\n          });\n          if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n            ws_opts = timeout;\n            timeout = null;\n          }\n          return new Promise(function (resolve, reject) {\n            if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n            var rpc_id = _this2.generate_request_id(method, params);\n            var message = {\n              jsonrpc: \"2.0\",\n              method: method,\n              params: params || null,\n              id: rpc_id\n            };\n            _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n              if (error) return reject(error);\n              _this2.queue[rpc_id] = {\n                promise: [resolve, reject]\n              };\n              if (timeout) {\n                _this2.queue[rpc_id].timeout = setTimeout(function () {\n                  _this2.queue[rpc_id] = null;\n                  reject(new Error(\"reply timeout\"));\n                }, timeout);\n              }\n            });\n          });\n        }\n        /**\n         * Logins with the other side of the connection.\n         * @method\n         * @param {Object} params - Login credentials object\n         * @return {Promise}\n         */\n      }, {\n        key: \"login\",\n        value: function () {\n          var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/\n          _regenerator[\"default\"].mark(function _callee(params) {\n            return _regenerator[\"default\"].wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return this.call(\"rpc.login\", params);\n                  case 2:\n                    return _context.abrupt(\"return\", _context.sent);\n                  case 3:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n          function login(_x) {\n            return _login.apply(this, arguments);\n          }\n          return login;\n        }()\n        /**\n         * Fetches a list of client's methods registered on server.\n         * @method\n         * @return {Array}\n         */\n      }, {\n        key: \"listMethods\",\n        value: function () {\n          var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/\n          _regenerator[\"default\"].mark(function _callee2() {\n            return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return this.call(\"__listMethods\");\n                  case 2:\n                    return _context2.abrupt(\"return\", _context2.sent);\n                  case 3:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2, this);\n          }));\n          function listMethods() {\n            return _listMethods.apply(this, arguments);\n          }\n          return listMethods;\n        }()\n        /**\n         * Sends a JSON-RPC 2.0 notification to server.\n         * @method\n         * @param {String} method - RPC method name\n         * @param {Object} params - optional method parameters\n         * @return {Promise}\n         */\n      }, {\n        key: \"notify\",\n        value: function notify(method, params) {\n          var _this3 = this;\n          (0, _assertArgs[\"default\"])(arguments, {\n            \"method\": \"string\",\n            \"[params]\": [\"object\", Array]\n          });\n          return new Promise(function (resolve, reject) {\n            if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n            var message = {\n              jsonrpc: \"2.0\",\n              method: method,\n              params: params || null\n            };\n            _this3.socket.send(JSON.stringify(message), function (error) {\n              if (error) return reject(error);\n              resolve();\n            });\n          });\n        }\n        /**\n         * Subscribes for a defined event.\n         * @method\n         * @param {String|Array} event - event name\n         * @return {Undefined}\n         * @throws {Error}\n         */\n      }, {\n        key: \"subscribe\",\n        value: function () {\n          var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/\n          _regenerator[\"default\"].mark(function _callee3(event) {\n            var result,\n              _args3 = arguments;\n            return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    (0, _assertArgs[\"default\"])(_args3, {\n                      event: [\"string\", Array]\n                    });\n                    if (typeof event === \"string\") event = [event];\n                    _context3.next = 4;\n                    return this.call(\"rpc.on\", event);\n                  case 4:\n                    result = _context3.sent;\n                    if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                      _context3.next = 7;\n                      break;\n                    }\n                    throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n                  case 7:\n                    return _context3.abrupt(\"return\", result);\n                  case 8:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3, this);\n          }));\n          function subscribe(_x2) {\n            return _subscribe.apply(this, arguments);\n          }\n          return subscribe;\n        }()\n        /**\n         * Unsubscribes from a defined event.\n         * @method\n         * @param {String} event - event name\n         * @return {Undefined}\n         * @throws {Error}\n         */\n      }, {\n        key: \"unsubscribe\",\n        value: function () {\n          var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/\n          _regenerator[\"default\"].mark(function _callee4(event) {\n            var result,\n              _args4 = arguments;\n            return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    (0, _assertArgs[\"default\"])(_args4, {\n                      event: [\"string\", Array]\n                    });\n                    if (typeof event === \"string\") event = [event];\n                    _context4.next = 4;\n                    return this.call(\"rpc.off\", event);\n                  case 4:\n                    result = _context4.sent;\n                    if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                      _context4.next = 7;\n                      break;\n                    }\n                    throw new Error(\"Failed unsubscribing from an event with: \" + result);\n                  case 7:\n                    return _context4.abrupt(\"return\", result);\n                  case 8:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _callee4, this);\n          }));\n          function unsubscribe(_x3) {\n            return _unsubscribe.apply(this, arguments);\n          }\n          return unsubscribe;\n        }()\n        /**\n         * Closes a WebSocket connection gracefully.\n         * @method\n         * @param {Number} code - socket close code\n         * @param {String} data - optional data to be sent before closing\n         * @return {Undefined}\n         */\n      }, {\n        key: \"close\",\n        value: function close(code, data) {\n          this.socket.close(code || 1000, data);\n        }\n        /**\n         * Connection/Message handler.\n         * @method\n         * @private\n         * @param {String} address - WebSocket API address\n         * @param {Object} options - ws options object\n         * @return {Undefined}\n         */\n      }, {\n        key: \"_connect\",\n        value: function _connect(address, options) {\n          var _this4 = this;\n          this.socket = new WebSocket(address, options);\n          this.socket.on(\"open\", function () {\n            _this4.ready = true;\n            _this4.emit(\"open\");\n            _this4.current_reconnects = 0;\n          });\n          this.socket.on(\"message\", function (message) {\n            if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n            try {\n              message = _circularJson[\"default\"].parse(message);\n            } catch (error) {\n              return;\n            } // check if any listeners are attached and forward event\n\n            if (message.notification && _this4.listeners(message.notification).length) {\n              if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n              var args = [message.notification];\n              if (message.params.constructor === Object) args.push(message.params);else\n                // using for-loop instead of unshift/spread because performance is better\n                for (var i = 0; i < message.params.length; i++) {\n                  args.push(message.params[i]);\n                }\n              return _this4.emit.apply(_this4, args);\n            }\n            if (!_this4.queue[message.id]) {\n              // general JSON RPC 2.0 events\n              if (message.method && message.params) return _this4.emit(message.method, message.params);else return;\n            }\n            if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n            if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n            _this4.queue[message.id] = null;\n          });\n          this.socket.on(\"error\", function (error) {\n            return _this4.emit(\"error\", error);\n          });\n          this.socket.on(\"close\", function (code, message) {\n            if (_this4.ready) _this4.emit(\"close\", code, message);\n            _this4.ready = false;\n            if (code === 1000) return;\n            _this4.current_reconnects++;\n            if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) setTimeout(function () {\n              return _this4._connect(address, options);\n            }, _this4.reconnect_interval);\n          });\n        }\n      }]);\n      return Client;\n    }(_eventemitter[\"default\"])\n  );\n};\nexports[\"default\"] = _default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_regenerator","_asyncToGenerator2","_typeof2","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_assertArgs","_eventemitter","_circularJson","_default","WebSocket","_EventEmitter","Client","_this","address","arguments","length","undefined","_ref","_ref$autoconnect","autoconnect","_ref$reconnect","reconnect","_ref$reconnect_interv","reconnect_interval","_ref$max_reconnects","max_reconnects","generate_request_id","call","queue","rpc_id","options","ready","current_reconnects","_connect","key","connect","socket","method","params","timeout","ws_opts","_this2","Array","Promise","resolve","reject","Error","message","jsonrpc","id","send","JSON","stringify","error","promise","setTimeout","_login","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","sent","stop","login","_x","apply","_listMethods","_callee2","_callee2$","_context2","listMethods","notify","_this3","_subscribe","_callee3","event","result","_args3","_callee3$","_context3","subscribe","_x2","_unsubscribe","_callee4","_args4","_callee4$","_context4","unsubscribe","_x3","close","code","data","_this4","on","emit","ArrayBuffer","Buffer","from","toString","parse","notification","listeners","keys","args","constructor","push","i","clearTimeout"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/rpc-websockets/dist/lib/client.js"],"sourcesContent":["/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _assertArgs = _interopRequireDefault(require(\"assert-args\"));\n\nvar _eventemitter = _interopRequireDefault(require(\"eventemitter3\"));\n\nvar _circularJson = _interopRequireDefault(require(\"circular-json\"));\n\nvar _default = function _default(WebSocket) {\n  return (\n    /*#__PURE__*/\n    function (_EventEmitter) {\n      (0, _inherits2[\"default\"])(Client, _EventEmitter);\n\n      /**\n       * Instantiate a Client class.\n       * @constructor\n       * @param {String} address - url to a websocket server\n       * @param {Object} options - ws options object with reconnect parameters\n       * @param {Function} generate_request_id - custom generation request Id\n       * @return {Client}\n       */\n      function Client() {\n        var _this;\n\n        var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ws://localhost:8080\";\n\n        var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n            _ref$autoconnect = _ref.autoconnect,\n            autoconnect = _ref$autoconnect === void 0 ? true : _ref$autoconnect,\n            _ref$reconnect = _ref.reconnect,\n            reconnect = _ref$reconnect === void 0 ? true : _ref$reconnect,\n            _ref$reconnect_interv = _ref.reconnect_interval,\n            reconnect_interval = _ref$reconnect_interv === void 0 ? 1000 : _ref$reconnect_interv,\n            _ref$max_reconnects = _ref.max_reconnects,\n            max_reconnects = _ref$max_reconnects === void 0 ? 5 : _ref$max_reconnects;\n\n        var generate_request_id = arguments.length > 2 ? arguments[2] : undefined;\n        (0, _classCallCheck2[\"default\"])(this, Client);\n        _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(Client).call(this));\n        _this.queue = {};\n        _this.rpc_id = 0;\n        _this.address = address;\n        _this.options = arguments[1];\n        _this.autoconnect = autoconnect;\n        _this.ready = false;\n        _this.reconnect = reconnect;\n        _this.reconnect_interval = reconnect_interval;\n        _this.max_reconnects = max_reconnects;\n        _this.current_reconnects = 0;\n\n        _this.generate_request_id = generate_request_id || function () {\n          return ++_this.rpc_id;\n        };\n\n        if (_this.autoconnect) _this._connect(_this.address, _this.options);\n        return _this;\n      }\n      /**\n       * Connects to a defined server if not connected already.\n       * @method\n       * @return {Undefined}\n       */\n\n\n      (0, _createClass2[\"default\"])(Client, [{\n        key: \"connect\",\n        value: function connect() {\n          if (this.socket) return;\n\n          this._connect(this.address, this.options);\n        }\n        /**\n         * Calls a registered RPC method on server.\n         * @method\n         * @param {String} method - RPC method name\n         * @param {Object|Array} params - optional method parameters\n         * @param {Number} timeout - RPC reply timeout value\n         * @param {Object} ws_opts - options passed to ws\n         * @return {Promise}\n         */\n\n      }, {\n        key: \"call\",\n        value: function call(method, params, timeout, ws_opts) {\n          var _this2 = this;\n\n          (0, _assertArgs[\"default\"])(arguments, {\n            \"method\": \"string\",\n            \"[params]\": [\"object\", Array],\n            \"[timeout]\": \"number\",\n            \"[ws_opts]\": \"object\"\n          });\n\n          if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n            ws_opts = timeout;\n            timeout = null;\n          }\n\n          return new Promise(function (resolve, reject) {\n            if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n            var rpc_id = _this2.generate_request_id(method, params);\n\n            var message = {\n              jsonrpc: \"2.0\",\n              method: method,\n              params: params || null,\n              id: rpc_id\n            };\n\n            _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n              if (error) return reject(error);\n              _this2.queue[rpc_id] = {\n                promise: [resolve, reject]\n              };\n\n              if (timeout) {\n                _this2.queue[rpc_id].timeout = setTimeout(function () {\n                  _this2.queue[rpc_id] = null;\n                  reject(new Error(\"reply timeout\"));\n                }, timeout);\n              }\n            });\n          });\n        }\n        /**\n         * Logins with the other side of the connection.\n         * @method\n         * @param {Object} params - Login credentials object\n         * @return {Promise}\n         */\n\n      }, {\n        key: \"login\",\n        value: function () {\n          var _login = (0, _asyncToGenerator2[\"default\"])(\n          /*#__PURE__*/\n          _regenerator[\"default\"].mark(function _callee(params) {\n            return _regenerator[\"default\"].wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return this.call(\"rpc.login\", params);\n\n                  case 2:\n                    return _context.abrupt(\"return\", _context.sent);\n\n                  case 3:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n\n          function login(_x) {\n            return _login.apply(this, arguments);\n          }\n\n          return login;\n        }()\n        /**\n         * Fetches a list of client's methods registered on server.\n         * @method\n         * @return {Array}\n         */\n\n      }, {\n        key: \"listMethods\",\n        value: function () {\n          var _listMethods = (0, _asyncToGenerator2[\"default\"])(\n          /*#__PURE__*/\n          _regenerator[\"default\"].mark(function _callee2() {\n            return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return this.call(\"__listMethods\");\n\n                  case 2:\n                    return _context2.abrupt(\"return\", _context2.sent);\n\n                  case 3:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2, this);\n          }));\n\n          function listMethods() {\n            return _listMethods.apply(this, arguments);\n          }\n\n          return listMethods;\n        }()\n        /**\n         * Sends a JSON-RPC 2.0 notification to server.\n         * @method\n         * @param {String} method - RPC method name\n         * @param {Object} params - optional method parameters\n         * @return {Promise}\n         */\n\n      }, {\n        key: \"notify\",\n        value: function notify(method, params) {\n          var _this3 = this;\n\n          (0, _assertArgs[\"default\"])(arguments, {\n            \"method\": \"string\",\n            \"[params]\": [\"object\", Array]\n          });\n          return new Promise(function (resolve, reject) {\n            if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n            var message = {\n              jsonrpc: \"2.0\",\n              method: method,\n              params: params || null\n            };\n\n            _this3.socket.send(JSON.stringify(message), function (error) {\n              if (error) return reject(error);\n              resolve();\n            });\n          });\n        }\n        /**\n         * Subscribes for a defined event.\n         * @method\n         * @param {String|Array} event - event name\n         * @return {Undefined}\n         * @throws {Error}\n         */\n\n      }, {\n        key: \"subscribe\",\n        value: function () {\n          var _subscribe = (0, _asyncToGenerator2[\"default\"])(\n          /*#__PURE__*/\n          _regenerator[\"default\"].mark(function _callee3(event) {\n            var result,\n                _args3 = arguments;\n            return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    (0, _assertArgs[\"default\"])(_args3, {\n                      event: [\"string\", Array]\n                    });\n                    if (typeof event === \"string\") event = [event];\n                    _context3.next = 4;\n                    return this.call(\"rpc.on\", event);\n\n                  case 4:\n                    result = _context3.sent;\n\n                    if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                      _context3.next = 7;\n                      break;\n                    }\n\n                    throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n                  case 7:\n                    return _context3.abrupt(\"return\", result);\n\n                  case 8:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3, this);\n          }));\n\n          function subscribe(_x2) {\n            return _subscribe.apply(this, arguments);\n          }\n\n          return subscribe;\n        }()\n        /**\n         * Unsubscribes from a defined event.\n         * @method\n         * @param {String} event - event name\n         * @return {Undefined}\n         * @throws {Error}\n         */\n\n      }, {\n        key: \"unsubscribe\",\n        value: function () {\n          var _unsubscribe = (0, _asyncToGenerator2[\"default\"])(\n          /*#__PURE__*/\n          _regenerator[\"default\"].mark(function _callee4(event) {\n            var result,\n                _args4 = arguments;\n            return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    (0, _assertArgs[\"default\"])(_args4, {\n                      event: [\"string\", Array]\n                    });\n                    if (typeof event === \"string\") event = [event];\n                    _context4.next = 4;\n                    return this.call(\"rpc.off\", event);\n\n                  case 4:\n                    result = _context4.sent;\n\n                    if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                      _context4.next = 7;\n                      break;\n                    }\n\n                    throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n                  case 7:\n                    return _context4.abrupt(\"return\", result);\n\n                  case 8:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _callee4, this);\n          }));\n\n          function unsubscribe(_x3) {\n            return _unsubscribe.apply(this, arguments);\n          }\n\n          return unsubscribe;\n        }()\n        /**\n         * Closes a WebSocket connection gracefully.\n         * @method\n         * @param {Number} code - socket close code\n         * @param {String} data - optional data to be sent before closing\n         * @return {Undefined}\n         */\n\n      }, {\n        key: \"close\",\n        value: function close(code, data) {\n          this.socket.close(code || 1000, data);\n        }\n        /**\n         * Connection/Message handler.\n         * @method\n         * @private\n         * @param {String} address - WebSocket API address\n         * @param {Object} options - ws options object\n         * @return {Undefined}\n         */\n\n      }, {\n        key: \"_connect\",\n        value: function _connect(address, options) {\n          var _this4 = this;\n\n          this.socket = new WebSocket(address, options);\n          this.socket.on(\"open\", function () {\n            _this4.ready = true;\n\n            _this4.emit(\"open\");\n\n            _this4.current_reconnects = 0;\n          });\n          this.socket.on(\"message\", function (message) {\n            if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n            try {\n              message = _circularJson[\"default\"].parse(message);\n            } catch (error) {\n              return;\n            } // check if any listeners are attached and forward event\n\n\n            if (message.notification && _this4.listeners(message.notification).length) {\n              if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n              var args = [message.notification];\n              if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n                for (var i = 0; i < message.params.length; i++) {\n                  args.push(message.params[i]);\n                }\n              return _this4.emit.apply(_this4, args);\n            }\n\n            if (!_this4.queue[message.id]) {\n              // general JSON RPC 2.0 events\n              if (message.method && message.params) return _this4.emit(message.method, message.params);else return;\n            }\n\n            if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n            if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n            _this4.queue[message.id] = null;\n          });\n          this.socket.on(\"error\", function (error) {\n            return _this4.emit(\"error\", error);\n          });\n          this.socket.on(\"close\", function (code, message) {\n            if (_this4.ready) _this4.emit(\"close\", code, message);\n            _this4.ready = false;\n            if (code === 1000) return;\n            _this4.current_reconnects++;\n            if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) setTimeout(function () {\n              return _this4._connect(address, options);\n            }, _this4.reconnect_interval);\n          });\n        }\n      }]);\n      return Client;\n    }(_eventemitter[\"default\"])\n  );\n};\n\nexports[\"default\"] = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}