{"ast":null,"code":"'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\nfunction EC(options) {\n  if (!(this instanceof EC)) return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options), 'Unknown curve ' + options);\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve) options = {\n    curve: options\n  };\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options) options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray()\n  });\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0) continue;\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0) msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0) return msg.sub(this.n);else return msg;\n};\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options) options = {};\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8'\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n  for (var iter = 0;; iter++) {\n    var k = options.k ? options.k(iter) : new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) continue;\n    var kp = this.g.mul(k);\n    if (kp.isInfinity()) continue;\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0) continue;\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0) continue;\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n    return new Signature({\n      r: r,\n      s: s,\n      recoveryParam: recoveryParam\n    });\n  }\n};\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity()) return false;\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity()) return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\nEC.prototype.recoverPubKey = function (msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey) r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);else r = this.curve.pointFromX(r, isYOdd);\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\nEC.prototype.getKeyRecoveryParam = function (e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null) return signature.recoveryParam;\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n    if (Qprime.eq(Q)) return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};","map":{"version":3,"names":["BN","require","HmacDRBG","utils","curves","rand","assert","KeyPair","Signature","EC","options","Object","prototype","hasOwnProperty","call","PresetCurve","curve","n","nh","ushrn","g","precompute","bitLength","hash","module","exports","keyPair","keyFromPrivate","priv","enc","fromPrivate","keyFromPublic","pub","fromPublic","genKeyPair","drbg","pers","persEnc","entropy","hmacStrength","entropyEnc","nonce","toArray","bytes","byteLength","ns2","sub","generate","cmp","iaddn","_truncateToN","msg","truncOnly","delta","sign","key","bkey","getPrivate","ns1","iter","k","cmpn","kp","mul","isInfinity","kpX","getX","r","umod","s","invm","iadd","recoveryParam","getY","isOdd","canonical","verify","signature","sinv","u1","u2","p","_maxwellTrick","mulAdd","getPublic","jmulAdd","eqXToP","recoverPubKey","j","e","isYOdd","isSecondKey","Error","pointFromX","add","rInv","s1","s2","getKeyRecoveryParam","Q","i","Qprime","eq"],"sources":["/Users/mdabdurrazzak/RadInsu/node_modules/elliptic/lib/elliptic/ec/index.js"],"sourcesContent":["'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}