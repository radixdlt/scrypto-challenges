import { RadixParticle, RadixAddress, RadixFungibleType, RadixUInt256, RRI, RadixOwnable, RadixFungible, RadixConsumable, RadixTokenPermissions } from '../..';
import BN from 'bn.js';
/**
 *  A particle which represents an amount of unallocated tokens which can be minted.
 */
export declare class RadixUnallocatedTokensParticle extends RadixParticle implements RadixOwnable, RadixFungible, RadixConsumable {
    tokenDefinitionReference: RRI;
    granularity: RadixUInt256;
    nonce: number;
    amount: RadixUInt256;
    permissions: RadixTokenPermissions;
    constructor(amount: BN, granularity: BN, nonce: number, tokenReference: RRI, tokenPermissions: RadixTokenPermissions);
    getAddress(): RadixAddress;
    getAddresses(): RadixAddress[];
    getType(): RadixFungibleType;
    getNonce(): number;
    getTokenDefinitionReference(): RRI;
    getOwner(): RadixAddress;
    getAmount(): BN;
    getGranularity(): BN;
    getTokenPermissions(): RadixTokenPermissions;
}
