import BN from 'bn.js';
import { RadixParticle, RadixFungibleType, RadixAddress, RadixUInt256, RadixOwnable, RRI } from '../..';
export declare enum RadixTokenPermissionsValues {
    TOKEN_CREATION_ONLY = "token_creation_only",
    TOKEN_OWNER_ONLY = "token_owner_only",
    ALL = "all",
    NONE = "none"
}
export interface RadixTokenPermissions {
    mint: RadixTokenPermissionsValues;
    burn: RadixTokenPermissionsValues;
}
/**
 * Particle defining a token
 */
export declare class RadixTokenDefinitionParticle extends RadixParticle implements RadixOwnable {
    name: string;
    symbol: string;
    description: string;
    granularity: RadixUInt256;
    permissions: RadixTokenPermissions;
    address: RadixAddress;
    iconUrl: string;
    constructor(address: RadixAddress, name: string, symbol: string, description: string, granularity: BN, iconUrl: string, permissions: RadixTokenPermissions);
    getAddresses(): RadixAddress[];
    getPermissions(action: RadixFungibleType): any;
    getGranularity(): BN;
    getOwner(): RadixAddress;
    getRRI(): RRI;
    getTokenDefinitionReference(): RRI;
    getIconUrl(): string;
}
