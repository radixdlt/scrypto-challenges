import * as tslib_1 from "tslib";
import BN from 'bn.js';
import { includeDSON, includeJSON, RadixParticle, RadixSerializer, RadixFungibleType, RadixAddress, RadixUInt256, RRI, } from '../..';
export var RadixTokenPermissionsValues;
(function (RadixTokenPermissionsValues) {
    RadixTokenPermissionsValues["TOKEN_CREATION_ONLY"] = "token_creation_only";
    RadixTokenPermissionsValues["TOKEN_OWNER_ONLY"] = "token_owner_only";
    RadixTokenPermissionsValues["ALL"] = "all";
    RadixTokenPermissionsValues["NONE"] = "none";
})(RadixTokenPermissionsValues || (RadixTokenPermissionsValues = {}));
/**
 * Particle defining a token
 */
let RadixTokenDefinitionParticle = class RadixTokenDefinitionParticle extends RadixParticle {
    constructor(address, name, symbol, description, granularity, iconUrl, permissions) {
        super();
        this.address = address;
        this.name = name;
        this.symbol = symbol;
        this.description = description;
        this.granularity = new RadixUInt256(granularity);
        this.iconUrl = iconUrl;
        this.permissions = permissions;
    }
    getAddresses() {
        return [this.address];
    }
    getPermissions(action) {
        // Hack because it's 'mint' in permissions but 'minted' in OwnedTokensParticle
        return this.permissions[RadixFungibleType[action].toLowerCase()];
    }
    getGranularity() {
        return this.granularity.value;
    }
    getOwner() {
        return this.address;
    }
    getRRI() {
        return new RRI(this.address, this.symbol);
    }
    getTokenDefinitionReference() {
        return this.getRRI();
    }
    getIconUrl() {
        return this.iconUrl;
    }
};
tslib_1.__decorate([
    includeDSON,
    includeJSON,
    tslib_1.__metadata("design:type", String)
], RadixTokenDefinitionParticle.prototype, "name", void 0);
tslib_1.__decorate([
    includeDSON,
    includeJSON,
    tslib_1.__metadata("design:type", String)
], RadixTokenDefinitionParticle.prototype, "symbol", void 0);
tslib_1.__decorate([
    includeDSON,
    includeJSON,
    tslib_1.__metadata("design:type", String)
], RadixTokenDefinitionParticle.prototype, "description", void 0);
tslib_1.__decorate([
    includeDSON,
    includeJSON,
    tslib_1.__metadata("design:type", RadixUInt256)
], RadixTokenDefinitionParticle.prototype, "granularity", void 0);
tslib_1.__decorate([
    includeDSON,
    includeJSON,
    tslib_1.__metadata("design:type", Object)
], RadixTokenDefinitionParticle.prototype, "permissions", void 0);
tslib_1.__decorate([
    includeDSON,
    includeJSON,
    tslib_1.__metadata("design:type", RadixAddress)
], RadixTokenDefinitionParticle.prototype, "address", void 0);
tslib_1.__decorate([
    includeDSON,
    includeJSON,
    tslib_1.__metadata("design:type", String)
], RadixTokenDefinitionParticle.prototype, "iconUrl", void 0);
RadixTokenDefinitionParticle = tslib_1.__decorate([
    RadixSerializer.registerClass('radix.particles.token_definition'),
    tslib_1.__metadata("design:paramtypes", [RadixAddress, String, String, String, BN, String, Object])
], RadixTokenDefinitionParticle);
export { RadixTokenDefinitionParticle };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmFkaXhUb2tlbkRlZmluaXRpb25QYXJ0aWNsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9tb2R1bGVzL2F0b21tb2RlbC9wYXJ0aWNsZXMvdG9rZW5zL1JhZGl4VG9rZW5EZWZpbml0aW9uUGFydGljbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxNQUFNLE9BQU8sQ0FBQTtBQUl0QixPQUFPLEVBQ0gsV0FBVyxFQUNYLFdBQVcsRUFDWCxhQUFhLEVBQ2IsZUFBZSxFQUNmLGlCQUFpQixFQUNqQixZQUFZLEVBQ1osWUFBWSxFQUVaLEdBQUcsR0FDTixNQUFNLE9BQU8sQ0FBQTtBQUVkLE1BQU0sQ0FBTixJQUFZLDJCQUtYO0FBTEQsV0FBWSwyQkFBMkI7SUFDbkMsMEVBQTJDLENBQUE7SUFDM0Msb0VBQXFDLENBQUE7SUFDckMsMENBQVcsQ0FBQTtJQUNYLDRDQUFhLENBQUE7QUFDakIsQ0FBQyxFQUxXLDJCQUEyQixLQUEzQiwyQkFBMkIsUUFLdEM7QUFPRDs7R0FFRztBQUVILElBQWEsNEJBQTRCLEdBQXpDLE1BQWEsNEJBQTZCLFNBQVEsYUFBYTtJQThCM0QsWUFDSSxPQUFxQixFQUNyQixJQUFZLEVBQ1osTUFBYyxFQUNkLFdBQW1CLEVBQ25CLFdBQWUsRUFDZixPQUFlLEVBQ2YsV0FBa0M7UUFFbEMsS0FBSyxFQUFFLENBQUE7UUFFUCxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQTtRQUN0QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQTtRQUNoQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQTtRQUNwQixJQUFJLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQTtRQUM5QixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksWUFBWSxDQUFDLFdBQVcsQ0FBQyxDQUFBO1FBQ2hELElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFBO1FBQ3RCLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFBO0lBQ2xDLENBQUM7SUFFTSxZQUFZO1FBQ2YsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQTtJQUN6QixDQUFDO0lBRU0sY0FBYyxDQUFDLE1BQXlCO1FBQzNDLDhFQUE4RTtRQUM5RSxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsaUJBQWlCLENBQUUsTUFBNEIsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUE7SUFDM0YsQ0FBQztJQUVNLGNBQWM7UUFDakIsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQTtJQUNqQyxDQUFDO0lBRU0sUUFBUTtRQUNYLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQTtJQUN2QixDQUFDO0lBRU0sTUFBTTtRQUNULE9BQU8sSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUE7SUFDN0MsQ0FBQztJQUVNLDJCQUEyQjtRQUM5QixPQUFPLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQTtJQUN4QixDQUFDO0lBRU0sVUFBVTtRQUNiLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQTtJQUN2QixDQUFDO0NBQ0osQ0FBQTtBQTFFRztJQUZDLFdBQVc7SUFDWCxXQUFXOzswREFDTztBQUluQjtJQUZDLFdBQVc7SUFDWCxXQUFXOzs0REFDUztBQUlyQjtJQUZDLFdBQVc7SUFDWCxXQUFXOztpRUFDYztBQUkxQjtJQUZDLFdBQVc7SUFDWCxXQUFXO3NDQUNRLFlBQVk7aUVBQUE7QUFJaEM7SUFGQyxXQUFXO0lBQ1gsV0FBVzs7aUVBQzZCO0FBSXpDO0lBRkMsV0FBVztJQUNYLFdBQVc7c0NBQ0ksWUFBWTs2REFBQTtBQUk1QjtJQUZDLFdBQVc7SUFDWCxXQUFXOzs2REFDVTtBQTVCYiw0QkFBNEI7SUFEeEMsZUFBZSxDQUFDLGFBQWEsQ0FBQyxrQ0FBa0MsQ0FBQzs2Q0FnQ2pELFlBQVksMEJBSVIsRUFBRTtHQW5DViw0QkFBNEIsQ0E4RXhDO1NBOUVZLDRCQUE0QiJ9