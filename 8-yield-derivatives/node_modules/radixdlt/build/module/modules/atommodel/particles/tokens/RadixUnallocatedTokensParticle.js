import * as tslib_1 from "tslib";
import { includeDSON, includeJSON, RadixSerializer, RadixParticle, RadixFungibleType, RadixUInt256, RRI, } from '../..';
import BN from 'bn.js';
/**
 *  A particle which represents an amount of unallocated tokens which can be minted.
 */
let RadixUnallocatedTokensParticle = class RadixUnallocatedTokensParticle extends RadixParticle {
    constructor(amount, granularity, nonce, tokenReference, tokenPermissions) {
        if (amount.isZero()) {
            throw new Error('Ammount cannot be zero');
        }
        super();
        this.granularity = new RadixUInt256(granularity);
        this.tokenDefinitionReference = tokenReference;
        this.amount = new RadixUInt256(amount);
        this.nonce = nonce;
        this.permissions = tokenPermissions;
    }
    getAddress() {
        return this.tokenDefinitionReference.address;
    }
    getAddresses() {
        return [this.tokenDefinitionReference.address];
    }
    getType() {
        return RadixFungibleType.TRANSFER;
    }
    getNonce() {
        return this.nonce;
    }
    getTokenDefinitionReference() {
        return this.tokenDefinitionReference;
    }
    getOwner() {
        return this.getAddress();
    }
    getAmount() {
        return this.amount.value;
    }
    getGranularity() {
        return this.granularity.value;
    }
    getTokenPermissions() {
        return this.permissions;
    }
};
tslib_1.__decorate([
    includeDSON,
    includeJSON,
    tslib_1.__metadata("design:type", RRI)
], RadixUnallocatedTokensParticle.prototype, "tokenDefinitionReference", void 0);
tslib_1.__decorate([
    includeDSON,
    includeJSON,
    tslib_1.__metadata("design:type", RadixUInt256)
], RadixUnallocatedTokensParticle.prototype, "granularity", void 0);
tslib_1.__decorate([
    includeDSON,
    includeJSON,
    tslib_1.__metadata("design:type", Number)
], RadixUnallocatedTokensParticle.prototype, "nonce", void 0);
tslib_1.__decorate([
    includeDSON,
    includeJSON,
    tslib_1.__metadata("design:type", RadixUInt256)
], RadixUnallocatedTokensParticle.prototype, "amount", void 0);
tslib_1.__decorate([
    includeDSON,
    includeJSON,
    tslib_1.__metadata("design:type", Object)
], RadixUnallocatedTokensParticle.prototype, "permissions", void 0);
RadixUnallocatedTokensParticle = tslib_1.__decorate([
    RadixSerializer.registerClass('radix.particles.unallocated_tokens'),
    tslib_1.__metadata("design:paramtypes", [BN,
        BN, Number, RRI, Object])
], RadixUnallocatedTokensParticle);
export { RadixUnallocatedTokensParticle };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmFkaXhVbmFsbG9jYXRlZFRva2Vuc1BhcnRpY2xlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL21vZHVsZXMvYXRvbW1vZGVsL3BhcnRpY2xlcy90b2tlbnMvUmFkaXhVbmFsbG9jYXRlZFRva2Vuc1BhcnRpY2xlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0gsV0FBVyxFQUNYLFdBQVcsRUFDWCxlQUFlLEVBQ2YsYUFBYSxFQUViLGlCQUFpQixFQUNqQixZQUFZLEVBQ1osR0FBRyxHQUtOLE1BQU0sT0FBTyxDQUFBO0FBRWQsT0FBTyxFQUFFLE1BQU0sT0FBTyxDQUFBO0FBRXRCOztHQUVHO0FBRUgsSUFBYSw4QkFBOEIsR0FBM0MsTUFBYSw4QkFBK0IsU0FBUSxhQUFhO0lBc0I3RCxZQUNJLE1BQVUsRUFDVixXQUFlLEVBQ2YsS0FBYSxFQUNiLGNBQW1CLEVBQ25CLGdCQUF1QztRQUV2QyxJQUFJLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBRTtZQUNqQixNQUFNLElBQUksS0FBSyxDQUFDLHdCQUF3QixDQUFDLENBQUE7U0FDNUM7UUFFRCxLQUFLLEVBQUUsQ0FBQTtRQUVQLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxZQUFZLENBQUMsV0FBVyxDQUFDLENBQUE7UUFDaEQsSUFBSSxDQUFDLHdCQUF3QixHQUFHLGNBQWMsQ0FBQTtRQUM5QyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFBO1FBQ3RDLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFBO1FBQ2xCLElBQUksQ0FBQyxXQUFXLEdBQUcsZ0JBQWdCLENBQUE7SUFDdkMsQ0FBQztJQUVNLFVBQVU7UUFDYixPQUFPLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxPQUFPLENBQUE7SUFDaEQsQ0FBQztJQUVNLFlBQVk7UUFDZixPQUFPLENBQUMsSUFBSSxDQUFDLHdCQUF3QixDQUFDLE9BQU8sQ0FBQyxDQUFBO0lBQ2xELENBQUM7SUFFTSxPQUFPO1FBQ1YsT0FBTyxpQkFBaUIsQ0FBQyxRQUFRLENBQUE7SUFDckMsQ0FBQztJQUVNLFFBQVE7UUFDWCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUE7SUFDckIsQ0FBQztJQUVNLDJCQUEyQjtRQUM5QixPQUFPLElBQUksQ0FBQyx3QkFBd0IsQ0FBQTtJQUN4QyxDQUFDO0lBRU0sUUFBUTtRQUNYLE9BQU8sSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFBO0lBQzVCLENBQUM7SUFFTSxTQUFTO1FBQ1osT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQTtJQUM1QixDQUFDO0lBRU0sY0FBYztRQUNqQixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFBO0lBQ2pDLENBQUM7SUFFTSxtQkFBbUI7UUFDdEIsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFBO0lBQzNCLENBQUM7Q0FDSixDQUFBO0FBekVHO0lBRkMsV0FBVztJQUNYLFdBQVc7c0NBQ3FCLEdBQUc7Z0ZBQUE7QUFJcEM7SUFGQyxXQUFXO0lBQ1gsV0FBVztzQ0FDUSxZQUFZO21FQUFBO0FBSWhDO0lBRkMsV0FBVztJQUNYLFdBQVc7OzZEQUNRO0FBSXBCO0lBRkMsV0FBVztJQUNYLFdBQVc7c0NBQ0csWUFBWTs4REFBQTtBQUkzQjtJQUZDLFdBQVc7SUFDWCxXQUFXOzttRUFDNkI7QUFwQmhDLDhCQUE4QjtJQUQxQyxlQUFlLENBQUMsYUFBYSxDQUFDLG9DQUFvQyxDQUFDOzZDQXdCcEQsRUFBRTtRQUNHLEVBQUUsVUFFQyxHQUFHO0dBMUJkLDhCQUE4QixDQTZFMUM7U0E3RVksOEJBQThCIn0=