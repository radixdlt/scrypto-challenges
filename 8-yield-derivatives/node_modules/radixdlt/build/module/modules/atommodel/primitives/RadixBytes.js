import * as tslib_1 from "tslib";
import { RadixSerializer } from '..';
let RadixBytes = class RadixBytes {
    constructor(bytes) {
        this.bytes = Buffer.from(bytes);
    }
    static fromEncoded(encoded) {
        return new this(Buffer.from(encoded, 'base64'));
    }
    static fromJSON(bytes) {
        return this.fromEncoded(bytes);
    }
    toJSON() {
        return `:byt:${this.bytes.toString('base64')}`;
    }
    toDSON() {
        return RadixSerializer.toDSON(this);
    }
    encodeCBOR(encoder) {
        const output = Buffer.alloc(this.bytes.length + 1);
        output.writeInt8(0x01, 0);
        this.bytes.copy(output, 1);
        return encoder.pushAny(output);
    }
    toString() {
        return this.bytes.toString();
    }
    asJSON() {
        return JSON.parse(this.bytes.toString('utf8'));
    }
};
RadixBytes = tslib_1.__decorate([
    RadixSerializer.registerPrimitive(':byt:'),
    tslib_1.__metadata("design:paramtypes", [Object])
], RadixBytes);
export { RadixBytes };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmFkaXhCeXRlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9tb2R1bGVzL2F0b21tb2RlbC9wcmltaXRpdmVzL1JhZGl4Qnl0ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxlQUFlLEVBQWtCLE1BQU0sSUFBSSxDQUFBO0FBR3BELElBQWEsVUFBVSxHQUF2QixNQUFhLFVBQVU7SUFHbkIsWUFBWSxLQUFVO1FBQ2xCLElBQUksQ0FBQyxLQUFLLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQTtJQUNuQyxDQUFDO0lBRU0sTUFBTSxDQUFDLFdBQVcsQ0FBQyxPQUFlO1FBQ3JDLE9BQU8sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQTtJQUNuRCxDQUFDO0lBRU0sTUFBTSxDQUFDLFFBQVEsQ0FBQyxLQUFhO1FBQ2hDLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQTtJQUNsQyxDQUFDO0lBRU0sTUFBTTtRQUNULE9BQU8sUUFBUSxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFBO0lBQ2xELENBQUM7SUFFTSxNQUFNO1FBQ1QsT0FBTyxlQUFlLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFBO0lBQ3ZDLENBQUM7SUFFTSxVQUFVLENBQUMsT0FBTztRQUNyQixNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFBO1FBQ2xELE1BQU0sQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFBO1FBQ3pCLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQTtRQUUxQixPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUE7SUFDbEMsQ0FBQztJQUVNLFFBQVE7UUFDWCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUE7SUFDaEMsQ0FBQztJQUVNLE1BQU07UUFDVCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQTtJQUNsRCxDQUFDO0NBQ0osQ0FBQTtBQXRDWSxVQUFVO0lBRHRCLGVBQWUsQ0FBQyxpQkFBaUIsQ0FBQyxPQUFPLENBQUM7O0dBQzlCLFVBQVUsQ0FzQ3RCO1NBdENZLFVBQVUifQ==