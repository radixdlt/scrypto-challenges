import * as tslib_1 from "tslib";
import { RadixSerializer, RadixAddress, } from '..';
const id = ':rri:';
let RRI = class RRI {
    constructor(address, name) {
        this.address = address;
        this.name = name;
    }
    static fromJSON(uri) {
        return this.fromString(uri);
    }
    static fromString(uri) {
        const parts = uri.split('/');
        if (parts.length !== 3) {
            throw new Error('RRI must be of the format /:address/:unique');
        }
        return new this(RadixAddress.fromAddress(parts[1]), parts[2]);
    }
    toJSON() {
        return `${id}${this.toString()}`;
    }
    toString() {
        return `/${this.address.toString()}/${this.name}`;
    }
    toDSON() {
        return RadixSerializer.toDSON(this);
    }
    encodeCBOR(encoder) {
        const s = Buffer.from(this.toString(), 'utf8');
        const output = Buffer.alloc(s.length + 1);
        output.writeInt8(0x06, 0);
        s.copy(output, 1);
        return encoder.pushAny(output);
    }
    equals(rri) {
        return this.address.equals(rri.address) && this.name === rri.name;
    }
    getAddress() {
        return this.address;
    }
    getName() {
        return this.name;
    }
};
RRI = tslib_1.__decorate([
    RadixSerializer.registerPrimitive(id),
    tslib_1.__metadata("design:paramtypes", [RadixAddress, String])
], RRI);
export { RRI };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUlJJLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL21vZHVsZXMvYXRvbW1vZGVsL3ByaW1pdGl2ZXMvUlJJLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0gsZUFBZSxFQUVmLFlBQVksR0FDZixNQUFNLElBQUksQ0FBQTtBQUVYLE1BQU0sRUFBRSxHQUFHLE9BQU8sQ0FBQTtBQUVsQixJQUFhLEdBQUcsR0FBaEIsTUFBYSxHQUFHO0lBS1osWUFBWSxPQUFxQixFQUFFLElBQVk7UUFDM0MsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUE7UUFDdEIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUE7SUFDcEIsQ0FBQztJQUVNLE1BQU0sQ0FBQyxRQUFRLENBQUMsR0FBVztRQUM5QixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUE7SUFDL0IsQ0FBQztJQUVNLE1BQU0sQ0FBQyxVQUFVLENBQUMsR0FBVztRQUNoQyxNQUFNLEtBQUssR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFBO1FBRTVCLElBQUksS0FBSyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7WUFDcEIsTUFBTSxJQUFJLEtBQUssQ0FBQyw2Q0FBNkMsQ0FBQyxDQUFBO1NBQ2pFO1FBRUQsT0FBTyxJQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBO0lBQ2pFLENBQUM7SUFFTSxNQUFNO1FBQ1QsT0FBTyxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQTtJQUNwQyxDQUFDO0lBRU0sUUFBUTtRQUNYLE9BQU8sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQTtJQUNyRCxDQUFDO0lBRU0sTUFBTTtRQUNULE9BQU8sZUFBZSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQTtJQUN2QyxDQUFDO0lBRU0sVUFBVSxDQUFDLE9BQU87UUFDckIsTUFBTSxDQUFDLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLEVBQUUsTUFBTSxDQUFDLENBQUE7UUFFOUMsTUFBTSxNQUFNLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFBO1FBQ3pDLE1BQU0sQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFBO1FBQ3pCLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFBO1FBRWpCLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQTtJQUNsQyxDQUFDO0lBRU0sTUFBTSxDQUFDLEdBQVE7UUFDbEIsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLElBQUksSUFBSSxDQUFDLElBQUksS0FBSyxHQUFHLENBQUMsSUFBSSxDQUFBO0lBQ3JFLENBQUM7SUFFTSxVQUFVO1FBQ2IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFBO0lBQ3ZCLENBQUM7SUFFTSxPQUFPO1FBQ1YsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFBO0lBQ3BCLENBQUM7Q0FDSixDQUFBO0FBekRZLEdBQUc7SUFEZixlQUFlLENBQUMsaUJBQWlCLENBQUMsRUFBRSxDQUFDOzZDQU1iLFlBQVk7R0FMeEIsR0FBRyxDQXlEZjtTQXpEWSxHQUFHIn0=