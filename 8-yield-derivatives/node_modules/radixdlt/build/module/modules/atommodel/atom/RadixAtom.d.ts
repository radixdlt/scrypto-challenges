import { RadixSerializableObject, RadixSpunParticle, RadixECSignature, RadixAddress, RadixSpin, RadixParticle, RadixParticleGroup, RadixAID } from '..';
export declare class RadixAtom extends RadixSerializableObject {
    static METADATA_TIMESTAMP_KEY: string;
    static METADATA_POW_NONCE_KEY: string;
    particleGroups: RadixParticleGroup[];
    signatures: {
        [id: string]: RadixECSignature;
    };
    metaData: {
        [s: string]: string;
    };
    getParticles(): RadixSpunParticle[];
    getAddresses(): RadixAddress[];
    getShards(): Long[];
    getTimestamp(): number;
    setTimestamp(timestamp: number): void;
    setPowNonce(nonce: Long): void;
    clearPowNonce(): void;
    getSpunParticlesOfType(...types: Array<{
        new (...args: any[]): RadixParticle;
    }>): RadixSpunParticle[];
    getParticlesOfSpin(spin: RadixSpin): RadixParticle[];
    getParticlesOfType<T extends RadixParticle>(type: new (...args: any[]) => T, spin?: RadixSpin): T[];
    getFirstParticleOfType<T extends RadixParticle>(type: new (...args: any[]) => T): T;
    containsParticle(...types: Array<{
        new (...args: any[]): RadixParticle;
    }>): boolean;
    getParticleGroups(): RadixParticleGroup[];
    getAid(): RadixAID;
    getAidString(): string;
}
