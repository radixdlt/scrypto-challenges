/// <reference types="node" />
export default class RadixECIES {
    static decrypt(privKey: Buffer, encrypted: Buffer): Buffer;
    static encrypt(pubKeyTo: Buffer, plaintext: Buffer): Buffer;
    static calculateMAC(MACKey: Buffer, iv: Buffer, ephemPubKeyEncoded: Buffer, ciphertext: Buffer): Buffer;
    /**
     * AES-256 CBC encrypt
     * @param {Buffer} iv
     * @param {Buffer} key
     * @param {Buffer} plaintext
     * @returns {Buffer} ciphertext
     */
    static AES256CbcEncrypt: (iv: Buffer, key: Buffer, plaintext: Buffer) => Buffer;
    /**
     * AES-256 CBC decrypt
     * @param {Buffer} iv
     * @param {Buffer} key
     * @param {Buffer} ciphertext
     * @returns {Buffer} plaintext
     */
    static AES256CbcDecrypt: (iv: Buffer, key: Buffer, ciphertext: Buffer) => Buffer;
    static encryptForMultiple(recipientsPublicKeys: Buffer[], plaintext: Buffer): {
        protectors: Buffer[];
        ciphertext: Buffer;
    };
    static decryptWithProtectors(privKey: Buffer, protectors: Buffer[], ciphertext: Buffer): Buffer;
}
