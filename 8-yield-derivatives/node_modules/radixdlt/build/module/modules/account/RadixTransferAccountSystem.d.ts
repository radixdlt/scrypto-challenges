import { Subject, Observable, BehaviorSubject } from 'rxjs';
import { TSMap } from 'typescript-map';
import RadixAccountSystem from './RadixAccountSystem';
import RadixTransaction from './RadixTransaction';
import RadixTransactionUpdate from './RadixTransactionUpdate';
import { RadixAtomUpdate, RadixAddress, RadixConsumable } from '../atommodel';
import BN from 'bn.js';
import Decimal from 'decimal.js';
export default class RadixTransferAccountSystem implements RadixAccountSystem {
    readonly address: RadixAddress;
    name: string;
    transactions: TSMap<string, RadixTransaction>;
    balance: {
        [tokenId: string]: BN;
    };
    tokenUnitsBalance: {
        [tokenId: string]: Decimal;
    };
    transactionSubject: Subject<RadixTransactionUpdate>;
    balanceSubject: BehaviorSubject<{
        [tokenId: string]: BN;
    }>;
    private tokenUnitsBalanceSubject;
    private unspentConsumables;
    private spentConsumables;
    constructor(address: RadixAddress);
    processAtomUpdate(atomUpdate: RadixAtomUpdate): Promise<void>;
    private processStoreAtom;
    private processDeleteAtom;
    getAllTransactions(): Observable<RadixTransactionUpdate>;
    getUnspentConsumables(): RadixConsumable[];
    getTokenUnitsBalanceUpdates(): Observable<{
        [tokenId: string]: Decimal;
    }>;
}
