import RadixAccountSystem from './RadixAccountSystem';
import RadixDecryptionProvider from '../identity/RadixDecryptionProvider';
import { RadixAtomUpdate, RadixAddress } from '../atommodel';
export declare enum RadixDecryptionState {
    DECRYPTED = "DECRYPTED",
    NOT_ENCRYPTED = "NOT_ENCRYPTED",
    CANNOT_DECRYPT = "CANNOT_DECRYPT"
}
export interface RadixDecryptedData {
    data: string;
    decryptionState: RadixDecryptionState;
    application: string;
    from: RadixAddress;
    to: RadixAddress[];
}
export declare class RadixDecryptionAccountSystem implements RadixAccountSystem {
    name: string;
    decryptionProvider: RadixDecryptionProvider;
    constructor(decryptionProvider?: RadixDecryptionProvider);
    processAtomUpdate(atomUpdate: RadixAtomUpdate): Promise<void>;
}
