/// <reference types="node" />
import RadixSignatureProvider from './RadixSignatureProvider';
import RadixDecryptionProvider from './RadixDecryptionProvider';
import RadixAccount from '../account/RadixAccount';
import { RadixAddress, RadixAtom } from '../atommodel';
export default abstract class RadixIdentity implements RadixSignatureProvider, RadixDecryptionProvider {
    readonly address: RadixAddress;
    constructor(address: RadixAddress);
    abstract signAtom(atom: RadixAtom): Promise<RadixAtom>;
    abstract decryptECIESPayload(payload: Buffer): Promise<Buffer>;
    abstract decryptECIESPayloadWithProtectors(protectors: Buffer[], payload: Buffer): Promise<Buffer>;
    abstract getPublicKey(): Buffer;
    account: RadixAccount;
}
