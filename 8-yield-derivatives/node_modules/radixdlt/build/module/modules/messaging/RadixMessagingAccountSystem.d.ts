import { Subject, Observable } from 'rxjs';
import { TSMap } from 'typescript-map';
import RadixMessageUpdate from './RadixMessageUpdate';
import { RadixAccountSystem, RadixChat, RadixMessage } from '../..';
import { RadixAddress, RadixAtomUpdate } from '../atommodel';
export default class RadixMessagingAccountSystem implements RadixAccountSystem {
    readonly address: RadixAddress;
    name: string;
    messageSubject: Subject<RadixMessageUpdate>;
    chats: TSMap<string, RadixChat>;
    messages: TSMap<string, RadixMessage>;
    constructor(address: RadixAddress);
    processAtomUpdate(atomUpdate: RadixAtomUpdate): Promise<void>;
    startNewChat(to: RadixAddress): void;
    private processStoreAtom;
    private processDeleteAtom;
    getAllMessages(): Observable<RadixMessageUpdate>;
}
