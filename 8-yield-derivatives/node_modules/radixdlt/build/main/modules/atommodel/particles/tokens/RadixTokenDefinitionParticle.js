"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var bn_js_1 = tslib_1.__importDefault(require("bn.js"));
var __1 = require("../..");
var RadixTokenPermissionsValues;
(function (RadixTokenPermissionsValues) {
    RadixTokenPermissionsValues["TOKEN_CREATION_ONLY"] = "token_creation_only";
    RadixTokenPermissionsValues["TOKEN_OWNER_ONLY"] = "token_owner_only";
    RadixTokenPermissionsValues["ALL"] = "all";
    RadixTokenPermissionsValues["NONE"] = "none";
})(RadixTokenPermissionsValues = exports.RadixTokenPermissionsValues || (exports.RadixTokenPermissionsValues = {}));
/**
 * Particle defining a token
 */
var RadixTokenDefinitionParticle = /** @class */ (function (_super) {
    tslib_1.__extends(RadixTokenDefinitionParticle, _super);
    function RadixTokenDefinitionParticle(address, name, symbol, description, granularity, iconUrl, permissions) {
        var _this = _super.call(this) || this;
        _this.address = address;
        _this.name = name;
        _this.symbol = symbol;
        _this.description = description;
        _this.granularity = new __1.RadixUInt256(granularity);
        _this.iconUrl = iconUrl;
        _this.permissions = permissions;
        return _this;
    }
    RadixTokenDefinitionParticle.prototype.getAddresses = function () {
        return [this.address];
    };
    RadixTokenDefinitionParticle.prototype.getPermissions = function (action) {
        // Hack because it's 'mint' in permissions but 'minted' in OwnedTokensParticle
        return this.permissions[__1.RadixFungibleType[action].toLowerCase()];
    };
    RadixTokenDefinitionParticle.prototype.getGranularity = function () {
        return this.granularity.value;
    };
    RadixTokenDefinitionParticle.prototype.getOwner = function () {
        return this.address;
    };
    RadixTokenDefinitionParticle.prototype.getRRI = function () {
        return new __1.RRI(this.address, this.symbol);
    };
    RadixTokenDefinitionParticle.prototype.getTokenDefinitionReference = function () {
        return this.getRRI();
    };
    RadixTokenDefinitionParticle.prototype.getIconUrl = function () {
        return this.iconUrl;
    };
    tslib_1.__decorate([
        __1.includeDSON,
        __1.includeJSON,
        tslib_1.__metadata("design:type", String)
    ], RadixTokenDefinitionParticle.prototype, "name", void 0);
    tslib_1.__decorate([
        __1.includeDSON,
        __1.includeJSON,
        tslib_1.__metadata("design:type", String)
    ], RadixTokenDefinitionParticle.prototype, "symbol", void 0);
    tslib_1.__decorate([
        __1.includeDSON,
        __1.includeJSON,
        tslib_1.__metadata("design:type", String)
    ], RadixTokenDefinitionParticle.prototype, "description", void 0);
    tslib_1.__decorate([
        __1.includeDSON,
        __1.includeJSON,
        tslib_1.__metadata("design:type", __1.RadixUInt256)
    ], RadixTokenDefinitionParticle.prototype, "granularity", void 0);
    tslib_1.__decorate([
        __1.includeDSON,
        __1.includeJSON,
        tslib_1.__metadata("design:type", Object)
    ], RadixTokenDefinitionParticle.prototype, "permissions", void 0);
    tslib_1.__decorate([
        __1.includeDSON,
        __1.includeJSON,
        tslib_1.__metadata("design:type", __1.RadixAddress)
    ], RadixTokenDefinitionParticle.prototype, "address", void 0);
    tslib_1.__decorate([
        __1.includeDSON,
        __1.includeJSON,
        tslib_1.__metadata("design:type", String)
    ], RadixTokenDefinitionParticle.prototype, "iconUrl", void 0);
    RadixTokenDefinitionParticle = tslib_1.__decorate([
        __1.RadixSerializer.registerClass('radix.particles.token_definition'),
        tslib_1.__metadata("design:paramtypes", [__1.RadixAddress, String, String, String, bn_js_1.default, String, Object])
    ], RadixTokenDefinitionParticle);
    return RadixTokenDefinitionParticle;
}(__1.RadixParticle));
exports.RadixTokenDefinitionParticle = RadixTokenDefinitionParticle;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmFkaXhUb2tlbkRlZmluaXRpb25QYXJ0aWNsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9tb2R1bGVzL2F0b21tb2RlbC9wYXJ0aWNsZXMvdG9rZW5zL1JhZGl4VG9rZW5EZWZpbml0aW9uUGFydGljbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsd0RBQXNCO0FBSXRCLDJCQVVjO0FBRWQsSUFBWSwyQkFLWDtBQUxELFdBQVksMkJBQTJCO0lBQ25DLDBFQUEyQyxDQUFBO0lBQzNDLG9FQUFxQyxDQUFBO0lBQ3JDLDBDQUFXLENBQUE7SUFDWCw0Q0FBYSxDQUFBO0FBQ2pCLENBQUMsRUFMVywyQkFBMkIsR0FBM0IsbUNBQTJCLEtBQTNCLG1DQUEyQixRQUt0QztBQU9EOztHQUVHO0FBRUg7SUFBa0Qsd0RBQWE7SUE4QjNELHNDQUNJLE9BQXFCLEVBQ3JCLElBQVksRUFDWixNQUFjLEVBQ2QsV0FBbUIsRUFDbkIsV0FBZSxFQUNmLE9BQWUsRUFDZixXQUFrQztRQVB0QyxZQVNJLGlCQUFPLFNBU1Y7UUFQRyxLQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQTtRQUN0QixLQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQTtRQUNoQixLQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQTtRQUNwQixLQUFJLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQTtRQUM5QixLQUFJLENBQUMsV0FBVyxHQUFHLElBQUksZ0JBQVksQ0FBQyxXQUFXLENBQUMsQ0FBQTtRQUNoRCxLQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQTtRQUN0QixLQUFJLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQTs7SUFDbEMsQ0FBQztJQUVNLG1EQUFZLEdBQW5CO1FBQ0ksT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQTtJQUN6QixDQUFDO0lBRU0scURBQWMsR0FBckIsVUFBc0IsTUFBeUI7UUFDM0MsOEVBQThFO1FBQzlFLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxxQkFBaUIsQ0FBRSxNQUE0QixDQUFDLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FBQTtJQUMzRixDQUFDO0lBRU0scURBQWMsR0FBckI7UUFDSSxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFBO0lBQ2pDLENBQUM7SUFFTSwrQ0FBUSxHQUFmO1FBQ0ksT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFBO0lBQ3ZCLENBQUM7SUFFTSw2Q0FBTSxHQUFiO1FBQ0ksT0FBTyxJQUFJLE9BQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQTtJQUM3QyxDQUFDO0lBRU0sa0VBQTJCLEdBQWxDO1FBQ0ksT0FBTyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUE7SUFDeEIsQ0FBQztJQUVNLGlEQUFVLEdBQWpCO1FBQ0ksT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFBO0lBQ3ZCLENBQUM7SUF6RUQ7UUFGQyxlQUFXO1FBQ1gsZUFBVzs7OERBQ087SUFJbkI7UUFGQyxlQUFXO1FBQ1gsZUFBVzs7Z0VBQ1M7SUFJckI7UUFGQyxlQUFXO1FBQ1gsZUFBVzs7cUVBQ2M7SUFJMUI7UUFGQyxlQUFXO1FBQ1gsZUFBVzswQ0FDUSxnQkFBWTtxRUFBQTtJQUloQztRQUZDLGVBQVc7UUFDWCxlQUFXOztxRUFDNkI7SUFJekM7UUFGQyxlQUFXO1FBQ1gsZUFBVzswQ0FDSSxnQkFBWTtpRUFBQTtJQUk1QjtRQUZDLGVBQVc7UUFDWCxlQUFXOztpRUFDVTtJQTVCYiw0QkFBNEI7UUFEeEMsbUJBQWUsQ0FBQyxhQUFhLENBQUMsa0NBQWtDLENBQUM7aURBZ0NqRCxnQkFBWSwwQkFJUixlQUFFO09BbkNWLDRCQUE0QixDQThFeEM7SUFBRCxtQ0FBQztDQUFBLEFBOUVELENBQWtELGlCQUFhLEdBOEU5RDtBQTlFWSxvRUFBNEIifQ==