"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var __1 = require("../..");
/**
 * Particle which can hold arbitrary data
 */
var RadixMessageParticle = /** @class */ (function (_super) {
    tslib_1.__extends(RadixMessageParticle, _super);
    function RadixMessageParticle(from, to, data, metaData, nonce) {
        var _this = _super.call(this) || this;
        _this.from = from;
        _this.to = to;
        _this.bytes = new __1.RadixBytes(data);
        _this.metaData = metaData;
        _this.nonce = nonce ? nonce : Date.now();
        return _this;
    }
    RadixMessageParticle.prototype.getAddresses = function () {
        return [this.from, this.to];
    };
    RadixMessageParticle.prototype.getData = function () {
        return this.bytes;
    };
    RadixMessageParticle.prototype.getMetaData = function (key) {
        var metaData = this.metaData;
        if (metaData && key in metaData) {
            return metaData[key];
        }
        return null;
    };
    RadixMessageParticle.prototype.getNonce = function () {
        return this.nonce;
    };
    tslib_1.__decorate([
        __1.includeJSON,
        __1.includeDSON,
        tslib_1.__metadata("design:type", __1.RadixAddress)
    ], RadixMessageParticle.prototype, "from", void 0);
    tslib_1.__decorate([
        __1.includeJSON,
        __1.includeDSON,
        tslib_1.__metadata("design:type", __1.RadixAddress)
    ], RadixMessageParticle.prototype, "to", void 0);
    tslib_1.__decorate([
        __1.includeDSON,
        __1.includeJSON,
        tslib_1.__metadata("design:type", Object)
    ], RadixMessageParticle.prototype, "metaData", void 0);
    tslib_1.__decorate([
        __1.includeDSON,
        __1.includeJSON,
        tslib_1.__metadata("design:type", __1.RadixBytes)
    ], RadixMessageParticle.prototype, "bytes", void 0);
    tslib_1.__decorate([
        __1.includeDSON,
        __1.includeJSON,
        tslib_1.__metadata("design:type", Number)
    ], RadixMessageParticle.prototype, "nonce", void 0);
    RadixMessageParticle = tslib_1.__decorate([
        __1.RadixSerializer.registerClass('radix.particles.message'),
        tslib_1.__metadata("design:paramtypes", [__1.RadixAddress, __1.RadixAddress, Object, Object, Number])
    ], RadixMessageParticle);
    return RadixMessageParticle;
}(__1.RadixParticle));
exports.RadixMessageParticle = RadixMessageParticle;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmFkaXhNZXNzYWdlUGFydGljbGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbW9kdWxlcy9hdG9tbW9kZWwvcGFydGljbGVzL2RhdGEvUmFkaXhNZXNzYWdlUGFydGljbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsMkJBQTBHO0FBRTFHOztHQUVHO0FBRUg7SUFBMEMsZ0RBQWE7SUFzQm5ELDhCQUFZLElBQWtCLEVBQUUsRUFBZ0IsRUFBRSxJQUFTLEVBQUUsUUFBaUMsRUFBRSxLQUFjO1FBQTlHLFlBQ0ksaUJBQU8sU0FNVjtRQUxHLEtBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFBO1FBQ2hCLEtBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFBO1FBQ1osS0FBSSxDQUFDLEtBQUssR0FBRyxJQUFJLGNBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQTtRQUNqQyxLQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQTtRQUN4QixLQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUE7O0lBQzNDLENBQUM7SUFFTSwyQ0FBWSxHQUFuQjtRQUNJLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQTtJQUMvQixDQUFDO0lBRU0sc0NBQU8sR0FBZDtRQUNJLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQTtJQUNyQixDQUFDO0lBRU0sMENBQVcsR0FBbEIsVUFBbUIsR0FBVztRQUMxQixJQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFBO1FBRTlCLElBQUksUUFBUSxJQUFJLEdBQUcsSUFBSSxRQUFRLEVBQUU7WUFDN0IsT0FBTyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUE7U0FDdkI7UUFFRCxPQUFPLElBQUksQ0FBQTtJQUNmLENBQUM7SUFFTSx1Q0FBUSxHQUFmO1FBQ0ksT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFBO0lBQ3JCLENBQUM7SUEvQ0Q7UUFGQyxlQUFXO1FBQ1gsZUFBVzswQ0FDQyxnQkFBWTtzREFBQTtJQUl6QjtRQUZDLGVBQVc7UUFDWCxlQUFXOzBDQUNELGdCQUFZO29EQUFBO0lBSXZCO1FBRkMsZUFBVztRQUNYLGVBQVc7OzBEQUMwQjtJQUl0QztRQUZDLGVBQVc7UUFDWCxlQUFXOzBDQUNFLGNBQVU7dURBQUE7SUFJeEI7UUFGQyxlQUFXO1FBQ1gsZUFBVzs7dURBQ1E7SUFwQlgsb0JBQW9CO1FBRGhDLG1CQUFlLENBQUMsYUFBYSxDQUFDLHlCQUF5QixDQUFDO2lEQXVCbkMsZ0JBQVksRUFBTSxnQkFBWTtPQXRCdkMsb0JBQW9CLENBcURoQztJQUFELDJCQUFDO0NBQUEsQUFyREQsQ0FBMEMsaUJBQWEsR0FxRHREO0FBckRZLG9EQUFvQiJ9