"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var __1 = require("..");
var id = ':rri:';
var RRI = /** @class */ (function () {
    function RRI(address, name) {
        this.address = address;
        this.name = name;
    }
    RRI.fromJSON = function (uri) {
        return this.fromString(uri);
    };
    RRI.fromString = function (uri) {
        var parts = uri.split('/');
        if (parts.length !== 3) {
            throw new Error('RRI must be of the format /:address/:unique');
        }
        return new this(__1.RadixAddress.fromAddress(parts[1]), parts[2]);
    };
    RRI.prototype.toJSON = function () {
        return "" + id + this.toString();
    };
    RRI.prototype.toString = function () {
        return "/" + this.address.toString() + "/" + this.name;
    };
    RRI.prototype.toDSON = function () {
        return __1.RadixSerializer.toDSON(this);
    };
    RRI.prototype.encodeCBOR = function (encoder) {
        var s = Buffer.from(this.toString(), 'utf8');
        var output = Buffer.alloc(s.length + 1);
        output.writeInt8(0x06, 0);
        s.copy(output, 1);
        return encoder.pushAny(output);
    };
    RRI.prototype.equals = function (rri) {
        return this.address.equals(rri.address) && this.name === rri.name;
    };
    RRI.prototype.getAddress = function () {
        return this.address;
    };
    RRI.prototype.getName = function () {
        return this.name;
    };
    RRI = tslib_1.__decorate([
        __1.RadixSerializer.registerPrimitive(id),
        tslib_1.__metadata("design:paramtypes", [__1.RadixAddress, String])
    ], RRI);
    return RRI;
}());
exports.RRI = RRI;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUlJJLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL21vZHVsZXMvYXRvbW1vZGVsL3ByaW1pdGl2ZXMvUlJJLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHdCQUlXO0FBRVgsSUFBTSxFQUFFLEdBQUcsT0FBTyxDQUFBO0FBRWxCO0lBS0ksYUFBWSxPQUFxQixFQUFFLElBQVk7UUFDM0MsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUE7UUFDdEIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUE7SUFDcEIsQ0FBQztJQUVhLFlBQVEsR0FBdEIsVUFBdUIsR0FBVztRQUM5QixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUE7SUFDL0IsQ0FBQztJQUVhLGNBQVUsR0FBeEIsVUFBeUIsR0FBVztRQUNoQyxJQUFNLEtBQUssR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFBO1FBRTVCLElBQUksS0FBSyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7WUFDcEIsTUFBTSxJQUFJLEtBQUssQ0FBQyw2Q0FBNkMsQ0FBQyxDQUFBO1NBQ2pFO1FBRUQsT0FBTyxJQUFJLElBQUksQ0FBQyxnQkFBWSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtJQUNqRSxDQUFDO0lBRU0sb0JBQU0sR0FBYjtRQUNJLE9BQU8sS0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBSSxDQUFBO0lBQ3BDLENBQUM7SUFFTSxzQkFBUSxHQUFmO1FBQ0ksT0FBTyxNQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLFNBQUksSUFBSSxDQUFDLElBQU0sQ0FBQTtJQUNyRCxDQUFDO0lBRU0sb0JBQU0sR0FBYjtRQUNJLE9BQU8sbUJBQWUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUE7SUFDdkMsQ0FBQztJQUVNLHdCQUFVLEdBQWpCLFVBQWtCLE9BQU87UUFDckIsSUFBTSxDQUFDLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLEVBQUUsTUFBTSxDQUFDLENBQUE7UUFFOUMsSUFBTSxNQUFNLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFBO1FBQ3pDLE1BQU0sQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFBO1FBQ3pCLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFBO1FBRWpCLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQTtJQUNsQyxDQUFDO0lBRU0sb0JBQU0sR0FBYixVQUFjLEdBQVE7UUFDbEIsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLElBQUksSUFBSSxDQUFDLElBQUksS0FBSyxHQUFHLENBQUMsSUFBSSxDQUFBO0lBQ3JFLENBQUM7SUFFTSx3QkFBVSxHQUFqQjtRQUNJLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQTtJQUN2QixDQUFDO0lBRU0scUJBQU8sR0FBZDtRQUNJLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQTtJQUNwQixDQUFDO0lBeERRLEdBQUc7UUFEZixtQkFBZSxDQUFDLGlCQUFpQixDQUFDLEVBQUUsQ0FBQztpREFNYixnQkFBWTtPQUx4QixHQUFHLENBeURmO0lBQUQsVUFBQztDQUFBLEFBekRELElBeURDO0FBekRZLGtCQUFHIn0=