"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var _1 = require(".");
var RadixUtil_1 = require("../common/RadixUtil");
var RadixSerializableObject = /** @class */ (function () {
    function RadixSerializableObject() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this.version = 100;
        // Empty constructor
    }
    RadixSerializableObject.fromJSON = function (json) {
        // So that we can have constructors for the different classes
        var obj = Object.create(this.prototype);
        if (json) {
            for (var key in json) {
                if (key === 'constructor' || key === 'serializationProperties') {
                    continue;
                }
                obj[key] = json[key];
            }
        }
        return obj;
    };
    Object.defineProperty(RadixSerializableObject.prototype, "serializer", {
        get: function () {
            return this.constructor.SERIALIZER;
        },
        set: function (_) {
            // Do nothing
        },
        enumerable: true,
        configurable: true
    });
    RadixSerializableObject.prototype.toJSON = function () {
        var e_1, _a;
        var constructor = this.constructor;
        var output = { serializer: constructor.SERIALIZER };
        var serializationProps = Reflect.getMetadata(_1.JSON_PROPERTIES_KEY, this);
        try {
            for (var serializationProps_1 = tslib_1.__values(serializationProps), serializationProps_1_1 = serializationProps_1.next(); !serializationProps_1_1.done; serializationProps_1_1 = serializationProps_1.next()) {
                var key = serializationProps_1_1.value;
                var serialized = _1.RadixSerializer.toJSON(this[key]);
                if (!RadixUtil_1.isEmpty(serialized)) {
                    output[key] = serialized;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (serializationProps_1_1 && !serializationProps_1_1.done && (_a = serializationProps_1.return)) _a.call(serializationProps_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return output;
    };
    RadixSerializableObject.prototype.toDSON = function () {
        return _1.RadixSerializer.toDSON(this);
    };
    RadixSerializableObject.prototype.encodeCBOR = function (encoder) {
        var e_2, _a;
        // Streaming encoding for maps
        var serializationProps = Reflect.getMetadata(_1.DSON_PROPERTIES_KEY, this);
        if (!encoder.push(Buffer.from([191]))) {
            return false;
        }
        try {
            for (var serializationProps_2 = tslib_1.__values(serializationProps), serializationProps_2_1 = serializationProps_2.next(); !serializationProps_2_1.done; serializationProps_2_1 = serializationProps_2.next()) {
                var prop = serializationProps_2_1.value;
                if (RadixUtil_1.isEmpty(this[prop])) {
                    continue;
                }
                if (!encoder.pushAny(prop)) {
                    return false;
                }
                if (!encoder.pushAny(this[prop])) {
                    return false;
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (serializationProps_2_1 && !serializationProps_2_1.done && (_a = serializationProps_2.return)) _a.call(serializationProps_2);
            }
            finally { if (e_2) throw e_2.error; }
        }
        if (!encoder.push(Buffer.from([0xFF]))) {
            return false;
        }
        return true;
    };
    RadixSerializableObject.prototype.getHash = function () {
        return RadixUtil_1.radixHash(this.toDSON());
    };
    RadixSerializableObject.prototype.getSize = function () {
        return this.toDSON().length;
    };
    RadixSerializableObject.SERIALIZER = '';
    tslib_1.__decorate([
        _1.includeJSON,
        _1.includeDSON,
        tslib_1.__metadata("design:type", Object)
    ], RadixSerializableObject.prototype, "version", void 0);
    tslib_1.__decorate([
        _1.includeDSON,
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], RadixSerializableObject.prototype, "serializer", null);
    return RadixSerializableObject;
}());
exports.RadixSerializableObject = RadixSerializableObject;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmFkaXhTZXJpYWxpemFibGVPYmplY3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbW9kdWxlcy9hdG9tbW9kZWwvUmFkaXhTZXJpYWxpemFibGVPYmplY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsc0JBQW1IO0FBQ25ILGlEQUF5RDtBQUV6RDtJQU9JO1FBQVksY0FBYzthQUFkLFVBQWMsRUFBZCxxQkFBYyxFQUFkLElBQWM7WUFBZCx5QkFBYzs7UUFGbkIsWUFBTyxHQUFHLEdBQUcsQ0FBQTtRQUdoQixvQkFBb0I7SUFDeEIsQ0FBQztJQUVhLGdDQUFRLEdBQXRCLFVBQXVCLElBQWE7UUFDaEMsNkRBQTZEO1FBQzdELElBQU0sR0FBRyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFBO1FBRXpDLElBQUksSUFBSSxFQUFFO1lBQ04sS0FBSyxJQUFNLEdBQUcsSUFBSSxJQUFJLEVBQUU7Z0JBQ3BCLElBQUksR0FBRyxLQUFLLGFBQWEsSUFBSSxHQUFHLEtBQUsseUJBQXlCLEVBQUU7b0JBQzVELFNBQVE7aUJBQ1g7Z0JBRUQsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQTthQUN2QjtTQUNKO1FBRUQsT0FBTyxHQUFHLENBQUE7SUFDZCxDQUFDO0lBR0Qsc0JBQUksK0NBQVU7YUFBZDtZQUNJLE9BQVEsSUFBSSxDQUFDLFdBQThDLENBQUMsVUFBVSxDQUFBO1FBQzFFLENBQUM7YUFFRCxVQUFlLENBQUM7WUFDWixhQUFhO1FBQ2pCLENBQUM7OztPQUpBO0lBTU0sd0NBQU0sR0FBYjs7UUFDSSxJQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsV0FBNkMsQ0FBQTtRQUN0RSxJQUFNLE1BQU0sR0FBRyxFQUFFLFVBQVUsRUFBRSxXQUFXLENBQUMsVUFBVSxFQUFFLENBQUE7UUFFckQsSUFBTSxrQkFBa0IsR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFDLHNCQUFtQixFQUFFLElBQUksQ0FBQyxDQUFBOztZQUV6RSxLQUFrQixJQUFBLHVCQUFBLGlCQUFBLGtCQUFrQixDQUFBLHNEQUFBLHNGQUFFO2dCQUFqQyxJQUFNLEdBQUcsK0JBQUE7Z0JBQ1YsSUFBTSxVQUFVLEdBQUcsa0JBQWUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUE7Z0JBQ3BELElBQUksQ0FBQyxtQkFBTyxDQUFDLFVBQVUsQ0FBQyxFQUFFO29CQUN0QixNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsVUFBVSxDQUFBO2lCQUMzQjthQUNKOzs7Ozs7Ozs7UUFFRCxPQUFPLE1BQU0sQ0FBQTtJQUNqQixDQUFDO0lBRU0sd0NBQU0sR0FBYjtRQUNJLE9BQU8sa0JBQWUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUE7SUFDdkMsQ0FBQztJQUVNLDRDQUFVLEdBQWpCLFVBQWtCLE9BQU87O1FBQ3JCLDhCQUE4QjtRQUM5QixJQUFNLGtCQUFrQixHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsc0JBQW1CLEVBQUUsSUFBSSxDQUFDLENBQUE7UUFFekUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQVcsQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUFDLE9BQU8sS0FBSyxDQUFBO1NBQUM7O1lBRTdELEtBQW1CLElBQUEsdUJBQUEsaUJBQUEsa0JBQWtCLENBQUEsc0RBQUEsc0ZBQUU7Z0JBQWxDLElBQU0sSUFBSSwrQkFBQTtnQkFDWCxJQUFJLG1CQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUU7b0JBQ3JCLFNBQVE7aUJBQ1g7Z0JBRUQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUU7b0JBQUMsT0FBTyxLQUFLLENBQUE7aUJBQUM7Z0JBQzFDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFO29CQUFDLE9BQU8sS0FBSyxDQUFBO2lCQUFDO2FBQ25EOzs7Ozs7Ozs7UUFFRCxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQUMsT0FBTyxLQUFLLENBQUE7U0FBQztRQUV0RCxPQUFPLElBQUksQ0FBQTtJQUNmLENBQUM7SUFFTSx5Q0FBTyxHQUFkO1FBQ0ksT0FBTyxxQkFBUyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFBO0lBQ25DLENBQUM7SUFFTSx5Q0FBTyxHQUFkO1FBQ0ksT0FBTyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsTUFBTSxDQUFBO0lBQy9CLENBQUM7SUFsRmEsa0NBQVUsR0FBRyxFQUFFLENBQUE7SUFJN0I7UUFGQyxjQUFXO1FBQ1gsY0FBVzs7NERBQ1E7SUF3QnBCO1FBREMsY0FBVzs7OzZEQUdYO0lBcURMLDhCQUFDO0NBQUEsQUFwRkQsSUFvRkM7QUFwRlksMERBQXVCIn0=