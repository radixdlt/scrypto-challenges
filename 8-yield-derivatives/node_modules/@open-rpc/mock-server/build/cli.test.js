"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var child_process_1 = require("child_process");
var examples_1 = __importDefault(require("@open-rpc/examples"));
var http_1 = __importDefault(require("http"));
describe("cli", function () {
    it("can be run with an example", function (done) {
        var data = JSON.stringify({
            id: 1,
            jsonrpc: "2.0",
            method: "addition",
            params: [2, 2],
        });
        var options = {
            hostname: "localhost",
            port: 3333,
            path: "/",
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Content-Length": data.length,
            },
        };
        var childProc = child_process_1.exec("node ./build/cli.js -d '" + JSON.stringify(examples_1.default.simpleMath) + "'");
        setTimeout(function () {
            var req = http_1.default.request(options, function (res) {
                expect(res.statusCode).toBe(200);
                res.on("data", function (d) {
                    expect(JSON.parse(d.toString()).result).toBe(4);
                    childProc.kill("SIGHUP");
                    setTimeout(done, 2000);
                });
            });
            req.on("error", function (error) { throw error; });
            req.write(data);
            req.end();
        }, 1000);
    }, 10000);
    it("can run in service mode", function (done) {
        var childProc = child_process_1.exec("node ./build/cli.js -m service -p 3334");
        var requestBody = JSON.stringify({
            id: 1,
            jsonrpc: "2.0",
            method: "mock",
            params: [examples_1.default.simpleMath],
        });
        var reqObj = {
            hostname: "0.0.0.0",
            port: 3334,
            path: "/",
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Content-Length": requestBody.length,
            },
        };
        setTimeout(function () {
            var req = http_1.default.request(reqObj, function (res) {
                expect(res.statusCode).toBe(200);
                res.on("data", function (d) {
                    expect(JSON.parse(d.toString()).result).toBe("simpleMath-1.0.0");
                    req.removeAllListeners();
                    var simpleMathReqBody = JSON.stringify({
                        id: 2,
                        jsonrpc: "2.0",
                        method: "addition",
                        params: [2, 2],
                    });
                    var simpleMathReqObj = {
                        hostname: "localhost",
                        port: 3334,
                        path: "/simpleMath-1.0.0",
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                            "Content-Length": simpleMathReqBody.length,
                        },
                    };
                    var insideReq = http_1.default.request(simpleMathReqObj, function (insideRes) {
                        expect(insideRes.statusCode).toBe(200);
                        insideRes.on("data", function (insideD) {
                            expect(JSON.parse(insideD.toString()).result).toBe(4);
                            childProc.kill("SIGHUP");
                            insideReq.removeAllListeners();
                            setTimeout(done, 2000);
                        });
                    });
                    insideReq.on("error", function (error) { throw error; });
                    insideReq.write(simpleMathReqBody);
                    insideReq.end();
                });
            });
            req.on("error", function (error) { throw error; });
            req.write(requestBody);
            req.end();
        }, 5000);
    }, 20000);
});
