import { Router, MethodMapping } from "./router";
import { OpenrpcDocument as OpenRPC } from "@open-rpc/meta-schema";
import { ServerTransport, TransportOptions, TransportNames } from "./transports";
interface TransportConfig {
    type: TransportNames;
    options: TransportOptions;
}
export interface MockModeOptions {
    mockMode: boolean;
}
export interface ServerOptions {
    openrpcDocument: OpenRPC;
    transportConfigs?: TransportConfig[];
    methodMapping?: MethodMapping | MockModeOptions;
}
export default class Server {
    private routers;
    private transports;
    constructor(options: ServerOptions);
    addTransport(transport: ServerTransport): void;
    addDefaultTransport(transportType: TransportNames, transportOptions: TransportOptions): void;
    addRouter(openrpcDocument: OpenRPC, methodMapping: MethodMapping | MockModeOptions): Router;
    removeRouter(routerToRemove: Router): void;
    start(): void;
}
export {};
