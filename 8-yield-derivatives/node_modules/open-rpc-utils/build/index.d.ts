import dereferenceDocument, { OpenRPCDocumentDereferencingError } from "./dereference-document";
import validateOpenRPCDocument, { OpenRPCDocumentValidationError } from "./validate-open-rpc-document";
import { generateMethodParamId, generateMethodResultId, ContentDescriptorNotFoundInMethodError } from "./generate-method-id";
import { ParameterValidationError, MethodNotFoundError } from "./method-call-validator";
declare const parseOpenRPCDocument: (schema?: string | import("@open-rpc/meta-schema").OpenrpcDocument, options?: import("./parse-open-rpc-document").ParseOpenRPCDocumentOptions) => Promise<import("@open-rpc/meta-schema").OpenrpcDocument>;
export * from "./method-call-validator";
export { dereferenceDocument, parseOpenRPCDocument, generateMethodParamId, generateMethodResultId, validateOpenRPCDocument, ParameterValidationError, MethodNotFoundError, OpenRPCDocumentValidationError, OpenRPCDocumentDereferencingError, ContentDescriptorNotFoundInMethodError, };
